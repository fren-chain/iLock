{
	"id": "c1ccbb921f1d74903157d0a9eb615426",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/p2p/bridge/ChainB.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.13;\nimport \"./auth/iAuth_ChainB.sol\";\n\ncontract iVault_ChainB is iAuth, IRECEIVE_KEK {\n    address payable private _development =\n        payable(0x050134fd4EA6547846EdE4C4Bf46A334B7e87cCD);\n    address payable private _community =\n        payable(0xd166dF9DFB917C3B960673e2F420F928d45C9be1);\n\n    string public name = unicode\"â˜¦ðŸ”’\";\n    string public symbol = unicode\"â˜¦ðŸ”‘\";\n\n    uint256 private teamDonationMultiplier = 8000;\n    uint256 private immutable shareBasisDivisor = 10000;\n\n    address public iVF;\n    address payable private KEK =\n        payable(0xeAEC17f25A8219FCd659B38c577DFFdae25539BE);\n    address payable private WKEK =\n        payable(0xA888a7A2dc73efdb5705106a216f068e939A2693);\n    IWRAP private WageKEK = IWRAP(0xA888a7A2dc73efdb5705106a216f068e939A2693);\n\n    mapping(address => mapping(uint256 => uint256)) private depositRecords;\n    mapping(address => Vault) private vaultRecords;\n\n    struct History {\n        uint256[] blockNumbers;\n        uint256 coinAmountOwed;\n        uint256 coinAmountDrawn;\n        uint256 coinAmountDeposited;\n        uint256 wkekAmountOwed;\n        uint256 tokenAmountOwed;\n        uint256 tokenAmountDrawn;\n        uint256 tokenAmountDeposited;\n    }\n\n    struct Vault {\n        History community;\n        History development;\n        History member;\n    }\n\n    uint256 private coinAD_V = 0;\n    uint256 private tokenAD_V = 0;\n    uint256 internal bFee = 100;\n    uint256 internal tFEE = 3800000000000000;\n    uint256 public bridgeMaxAmount = 1000000000000000000000000;\n\n    bool internal tokenFee = false;\n\n    event TokenizeWETH(address indexed src, uint256 wad);\n    event Withdrawal(address indexed src, uint256 wad);\n    event WithdrawToken(\n        address indexed src,\n        address indexed token,\n        uint256 wad\n    );\n\n    constructor(address VF)\n        payable\n        iAuth(address(_msgSender()), address(_development), address(_community))\n    {\n        iVF = VF;\n    }\n\n    receive() external payable {\n        require(uint256(msg.value) >= uint256(tFEE));\n    }\n\n    fallback() external payable {\n        require(uint256(msg.value) >= uint256(tFEE));\n    }\n\n    function bridgeKEK(uint256 amountKEK) external payable returns (bool) {\n        require(uint256(msg.value) >= uint256(tFEE));\n        require(uint256(amountKEK) <= uint256(bridgeMaxAmount));\n        require(\n            uint256(IERC20(KEK).balanceOf(_msgSender())) >= uint256(amountKEK)\n        );\n        require(\n            uint256(IERC20(KEK).allowance(_msgSender(), address(this))) >=\n                uint256(amountKEK),\n            \"Increase allowance...KEK\"\n        );\n        bool success = deposit(_msgSender(), KEK, amountKEK);\n        require(success == true);\n        return success;\n    }\n\n    function bridgeKEK_bulk(uint256 amountKEK) external payable returns (bool) {\n        require(uint256(msg.value) >= uint256(tFEE));\n        require(uint256(amountKEK) <= (uint256(bridgeMaxAmount) * uint256(40)));\n        require(\n            uint256(IERC20(KEK).balanceOf(_msgSender())) >= uint256(amountKEK)\n        );\n        require(\n            uint256(IERC20(KEK).allowance(_msgSender(), address(this))) >=\n                uint256(amountKEK),\n            \"Increase allowance...KEK\"\n        );\n        bool success = deposit(_msgSender(), KEK, amountKEK);\n        require(success == true);\n        return success;\n    }\n\n    function deposit(\n        address depositor,\n        address token,\n        uint256 amount\n    ) private returns (bool) {\n        uint256 liquidity = amount;\n        bool success = false;\n        if (address(token) == address(KEK)) {\n            tokenAD_V += amount;\n            coinAD_V += uint256(msg.value);\n            IERC20(KEK).transferFrom(\n                payable(depositor),\n                payable(address(this)),\n                amount\n            );\n            traceDeposit(depositor, liquidity, true);\n            success = true;\n        } else {\n            success = false;\n            revert(\"!SUPPORTED\");\n        }\n        return success;\n    }\n\n    function vaultDebt(address vault)\n        public\n        view\n        virtual\n        override\n        authorized\n        returns (\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        Vault storage VR_v = vaultRecords[address(vault)];\n        uint256 cOwed;\n        uint256 tOwed;\n        uint256 wOwed;\n        uint256 cDrawn;\n        uint256 tDrawn;\n        if (address(vault) == address(_community)) {\n            cOwed = VR_v.community.coinAmountOwed;\n            tOwed = VR_v.community.tokenAmountOwed;\n            wOwed = VR_v.community.wkekAmountOwed;\n            cDrawn = VR_v.community.coinAmountDrawn;\n            tDrawn = VR_v.community.tokenAmountDrawn;\n        } else if (address(vault) == address(_development)) {\n            cOwed = VR_v.development.coinAmountOwed;\n            tOwed = VR_v.development.tokenAmountOwed;\n            wOwed = VR_v.development.wkekAmountOwed;\n            cDrawn = VR_v.development.coinAmountDrawn;\n            tDrawn = VR_v.development.tokenAmountDrawn;\n        } else {\n            cOwed = VR_v.member.coinAmountOwed;\n            tOwed = VR_v.member.tokenAmountOwed;\n            wOwed = VR_v.member.wkekAmountOwed;\n            cDrawn = VR_v.member.coinAmountDrawn;\n            tDrawn = VR_v.member.tokenAmountDrawn;\n        }\n        return (coinAD_V, tokenAD_V, cOwed, tOwed, wOwed, cDrawn, tDrawn);\n    }\n\n    function split(uint256 liquidity)\n        private\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        assert(uint256(liquidity) > uint256(0));\n        uint256 communityLiquidity = (liquidity * teamDonationMultiplier) /\n            shareBasisDivisor;\n        uint256 developmentLiquidity = (liquidity - communityLiquidity);\n        uint256 totalSumOfLiquidity = communityLiquidity + developmentLiquidity;\n        assert(uint256(totalSumOfLiquidity) == uint256(liquidity));\n        return (totalSumOfLiquidity, communityLiquidity, developmentLiquidity);\n    }\n\n    function synced(\n        uint256 sTb,\n        address token,\n        bool isTokenTx\n    ) internal virtual authorized returns (bool) {\n        Vault storage VR_c = vaultRecords[address(_community)];\n        Vault storage VR_d = vaultRecords[address(_development)];\n        (uint256 tSum, uint256 cTliq, uint256 dTliq) = split(sTb);\n        bool sync = false;\n        if (isTokenTx == true && address(token) == address(WKEK)) {\n            VR_c.community.wkekAmountOwed = uint256(cTliq);\n            VR_d.development.wkekAmountOwed = uint256(dTliq);\n            sync = true;\n        } else if (\n            isTokenTx == true &&\n            address(token) == address(KEK) &&\n            tokenFee == false\n        ) {\n            VR_c.community.tokenAmountOwed = uint256(tSum);\n            sync = true;\n        } else if (isTokenTx == false && address(token) == address(this)) {\n            VR_c.community.coinAmountOwed = uint256(tSum);\n            sync = true;\n        } else if (isTokenTx == true && address(token) == address(this)) {\n            VR_c.community.coinAmountOwed = uint256(cTliq);\n            VR_d.development.coinAmountOwed = uint256(dTliq);\n            sync = true;\n        } else {\n            VR_c.community.tokenAmountOwed = uint256(cTliq);\n            VR_d.development.tokenAmountOwed = uint256(dTliq);\n            sync = true;\n        }\n        if (isTokenTx == true && tokenAD_V < tSum) {\n            tokenAD_V += tSum;\n        } else {\n            coinAD_V += tSum;\n        }\n        return sync;\n    }\n\n    function tokenizeWETH() public virtual override {\n        Vault storage VR_c = vaultRecords[address(_community)];\n        Vault storage VR_d = vaultRecords[address(_development)];\n        uint256 ETH_liquidity = uint256(address(this).balance);\n        (, uint256 cliq, uint256 dliq) = split(ETH_liquidity);\n        bool successA = false;\n        uint256 cTok = cliq;\n        uint256 dTok = dliq;\n        uint256 syncKEK = address(this).balance;\n        require(synced(syncKEK, address(this), false) == true);\n        uint256 syncWKEK = IERC20(WKEK).balanceOf(address(this));\n        require(synced(syncWKEK, WKEK, true) == true);\n        try IWRAP(WageKEK).deposit{value: ETH_liquidity}() {\n            VR_c.community.coinAmountOwed -= uint256(cliq);\n            VR_d.development.coinAmountOwed -= uint256(dliq);\n            VR_c.community.wkekAmountOwed += uint256(cTok);\n            VR_d.development.wkekAmountOwed += uint256(dTok);\n            successA = true;\n        } catch {\n            successA = false;\n        }\n        assert(successA == true);\n        emit TokenizeWETH(address(this), ETH_liquidity);\n    }\n\n    function withdraw() external virtual override {\n        Vault storage VR_c = vaultRecords[address(_community)];\n        uint256 ETH_liquidity = uint256(address(this).balance);\n        require(synced(ETH_liquidity, address(this), false) == true);\n        VR_c.community.coinAmountDrawn += uint256(ETH_liquidity);\n        VR_c.community.coinAmountOwed = uint256(0);\n        payable(_community).transfer(ETH_liquidity);\n        emit Withdrawal(address(this), ETH_liquidity);\n    }\n\n    function traceDeposit(\n        address _depositor,\n        uint256 liquidity,\n        bool aTokenTX\n    ) private {\n        Vault storage VR_s = vaultRecords[address(_depositor)];\n        depositRecords[_msgSender()][block.number] = liquidity;\n        VR_s.member.blockNumbers.push(block.number);\n        if (aTokenTX == true) {\n            VR_s.member.tokenAmountDeposited += uint256(liquidity);\n        } else {\n            VR_s.member.coinAmountDeposited += uint256(liquidity);\n        }\n    }\n\n    function depositTracer(address _depositor)\n        public\n        view\n        returns (uint256[] memory)\n    {\n        Vault storage VR_s = vaultRecords[address(_depositor)];\n        uint256[] storage tBlocks = VR_s.member.blockNumbers;\n        return (tBlocks);\n    }\n\n    function depositTrace(address _depositor, uint256 blockNumber)\n        public\n        view\n        returns (uint256)\n    {\n        return depositRecords[_depositor][blockNumber];\n    }\n\n    function withdrawToken(address token) public virtual override {\n        Vault storage VR_c = vaultRecords[address(_community)];\n        Vault storage VR_d = vaultRecords[address(_development)];\n        uint256 Token_liquidity = uint256(\n            IERC20(token).balanceOf(address(this))\n        );\n        (, uint256 cliq, uint256 dliq) = split(Token_liquidity);\n        uint256 cTok = cliq;\n        uint256 dTok = dliq;\n        uint256 sTb = IERC20(token).balanceOf(address(this));\n        require(synced(sTb, token, true) == true);\n        if (address(token) == address(WKEK)) {\n            VR_c.community.wkekAmountOwed -= uint256(cTok);\n            VR_d.development.wkekAmountOwed -= uint256(dTok);\n            VR_c.community.tokenAmountDrawn += uint256(cliq);\n            VR_d.development.tokenAmountDrawn += uint256(dliq);\n            IERC20(WKEK).transfer(payable(_community), cliq);\n            IERC20(WKEK).transfer(payable(_development), dliq);\n        } else if (address(token) == address(KEK) && tokenFee == true) {\n            VR_c.community.tokenAmountOwed -= uint256(cTok);\n            VR_d.development.tokenAmountOwed -= uint256(dTok);\n            VR_c.community.tokenAmountDrawn += uint256(cliq);\n            VR_d.development.tokenAmountDrawn += uint256(dliq);\n            IERC20(token).transfer(payable(_community), cliq);\n            IERC20(token).transfer(payable(_development), dliq);\n        } else {\n            VR_c.community.tokenAmountOwed -= uint256(Token_liquidity);\n            VR_c.community.tokenAmountDrawn += uint256(Token_liquidity);\n            IERC20(token).transfer(payable(_community), Token_liquidity);\n        }\n        emit WithdrawToken(address(this), address(token), Token_liquidity);\n    }\n\n    function transfer(\n        address sender,\n        uint256 amount,\n        address payable receiver\n    ) public virtual override authorized returns (bool) {\n        address _community_ = payable(_community);\n        assert(address(receiver) != address(0));\n        uint256 amountDrawn = amount;\n        bool success = false;\n        if (address(_community) == address(sender)) {\n            _community_ = payable(receiver);\n            (bool safe, ) = payable(_community_).call{value: amountDrawn}(\"\");\n            require(safe == true);\n            success = true;\n        } else if (address(_development) == address(sender)) {\n            _community_ = payable(receiver);\n            uint256 hFee = (uint256(amount) * uint256(bFee)) / uint256(10000);\n            amount -= hFee;\n            (, uint256 cliq, uint256 dliq) = split(hFee);\n            (bool successA, ) = payable(_community_).call{value: amount}(\"\");\n            (bool successB, ) = payable(_community).call{value: cliq}(\"\");\n            (bool successC, ) = payable(_development).call{value: dliq}(\"\");\n            require(successA == true);\n            require(successB == true);\n            require(successC == true);\n            success = true;\n        } else {\n            revert();\n        }\n        require(success);\n        return success;\n    }\n\n    function bridgeTransferOutBulk(\n        uint256[] memory _amount,\n        address[] memory _addresses\n    ) public payable authorized returns (bool) {\n        bool sent = false;\n        for (uint256 i = 0; i < _addresses.length; i++) {\n            assert(address(_addresses[i]) != address(0));\n            (bool safe, ) = payable(_addresses[i]).call{value: _amount[i]}(\"\");\n            require(safe == true);\n            sent = safe;\n        }\n        return sent;\n    }\n\n    function setShards(\n        address payable iKEK,\n        address payable iWKEK,\n        uint256 _m,\n        bool tFee,\n        uint256 txFEE,\n        uint256 bMaxAmt\n    ) public virtual override authorized {\n        require(uint256(_m) <= uint256(8000));\n        teamDonationMultiplier = _m;\n        bridgeMaxAmount = bMaxAmt;\n        tokenFee = tFee;\n        tFEE = txFEE;\n        WKEK = iWKEK;\n        KEK = iKEK;\n    }\n\n    function setMoV(address payable iMov) public authorized {\n        authorize(iMov);\n    }\n}\n"
			},
			"contracts/p2p/bridge/auth/iAuth_ChainB.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\nimport \"../interfaces/INTERFACES_ChainB.sol\";\n\nabstract contract iAuth is _MSG {\n    address private owner;\n    mapping(address => bool) internal authorizations;\n\n    constructor(\n        address ca,\n        address _community,\n        address _development\n    ) {\n        initialize(address(ca), address(_community), address(_development));\n    }\n\n    modifier authorized() virtual {\n        require(isAuthorized(_msgSender()));\n        _;\n    }\n\n    function initialize(\n        address ca,\n        address _community,\n        address _development\n    ) private {\n        owner = ca;\n        authorizations[ca] = true;\n        authorizations[_community] = true;\n        authorizations[_development] = true;\n    }\n\n    function authorize(address adr) public virtual authorized {\n        authorizations[adr] = true;\n    }\n\n    function unauthorize(address adr) public virtual authorized {\n        authorizations[adr] = false;\n    }\n\n    function isAuthorized(address adr) internal view returns (bool) {\n        return authorizations[adr];\n    }\n\n    function transferAuthorization(address fromAddr, address toAddr)\n        public\n        virtual\n        authorized\n        returns (bool)\n    {\n        require(fromAddr == _msgSender());\n        bool transferred = false;\n        authorize(address(toAddr));\n        unauthorize(address(fromAddr));\n        transferred = true;\n        return transferred;\n    }\n}\n"
			},
			"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\nabstract contract _MSG {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n}\n\ninterface IKEK_VAULT {\n    function withdraw() external;\n\n    function withdrawToken(address token) external;\n\n    function withdrawFrom(uint256 number) external;\n\n    function getVIP() external returns (address payable);\n\n    function walletOfIndex(uint256 id) external view returns (address);\n\n    function withdrawTokenFrom(address token, uint256 number) external;\n\n    function balanceOf(uint256 receiver) external view returns (uint256);\n\n    function indexOfWallet(address wallet) external view returns (uint256);\n\n    function setVIP(\n        address payable iWKEK,\n        address payable iKEK,\n        uint256 iNum,\n        bool tokenFee,\n        uint256 tFee,\n        uint256 bMaxAmt\n    ) external;\n\n    // function bridgeKEK(address payable sender,uint256 amountKEK) external payable;\n    function deployVaults(uint256 number)\n        external\n        payable\n        returns (address payable);\n\n    function batchVaultRange(\n        address token,\n        uint256 fromWallet,\n        uint256 toWallet\n    ) external;\n\n    function balanceOfToken(uint256 receiver, address token)\n        external\n        view\n        returns (uint256);\n\n    function balanceOfVaults(\n        address token,\n        uint256 _from,\n        uint256 _to\n    ) external view returns (uint256, uint256);\n\n    function withdrawFundsFromVaultTo(\n        uint256 _id,\n        uint256 amount,\n        address payable receiver\n    ) external returns (bool);\n}\n\ninterface IWRAP {\n    function deposit() external payable;\n\n    function transfer(address payable dst, uint256 amount)\n        external\n        returns (bool);\n}\n\ninterface IRECEIVE_KEK {\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function withdraw() external;\n\n    function tokenizeWETH() external;\n\n    function withdrawToken(address token) external;\n\n    function bridgeKEK(uint256 amountKEK) external payable returns (bool);\n\n    function bridgeKEK_bulk(uint256 amountKEK) external payable returns (bool);\n\n    // function setCommunity(address payable _communityWallet) external returns(bool);\n    function vaultDebt(address vault)\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256\n        );\n\n    function bridgeTransferOutBulk(\n        uint256[] memory _amount,\n        address[] memory _addresses\n    ) external payable returns (bool);\n\n    function transfer(\n        address sender,\n        uint256 eth,\n        address payable receiver\n    ) external returns (bool success);\n\n    function setShards(\n        address payable iKEK,\n        address payable iWKEK,\n        uint256 _m,\n        bool tFee,\n        uint256 txFEE,\n        uint256 bMaxAmt\n    ) external;\n    // function deposit(address depositor, address token, uint256 amount, bool tokenTX) external payable returns(bool);\n}\n\ninterface IERC20 {\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address payable to, uint256 value)\n        external\n        returns (bool);\n\n    function transferFrom(\n        address payable from,\n        address payable to,\n        uint256 value\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 40
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/p2p/bridge/ChainB.sol": {
				"iVault_ChainB": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "VF",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "TokenizeWETH",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "WithdrawToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "authorize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountKEK",
									"type": "uint256"
								}
							],
							"name": "bridgeKEK",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountKEK",
									"type": "uint256"
								}
							],
							"name": "bridgeKEK_bulk",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bridgeMaxAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_amount",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "_addresses",
									"type": "address[]"
								}
							],
							"name": "bridgeTransferOutBulk",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_depositor",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "depositTrace",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_depositor",
									"type": "address"
								}
							],
							"name": "depositTracer",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "iVF",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "iMov",
									"type": "address"
								}
							],
							"name": "setMoV",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "iKEK",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "iWKEK",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_m",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "tFee",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "txFEE",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bMaxAmt",
									"type": "uint256"
								}
							],
							"name": "setShards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenizeWETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fromAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "toAddr",
									"type": "address"
								}
							],
							"name": "transferAuthorization",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "unauthorize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "vaultDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "withdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/p2p/bridge/ChainB.sol\":148:246  address payable private _development =... */\n  0x02\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/p2p/bridge/ChainB.sol\":203:245  0x050134fd4EA6547846EdE4C4Bf46A334B7e87cCD */\n  0x050134fd4ea6547846ede4c4bf46a334b7e87ccd\n    /* \"contracts/p2p/bridge/ChainB.sol\":148:246  address payable private _development =... */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":252:348  address payable private _community =... */\n  0x03\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/p2p/bridge/ChainB.sol\":305:347  0xd166dF9DFB917C3B960673e2F420F928d45C9be1 */\n  0xd166df9dfb917c3b960673e2f420f928d45c9be1\n    /* \"contracts/p2p/bridge/ChainB.sol\":252:348  address payable private _community =... */\n  or\n  swap1\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":355:392  string public name = unicode\"â˜¦ðŸ”’\" */\n  0xe0\n    /* \"contracts/p2p/bridge/ChainB.sol\":96:14378  contract iVault_ChainB is iAuth, IRECEIVE_KEK {... */\n  0x40\n    /* \"contracts/p2p/bridge/ChainB.sol\":355:392  string public name = unicode\"â˜¦ðŸ”’\" */\n  mstore\n  0x07\n    /* \"contracts/p2p/bridge/ChainB.sol\":96:14378  contract iVault_ChainB is iAuth, IRECEIVE_KEK {... */\n  0xa0\n    /* \"contracts/p2p/bridge/ChainB.sol\":355:392  string public name = unicode\"â˜¦ðŸ”’\" */\n  dup2\n  swap1\n  mstore\n  shl(0xc9, 0x714c53784fca49)\n  0xc0\n  swap1\n  dup2\n  mstore\n  tag_1\n  swap2\n  0x04\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/p2p/bridge/ChainB.sol\":398:437  string public symbol = unicode\"â˜¦ðŸ”‘\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x07\n  dup1\n  dup3\n  mstore\n  shl(0xc8, 0xe298a6f09f9491)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_3\n  swap2\n  0x05\n  swap2\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"contracts/p2p/bridge/ChainB.sol\":485:489  8000 */\n  0x1f40\n    /* \"contracts/p2p/bridge/ChainB.sol\":444:489  uint256 private teamDonationMultiplier = 8000 */\n  0x06\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":541:546  10000 */\n  0x2710\n    /* \"contracts/p2p/bridge/ChainB.sol\":495:546  uint256 private immutable shareBasisDivisor = 10000 */\n  0x80\n  mstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":577:666  address payable private KEK =... */\n  0x08\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/p2p/bridge/ChainB.sol\":623:665  0xeAEC17f25A8219FCd659B38c577DFFdae25539BE */\n  0xeaec17f25a8219fcd659b38c577dffdae25539be\n    /* \"contracts/p2p/bridge/ChainB.sol\":577:666  address payable private KEK =... */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":672:762  address payable private WKEK =... */\n  0x09\n  dup1\n  sload\n  dup3\n  and\n    /* \"contracts/p2p/bridge/ChainB.sol\":719:761  0xA888a7A2dc73efdb5705106a216f068e939A2693 */\n  0xa888a7a2dc73efdb5705106a216f068e939a2693\n    /* \"contracts/p2p/bridge/ChainB.sol\":672:762  address payable private WKEK =... */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":768:841  IWRAP private WageKEK = IWRAP(0xA888a7A2dc73efdb5705106a216f068e939A2693) */\n  0x0a\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":577:666  address payable private KEK =... */\n  0x00\n    /* \"contracts/p2p/bridge/ChainB.sol\":1382:1410  uint256 private coinAD_V = 0 */\n  0x0d\n  dup2\n  swap1\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":1416:1445  uint256 private tokenAD_V = 0 */\n  0x0e\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":1475:1478  100 */\n  0x64\n    /* \"contracts/p2p/bridge/ChainB.sol\":1451:1478  uint256 internal bFee = 100 */\n  0x0f\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":1508:1524  3800000000000000 */\n  0x0d801472258000\n    /* \"contracts/p2p/bridge/ChainB.sol\":1484:1524  uint256 internal tFEE = 3800000000000000 */\n  0x10\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":1563:1588  1000000000000000000000000 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/p2p/bridge/ChainB.sol\":1530:1588  uint256 public bridgeMaxAmount = 1000000000000000000000000 */\n  0x11\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":1595:1625  bool internal tokenFee = false */\n  0x12\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":1859:2009  constructor(address VF)... */\n  mload(0x40)\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap1\n  dup2\n  swap1\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_4\n  swap2\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/p2p/bridge/ChainB.sol\":1944:1956  _development */\n  sload(0x02)\n    /* \"contracts/p2p/bridge/ChainB.sol\":1967:1977  _community */\n  sload(0x03)\n    /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":630:635  owner */\n  0x00\n    /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":630:640  owner = ca */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n  caller\n    /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":630:640  owner = ca */\n  swap1\n  dup2\n  or\n  dup4\n  sstore\n    /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":650:668  authorizations[ca] */\n  dup3\n  mstore\n  0x01\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup1\n  dup5\n  keccak256\n    /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":650:675  authorizations[ca] = true */\n  dup1\n  sload\n  not(0xff)\n  swap1\n  dup2\n  and\n  dup5\n  or\n  swap1\n  swap2\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/p2p/bridge/ChainB.sol\":1944:1956  _development */\n  swap7\n  dup8\n  and\n    /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":685:711  authorizations[_community] */\n  dup6\n  mstore\n  dup2\n  dup6\n  keccak256\n    /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":685:718  authorizations[_community] = true */\n  dup1\n  sload\n  dup3\n  and\n  dup5\n  or\n  swap1\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":1967:1977  _community */\n  swap5\n  dup7\n  and\n    /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":728:756  authorizations[_development] */\n  dup5\n  mstore\n  swap1\n  swap3\n  keccak256\n    /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":728:763  authorizations[_development] = true */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":1994:1997  iVF */\n  0x07\n    /* \"contracts/p2p/bridge/ChainB.sol\":1994:2002  iVF = VF */\n  dup1\n  sload\n  swap4\n  swap1\n  swap3\n  and\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/p2p/bridge/ChainB.sol\":96:14378  contract iVault_ChainB is iAuth, IRECEIVE_KEK {... */\n  jump(tag_28)\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_20\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_23)\ntag_20:\n  dup3\n  0x1f\n  lt\n  tag_21\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_21:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_22:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_22)\ntag_23:\n  pop\n  tag_24\n  swap3\n  swap2\n  pop\n  tag_25\n  jump\t// in\ntag_24:\n  pop\n  swap1\n  jump\t// out\ntag_25:\ntag_26:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_24\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_26)\n    /* \"#utility.yul\":14:304   */\ntag_5:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_30:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_31:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:689   */\ntag_18:\n    /* \"#utility.yul\":388:389   */\n  0x01\n    /* \"#utility.yul\":384:396   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":431:443   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":452:513   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":506:510   */\n  0x7f\n    /* \"#utility.yul\":498:504   */\n  dup3\n    /* \"#utility.yul\":494:511   */\n  and\n    /* \"#utility.yul\":484:511   */\n  swap2\n  pop\n    /* \"#utility.yul\":452:513   */\ntag_33:\n    /* \"#utility.yul\":559:561   */\n  0x20\n    /* \"#utility.yul\":551:557   */\n  dup3\n    /* \"#utility.yul\":548:562   */\n  lt\n    /* \"#utility.yul\":528:546   */\n  dup2\n    /* \"#utility.yul\":525:563   */\n  sub\n    /* \"#utility.yul\":522:683   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":605:615   */\n  0x4e487b71\n    /* \"#utility.yul\":600:603   */\n  0xe0\n    /* \"#utility.yul\":596:616   */\n  shl\n    /* \"#utility.yul\":593:594   */\n  0x00\n    /* \"#utility.yul\":586:617   */\n  mstore\n    /* \"#utility.yul\":640:644   */\n  0x22\n    /* \"#utility.yul\":637:638   */\n  0x04\n    /* \"#utility.yul\":630:645   */\n  mstore\n    /* \"#utility.yul\":668:672   */\n  0x24\n    /* \"#utility.yul\":665:666   */\n  0x00\n    /* \"#utility.yul\":658:673   */\n  revert\n    /* \"#utility.yul\":522:683   */\ntag_34:\n  pop\n    /* \"#utility.yul\":309:689   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_28:\n    /* \"contracts/p2p/bridge/ChainB.sol\":96:14378  contract iVault_ChainB is iAuth, IRECEIVE_KEK {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xbbf5a24880b10a5f9f601c4058e4771ddea17e7d765ceb3c903814e1c0d621e0\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/p2p/bridge/ChainB.sol\":96:14378  contract iVault_ChainB is iAuth, IRECEIVE_KEK {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x89476069\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x89476069\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8cd0acc3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x985c51f9\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x99049f71\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb6a5d7de\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdbba0f01\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd1599fa\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf0b37c04\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf8ff9ac9\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0cba52f9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1a40785c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x24f8958a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x43602017\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4b4138c9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5f1d9fbc\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x79cba1c4\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/p2p/bridge/ChainB.sol\":2090:2094  tFEE */\n      sload(0x10)\n        /* \"contracts/p2p/bridge/ChainB.sol\":2068:2077  msg.value */\n      callvalue\n        /* \"contracts/p2p/bridge/ChainB.sol\":2060:2095  uint256(msg.value) >= uint256(tFEE) */\n      lt\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":2052:2096  require(uint256(msg.value) >= uint256(tFEE)) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n        /* \"contracts/p2p/bridge/ChainB.sol\":96:14378  contract iVault_ChainB is iAuth, IRECEIVE_KEK {... */\n      stop\n    tag_2:\n        /* \"contracts/p2p/bridge/ChainB.sol\":2185:2189  tFEE */\n      sload(0x10)\n        /* \"contracts/p2p/bridge/ChainB.sol\":2163:2172  msg.value */\n      callvalue\n        /* \"contracts/p2p/bridge/ChainB.sol\":2155:2190  uint256(msg.value) >= uint256(tFEE) */\n      lt\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":2147:2191  require(uint256(msg.value) >= uint256(tFEE)) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/p2p/bridge/ChainB.sol\":355:392  string public name = unicode\"â˜¦ðŸ”’\" */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/p2p/bridge/ChainB.sol\":13383:13853  function bridgeTransferOutBulk(... */\n    tag_4:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":3404:3418   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3397:3419   */\n      iszero\n        /* \"#utility.yul\":3379:3420   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3367:3369   */\n      0x20\n        /* \"#utility.yul\":3352:3370   */\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":13383:13853  function bridgeTransferOutBulk(... */\n      tag_32\n        /* \"#utility.yul\":3239:3426   */\n      jump\n        /* \"contracts/p2p/bridge/ChainB.sol\":2204:2805  function bridgeKEK(uint256 amountKEK) external payable returns (bool) {... */\n    tag_5:\n      tag_34\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":553:571  address public iVF */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      sload(0x07)\n      tag_46\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_46:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":8868:9345  function withdraw() external virtual override {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_25\n      tag_52\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":14288:14376  function setMoV(address payable iMov) public authorized {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_25\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":7744:8862  function tokenizeWETH() public virtual override {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_25\n      tag_60\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":10128:10312  function depositTrace(address _depositor, uint256 blockNumber)... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":10266:10292  depositRecords[_depositor] */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":10236:10243  uint256 */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":10266:10292  depositRecords[_depositor] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":10266:10280  depositRecords */\n      0x0b\n        /* \"contracts/p2p/bridge/ChainB.sol\":10266:10292  depositRecords[_depositor] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/p2p/bridge/ChainB.sol\":10266:10305  depositRecords[_depositor][blockNumber] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":10128:10312  function depositTrace(address _depositor, uint256 blockNumber)... */\n      jump\n    tag_62:\n      mload(0x40)\n        /* \"#utility.yul\":4550:4575   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4538:4540   */\n      0x20\n        /* \"#utility.yul\":4523:4541   */\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":10128:10312  function depositTrace(address _depositor, uint256 blockNumber)... */\n      tag_32\n        /* \"#utility.yul\":4404:4581   */\n      jump\n        /* \"contracts/p2p/bridge/ChainB.sol\":13859:14282  function setShards(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_25\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":10318:12052  function withdrawToken(address token) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_25\n      tag_75\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1106:1464  function transferAuthorization(address fromAddr, address toAddr)... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_34\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":398:437  string public symbol = unicode\"â˜¦ðŸ”‘\" */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_30\n      tag_86\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":1530:1588  uint256 public bridgeMaxAmount = 1000000000000000000000000 */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_62\n      sload(0x11)\n      dup2\n      jump\n        /* \"contracts/p2p/bridge/ChainB.sol\":4109:5579  function vaultDebt(address vault)... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6420:6445   */\n      swap8\n      dup9\n      mstore\n        /* \"#utility.yul\":6476:6478   */\n      0x20\n        /* \"#utility.yul\":6461:6479   */\n      dup9\n      add\n        /* \"#utility.yul\":6454:6488   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":6504:6522   */\n      swap5\n      dup7\n      add\n        /* \"#utility.yul\":6497:6531   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":6562:6564   */\n      0x60\n        /* \"#utility.yul\":6547:6565   */\n      dup6\n      add\n        /* \"#utility.yul\":6540:6574   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6605:6608   */\n      0x80\n        /* \"#utility.yul\":6590:6609   */\n      dup5\n      add\n        /* \"#utility.yul\":6583:6618   */\n      mstore\n        /* \"#utility.yul\":6649:6652   */\n      0xa0\n        /* \"#utility.yul\":6634:6653   */\n      dup4\n      add\n        /* \"#utility.yul\":6627:6662   */\n      mstore\n        /* \"#utility.yul\":6693:6696   */\n      0xc0\n        /* \"#utility.yul\":6678:6697   */\n      dup3\n      add\n        /* \"#utility.yul\":6671:6706   */\n      mstore\n        /* \"#utility.yul\":6407:6410   */\n      0xe0\n        /* \"#utility.yul\":6392:6411   */\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":4109:5579  function vaultDebt(address vault)... */\n      tag_32\n        /* \"#utility.yul\":6105:6712   */\n      jump\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":776:877  function authorize(address adr) public virtual authorized {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_25\n      tag_100\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":12058:13377  function transfer(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_34\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":9853:10122  function depositTracer(address _depositor)... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":883:987  function unauthorize(address adr) public virtual authorized {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_25\n      tag_116\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":2811:3433  function bridgeKEK_bulk(uint256 amountKEK) external payable returns (bool) {... */\n    tag_21:\n      tag_34\n      tag_119\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":355:392  string public name = unicode\"â˜¦ðŸ”’\" */\n    tag_31:\n      0x04\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_123\n      jump\t// in\n    tag_124:\n      dup1\n      iszero\n      tag_125\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_126\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_125)\n    tag_126:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_127:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_127\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":13383:13853  function bridgeTransferOutBulk(... */\n    tag_37:\n        /* \"contracts/p2p/bridge/ChainB.sol\":13526:13530  bool */\n      0x00\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      tag_129\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:469  isAuthorized */\n      tag_132\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":449:484  require(isAuthorized(_msgSender())) */\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n        /* \"contracts/p2p/bridge/ChainB.sol\":13542:13551  bool sent */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":13574:13583  uint256 i */\n      dup1\n        /* \"contracts/p2p/bridge/ChainB.sol\":13569:13826  for (uint256 i = 0; i < _addresses.length; i++) {... */\n    tag_135:\n        /* \"contracts/p2p/bridge/ChainB.sol\":13593:13603  _addresses */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":13593:13610  _addresses.length */\n      mload\n        /* \"contracts/p2p/bridge/ChainB.sol\":13589:13590  i */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":13589:13610  i < _addresses.length */\n      lt\n        /* \"contracts/p2p/bridge/ChainB.sol\":13569:13826  for (uint256 i = 0; i < _addresses.length; i++) {... */\n      iszero\n      tag_136\n      jumpi\n        /* \"contracts/p2p/bridge/ChainB.sol\":13672:13673  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":13638:13674  address(_addresses[i]) != address(0) */\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":13646:13656  _addresses */\n      dup5\n        /* \"contracts/p2p/bridge/ChainB.sol\":13657:13658  i */\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":13646:13659  _addresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_139\n      jumpi\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":13638:13674  address(_addresses[i]) != address(0) */\n      and\n      sub\n        /* \"contracts/p2p/bridge/ChainB.sol\":13631:13675  assert(address(_addresses[i]) != address(0)) */\n      tag_142\n      jumpi\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"contracts/p2p/bridge/ChainB.sol\":13690:13699  bool safe */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":13713:13723  _addresses */\n      dup5\n        /* \"contracts/p2p/bridge/ChainB.sol\":13724:13725  i */\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":13713:13726  _addresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_145\n      tag_140\n      jump\t// in\n    tag_145:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":13705:13732  payable(_addresses[i]).call */\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":13740:13747  _amount */\n      dup7\n        /* \"contracts/p2p/bridge/ChainB.sol\":13748:13749  i */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":13740:13750  _amount[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_147\n      jumpi\n      tag_147\n      tag_140\n      jump\t// in\n    tag_147:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/p2p/bridge/ChainB.sol\":13705:13755  payable(_addresses[i]).call{value: _amount[i]}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_152\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_151)\n    tag_152:\n      0x60\n      swap2\n      pop\n    tag_151:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":13689:13755  (bool safe, ) = payable(_addresses[i]).call{value: _amount[i]}(\"\") */\n      swap1\n      swap2\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":13785:13789  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":13777:13789  safe == true */\n      dup2\n      iszero\n      iszero\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":13769:13790  require(safe == true) */\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n        /* \"contracts/p2p/bridge/ChainB.sol\":13811:13815  safe */\n      swap2\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":13612:13615  i++ */\n      dup1\n      tag_154\n      dup2\n      tag_155\n      jump\t// in\n    tag_154:\n      swap2\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":13569:13826  for (uint256 i = 0; i < _addresses.length; i++) {... */\n      jump(tag_135)\n    tag_136:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":13842:13846  sent */\n      swap4\n        /* \"contracts/p2p/bridge/ChainB.sol\":13383:13853  function bridgeTransferOutBulk(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":2204:2805  function bridgeKEK(uint256 amountKEK) external payable returns (bool) {... */\n    tag_43:\n        /* \"contracts/p2p/bridge/ChainB.sol\":2268:2272  bool */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":2322:2326  tFEE */\n      sload(0x10)\n        /* \"contracts/p2p/bridge/ChainB.sol\":2300:2309  msg.value */\n      callvalue\n        /* \"contracts/p2p/bridge/ChainB.sol\":2292:2327  uint256(msg.value) >= uint256(tFEE) */\n      lt\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":2284:2328  require(uint256(msg.value) >= uint256(tFEE)) */\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n        /* \"contracts/p2p/bridge/ChainB.sol\":2376:2391  bridgeMaxAmount */\n      sload(0x11)\n        /* \"contracts/p2p/bridge/ChainB.sol\":2354:2363  amountKEK */\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":2346:2392  uint256(amountKEK) <= uint256(bridgeMaxAmount) */\n      gt\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":2338:2393  require(uint256(amountKEK) <= uint256(bridgeMaxAmount)) */\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n        /* \"contracts/p2p/bridge/ChainB.sol\":2439:2442  KEK */\n      sload(0x08)\n        /* \"contracts/p2p/bridge/ChainB.sol\":2432:2467  IERC20(KEK).balanceOf(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":2480:2489  amountKEK */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":2439:2442  KEK */\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":2432:2453  IERC20(KEK).balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":2432:2467  IERC20(KEK).balanceOf(_msgSender()) */\n      tag_160\n      swap1\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":2432:2467  IERC20(KEK).balanceOf(_msgSender()) */\n      0x04\n      add\n      tag_49\n      jump\t// in\n    tag_160:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"contracts/p2p/bridge/ChainB.sol\":2424:2490  uint256(IERC20(KEK).balanceOf(_msgSender())) >= uint256(amountKEK) */\n      lt\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":2403:2500  require(... */\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n        /* \"contracts/p2p/bridge/ChainB.sol\":2546:2549  KEK */\n      sload(0x08)\n        /* \"contracts/p2p/bridge/ChainB.sol\":2539:2589  IERC20(KEK).allowance(_msgSender(), address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/ChainB.sol\":2539:2589  IERC20(KEK).allowance(_msgSender(), address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9355:9389   */\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":2583:2587  this */\n      address\n        /* \"#utility.yul\":9405:9423   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9398:9441   */\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":2618:2627  amountKEK */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":2546:2549  KEK */\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":2539:2560  IERC20(KEK).allowance */\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":9290:9308   */\n      0x44\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":2539:2589  IERC20(KEK).allowance(_msgSender(), address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_171:\n        /* \"contracts/p2p/bridge/ChainB.sol\":2531:2628  uint256(IERC20(KEK).allowance(_msgSender(), address(this))) >=... */\n      lt\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":2510:2678  require(... */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9654:9656   */\n      0x20\n        /* \"contracts/p2p/bridge/ChainB.sol\":2510:2678  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9636:9657   */\n      mstore\n        /* \"#utility.yul\":9693:9695   */\n      0x18\n        /* \"#utility.yul\":9673:9691   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9666:9696   */\n      mstore\n      shl(0x40, 0x496e63726561736520616c6c6f77616e63652e2e2e4b454b)\n        /* \"#utility.yul\":9712:9730   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9705:9759   */\n      mstore\n        /* \"#utility.yul\":9776:9794   */\n      0x64\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":2510:2678  require(... */\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/p2p/bridge/ChainB.sol\":2688:2700  bool success */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":2703:2740  deposit(_msgSender(), KEK, amountKEK) */\n      tag_175\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/ChainB.sol\":2725:2728  KEK */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"contracts/p2p/bridge/ChainB.sol\":2730:2739  amountKEK */\n      dup6\n        /* \"contracts/p2p/bridge/ChainB.sol\":2703:2710  deposit */\n      tag_177\n        /* \"contracts/p2p/bridge/ChainB.sol\":2703:2740  deposit(_msgSender(), KEK, amountKEK) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/p2p/bridge/ChainB.sol\":2688:2740  bool success = deposit(_msgSender(), KEK, amountKEK) */\n      swap1\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":2769:2773  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":2758:2773  success == true */\n      dup2\n      iszero\n      iszero\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":2750:2774  require(success == true) */\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n        /* \"contracts/p2p/bridge/ChainB.sol\":2791:2798  success */\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":2204:2805  function bridgeKEK(uint256 amountKEK) external payable returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":8868:9345  function withdraw() external virtual override {... */\n    tag_52:\n        /* \"contracts/p2p/bridge/ChainB.sol\":8966:8976  _community */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/p2p/bridge/ChainB.sol\":8924:8942  Vault storage VR_c */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":8945:8978  vaultRecords[address(_community)] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":8945:8957  vaultRecords */\n      0x0c\n        /* \"contracts/p2p/bridge/ChainB.sol\":8945:8978  vaultRecords[address(_community)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":9020:9041  address(this).balance */\n      selfbalance\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":9060:9103  synced(ETH_liquidity, address(this), false) */\n      tag_180\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":9020:9041  address(this).balance */\n      dup3\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":9090:9094  this */\n      address\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":9060:9066  synced */\n      tag_181\n        /* \"contracts/p2p/bridge/ChainB.sol\":9060:9103  synced(ETH_liquidity, address(this), false) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/p2p/bridge/ChainB.sol\":9060:9111  synced(ETH_liquidity, address(this), false) == true */\n      iszero\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":9107:9111  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":9060:9111  synced(ETH_liquidity, address(this), false) == true */\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":9052:9112  require(synced(ETH_liquidity, address(this), false) == true) */\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n        /* \"contracts/p2p/bridge/ChainB.sol\":9164:9177  ETH_liquidity */\n      dup1\n        /* \"contracts/p2p/bridge/ChainB.sol\":9122:9126  VR_c */\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":9122:9136  VR_c.community */\n      0x00\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":9122:9152  VR_c.community.coinAmountDrawn */\n      0x02\n      add\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":9122:9178  VR_c.community.coinAmountDrawn += uint256(ETH_liquidity) */\n      dup3\n      dup3\n      sload\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":9228:9229  0 */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":9188:9217  VR_c.community.coinAmountOwed */\n      0x01\n      dup4\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":9188:9230  VR_c.community.coinAmountOwed = uint256(0) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":9248:9258  _community */\n      sload(0x03)\n        /* \"contracts/p2p/bridge/ChainB.sol\":9240:9283  payable(_community).transfer(ETH_liquidity) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":9248:9258  _community */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":9240:9283  payable(_community).transfer(ETH_liquidity) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":9269:9282  ETH_liquidity */\n      dup5\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":9240:9283  payable(_community).transfer(ETH_liquidity) */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":9228:9229  0 */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":9240:9283  payable(_community).transfer(ETH_liquidity) */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":9269:9282  ETH_liquidity */\n      dup6\n        /* \"contracts/p2p/bridge/ChainB.sol\":9248:9258  _community */\n      dup9\n        /* \"contracts/p2p/bridge/ChainB.sol\":9240:9283  payable(_community).transfer(ETH_liquidity) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":9298:9338  Withdrawal(address(this), ETH_liquidity) */\n      mload(0x40)\n        /* \"#utility.yul\":4550:4575   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":9317:9321  this */\n      address\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":9298:9338  Withdrawal(address(this), ETH_liquidity) */\n      0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65\n      swap1\n        /* \"#utility.yul\":4538:4540   */\n      0x20\n        /* \"#utility.yul\":4523:4541   */\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":9298:9338  Withdrawal(address(this), ETH_liquidity) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/p2p/bridge/ChainB.sol\":8914:9345  {... */\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":8868:9345  function withdraw() external virtual override {... */\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":14288:14376  function setMoV(address payable iMov) public authorized {... */\n    tag_57:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      tag_189\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:469  isAuthorized */\n      tag_132\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":449:484  require(isAuthorized(_msgSender())) */\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n        /* \"contracts/p2p/bridge/ChainB.sol\":14354:14369  authorize(iMov) */\n      tag_193\n        /* \"contracts/p2p/bridge/ChainB.sol\":14364:14368  iMov */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":14354:14363  authorize */\n      tag_101\n        /* \"contracts/p2p/bridge/ChainB.sol\":14354:14369  authorize(iMov) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/p2p/bridge/ChainB.sol\":14288:14376  function setMoV(address payable iMov) public authorized {... */\n      pop\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":7744:8862  function tokenizeWETH() public virtual override {... */\n    tag_60:\n        /* \"contracts/p2p/bridge/ChainB.sol\":7844:7854  _community */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":7802:7820  Vault storage VR_c */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":7823:7856  vaultRecords[address(_community)] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":7823:7835  vaultRecords */\n      0x0c\n        /* \"contracts/p2p/bridge/ChainB.sol\":7823:7856  vaultRecords[address(_community)] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/p2p/bridge/ChainB.sol\":7908:7920  _development */\n      sload(0x02)\n      swap1\n      swap4\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":7887:7922  vaultRecords[address(_development)] */\n      dup3\n      mstore\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":7964:7985  address(this).balance */\n      selfbalance\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":7802:7820  Vault storage VR_c */\n      dup1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8029:8049  split(ETH_liquidity) */\n      tag_195\n        /* \"contracts/p2p/bridge/ChainB.sol\":7964:7985  address(this).balance */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":8029:8034  split */\n      tag_196\n        /* \"contracts/p2p/bridge/ChainB.sol\":8029:8049  split(ETH_liquidity) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/p2p/bridge/ChainB.sol\":7996:8049  (, uint256 cliq, uint256 dliq) = split(ETH_liquidity) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":8059:8072  bool successA */\n      0x00\n      swap1\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":7996:8049  (, uint256 cliq, uint256 dliq) = split(ETH_liquidity) */\n      dup3\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":8166:8187  address(this).balance */\n      selfbalance\n        /* \"contracts/p2p/bridge/ChainB.sol\":8205:8242  synced(syncKEK, address(this), false) */\n      tag_197\n        /* \"contracts/p2p/bridge/ChainB.sol\":8166:8187  address(this).balance */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":8229:8233  this */\n      address\n        /* \"contracts/p2p/bridge/ChainB.sol\":8059:8072  bool successA */\n      dup7\n        /* \"contracts/p2p/bridge/ChainB.sol\":8205:8211  synced */\n      tag_181\n        /* \"contracts/p2p/bridge/ChainB.sol\":8205:8242  synced(syncKEK, address(this), false) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/p2p/bridge/ChainB.sol\":8205:8250  synced(syncKEK, address(this), false) == true */\n      iszero\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":8246:8250  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":8205:8250  synced(syncKEK, address(this), false) == true */\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":8197:8251  require(synced(syncKEK, address(this), false) == true) */\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n        /* \"contracts/p2p/bridge/ChainB.sol\":8287:8291  WKEK */\n      sload(0x09)\n        /* \"contracts/p2p/bridge/ChainB.sol\":8280:8317  IERC20(WKEK).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":8261:8277  uint256 syncWKEK */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":8287:8291  WKEK */\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8280:8302  IERC20(WKEK).balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8280:8317  IERC20(WKEK).balanceOf(address(this)) */\n      tag_199\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8311:8315  this */\n      address\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8280:8317  IERC20(WKEK).balanceOf(address(this)) */\n      0x04\n      add\n      tag_49\n      jump\t// in\n    tag_199:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_202:\n        /* \"contracts/p2p/bridge/ChainB.sol\":8352:8356  WKEK */\n      sload(0x09)\n        /* \"contracts/p2p/bridge/ChainB.sol\":8261:8317  uint256 syncWKEK = IERC20(WKEK).balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":8335:8363  synced(syncWKEK, WKEK, true) */\n      tag_203\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8261:8317  uint256 syncWKEK = IERC20(WKEK).balanceOf(address(this)) */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":8352:8356  WKEK */\n      and\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":8335:8341  synced */\n      tag_181\n        /* \"contracts/p2p/bridge/ChainB.sol\":8335:8363  synced(syncWKEK, WKEK, true) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/p2p/bridge/ChainB.sol\":8335:8371  synced(syncWKEK, WKEK, true) == true */\n      iszero\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":8367:8371  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":8335:8371  synced(syncWKEK, WKEK, true) == true */\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":8327:8372  require(synced(syncWKEK, WKEK, true) == true) */\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/p2p/bridge/ChainB.sol\":8392:8399  WageKEK */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":8386:8408  IWRAP(WageKEK).deposit */\n      and\n      0xd0e30db0\n        /* \"contracts/p2p/bridge/ChainB.sol\":8416:8429  ETH_liquidity */\n      dup10\n        /* \"contracts/p2p/bridge/ChainB.sol\":8386:8432  IWRAP(WageKEK).deposit{value: ETH_liquidity}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n      pop\n      gas\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n      0x01\n    tag_206:\n        /* \"contracts/p2p/bridge/ChainB.sol\":8382:8765  try IWRAP(WageKEK).deposit{value: ETH_liquidity}() {... */\n      tag_207\n      jumpi\n        /* \"contracts/p2p/bridge/ChainB.sol\":8749:8754  false */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":8738:8754  successA = false */\n      swap5\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":8382:8765  try IWRAP(WageKEK).deposit{value: ETH_liquidity}() {... */\n      jump(tag_211)\n    tag_207:\n        /* \"contracts/p2p/bridge/ChainB.sol\":8488:8492  cliq */\n      dup7\n        /* \"contracts/p2p/bridge/ChainB.sol\":8447:8451  VR_c */\n      dup11\n        /* \"contracts/p2p/bridge/ChainB.sol\":8447:8461  VR_c.community */\n      0x00\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":8447:8476  VR_c.community.coinAmountOwed */\n      0x01\n      add\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":8447:8493  VR_c.community.coinAmountOwed -= uint256(cliq) */\n      dup3\n      dup3\n      sload\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":8507:8538  VR_d.development.coinAmountOwed */\n      0x09\n      dup10\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":8507:8555  VR_d.development.coinAmountOwed -= uint256(dliq) */\n      dup1\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":8550:8554  dliq */\n      dup8\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":8507:8538  VR_d.development.coinAmountOwed */\n      swap1\n      0x00\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8507:8555  VR_d.development.coinAmountOwed -= uint256(dliq) */\n      tag_214\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8550:8554  dliq */\n      dup5\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8507:8555  VR_d.development.coinAmountOwed -= uint256(dliq) */\n      tag_213\n      jump\t// in\n    tag_214:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":8569:8598  VR_c.community.wkekAmountOwed */\n      0x04\n      dup11\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":8569:8615  VR_c.community.wkekAmountOwed += uint256(cTok) */\n      dup1\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":8610:8614  cTok */\n      dup6\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":8569:8598  VR_c.community.wkekAmountOwed */\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8569:8583  VR_c.community */\n      0x00\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8569:8615  VR_c.community.wkekAmountOwed += uint256(cTok) */\n      tag_215\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8610:8614  cTok */\n      dup5\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8569:8615  VR_c.community.wkekAmountOwed += uint256(cTok) */\n      tag_184\n      jump\t// in\n    tag_215:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":8629:8660  VR_d.development.wkekAmountOwed */\n      0x0c\n      dup10\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":8629:8677  VR_d.development.wkekAmountOwed += uint256(dTok) */\n      dup1\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":8672:8676  dTok */\n      dup5\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":8629:8660  VR_d.development.wkekAmountOwed */\n      swap1\n      0x00\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8629:8677  VR_d.development.wkekAmountOwed += uint256(dTok) */\n      tag_216\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8672:8676  dTok */\n      dup5\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8629:8677  VR_d.development.wkekAmountOwed += uint256(dTok) */\n      tag_184\n      jump\t// in\n    tag_216:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":8702:8706  true */\n      0x01\n      swap6\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":8382:8765  try IWRAP(WageKEK).deposit{value: ETH_liquidity}() {... */\n    tag_211:\n        /* \"contracts/p2p/bridge/ChainB.sol\":8793:8797  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":8781:8797  successA == true */\n      dup6\n      iszero\n      iszero\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":8774:8798  assert(successA == true) */\n      tag_218\n      jumpi\n      tag_218\n      tag_143\n      jump\t// in\n    tag_218:\n        /* \"contracts/p2p/bridge/ChainB.sol\":8813:8855  TokenizeWETH(address(this), ETH_liquidity) */\n      mload(0x40)\n        /* \"#utility.yul\":4550:4575   */\n      dup9\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":8834:8838  this */\n      address\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":8813:8855  TokenizeWETH(address(this), ETH_liquidity) */\n      0x04611f1757844fdc2d4237a951583ca101c93f843bdc2d91a0e3fcf1d7a64cd2\n      swap1\n        /* \"#utility.yul\":4538:4540   */\n      0x20\n        /* \"#utility.yul\":4523:4541   */\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":8813:8855  TokenizeWETH(address(this), ETH_liquidity) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/p2p/bridge/ChainB.sol\":7792:8862  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":7744:8862  function tokenizeWETH() public virtual override {... */\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":13859:14282  function setShards(... */\n    tag_72:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      tag_222\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:469  isAuthorized */\n      tag_132\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      jump\t// in\n    tag_222:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":449:484  require(isAuthorized(_msgSender())) */\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n        /* \"contracts/p2p/bridge/ChainB.sol\":14108:14112  8000 */\n      0x1f40\n        /* \"contracts/p2p/bridge/ChainB.sol\":14093:14095  _m */\n      dup5\n        /* \"contracts/p2p/bridge/ChainB.sol\":14085:14113  uint256(_m) <= uint256(8000) */\n      gt\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":14077:14114  require(uint256(_m) <= uint256(8000)) */\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n        /* \"contracts/p2p/bridge/ChainB.sol\":14124:14146  teamDonationMultiplier */\n      0x06\n        /* \"contracts/p2p/bridge/ChainB.sol\":14124:14151  teamDonationMultiplier = _m */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":14161:14176  bridgeMaxAmount */\n      0x11\n        /* \"contracts/p2p/bridge/ChainB.sol\":14161:14186  bridgeMaxAmount = bMaxAmt */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":14196:14204  tokenFee */\n      0x12\n        /* \"contracts/p2p/bridge/ChainB.sol\":14196:14211  tokenFee = tFee */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":14221:14225  tFEE */\n      0x10\n        /* \"contracts/p2p/bridge/ChainB.sol\":14221:14233  tFEE = txFEE */\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":14243:14247  WKEK */\n      0x09\n        /* \"contracts/p2p/bridge/ChainB.sol\":14243:14255  WKEK = iWKEK */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      or\n      swap1\n      swap2\n      sstore\n      0x08\n        /* \"contracts/p2p/bridge/ChainB.sol\":14265:14275  KEK = iKEK */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":13859:14282  function setShards(... */\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":10318:12052  function withdrawToken(address token) public virtual override {... */\n    tag_77:\n        /* \"contracts/p2p/bridge/ChainB.sol\":10432:10442  _community */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":10390:10408  Vault storage VR_c */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":10411:10444  vaultRecords[address(_community)] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":10411:10423  vaultRecords */\n      0x0c\n        /* \"contracts/p2p/bridge/ChainB.sol\":10411:10444  vaultRecords[address(_community)] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/p2p/bridge/ChainB.sol\":10496:10508  _development */\n      sload(0x02)\n      dup5\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":10475:10510  vaultRecords[address(_development)] */\n      dup4\n      mstore\n      dup2\n      dup4\n      keccak256\n        /* \"contracts/p2p/bridge/ChainB.sol\":10567:10605  IERC20(token).balanceOf(address(this)) */\n      swap2\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":10411:10444  vaultRecords[address(_community)] */\n      swap1\n      swap4\n        /* \"contracts/p2p/bridge/ChainB.sol\":10475:10510  vaultRecords[address(_development)] */\n      swap2\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":10390:10408  Vault storage VR_c */\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":10567:10590  IERC20(token).balanceOf */\n      dup6\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":10567:10605  IERC20(token).balanceOf(address(this)) */\n      tag_228\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":10599:10603  this */\n      address\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":10567:10605  IERC20(token).balanceOf(address(this)) */\n      0x04\n      add\n      tag_49\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_231:\n        /* \"contracts/p2p/bridge/ChainB.sol\":10520:10615  uint256 Token_liquidity = uint256(... */\n      swap1\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":10628:10640  uint256 cliq */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":10642:10654  uint256 dliq */\n      dup1\n        /* \"contracts/p2p/bridge/ChainB.sol\":10658:10680  split(Token_liquidity) */\n      tag_232\n        /* \"contracts/p2p/bridge/ChainB.sol\":10664:10679  Token_liquidity */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":10658:10663  split */\n      tag_196\n        /* \"contracts/p2p/bridge/ChainB.sol\":10658:10680  split(Token_liquidity) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/p2p/bridge/ChainB.sol\":10762:10800  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":10625:10680  (, uint256 cliq, uint256 dliq) = split(Token_liquidity) */\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      dup4\n      swap2\n      pop\n      dup3\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":10690:10702  uint256 cTok */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":10762:10785  IERC20(token).balanceOf */\n      dup11\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":10762:10800  IERC20(token).balanceOf(address(this)) */\n      tag_233\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":10794:10798  this */\n      address\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":10762:10800  IERC20(token).balanceOf(address(this)) */\n      0x04\n      add\n      tag_49\n      jump\t// in\n    tag_233:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_236\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_236:\n        /* \"contracts/p2p/bridge/ChainB.sol\":10748:10800  uint256 sTb = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":10818:10842  synced(sTb, token, true) */\n      tag_237\n        /* \"contracts/p2p/bridge/ChainB.sol\":10825:10828  sTb */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":10830:10835  token */\n      dup11\n        /* \"contracts/p2p/bridge/ChainB.sol\":10837:10841  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":10818:10824  synced */\n      tag_181\n        /* \"contracts/p2p/bridge/ChainB.sol\":10818:10842  synced(sTb, token, true) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/p2p/bridge/ChainB.sol\":10818:10850  synced(sTb, token, true) == true */\n      iszero\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":10846:10850  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":10818:10850  synced(sTb, token, true) == true */\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":10810:10851  require(synced(sTb, token, true) == true) */\n      tag_238\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_238:\n        /* \"contracts/p2p/bridge/ChainB.sol\":10891:10895  WKEK */\n      sload(0x09)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":10865:10896  address(token) == address(WKEK) */\n      swap1\n      dup11\n      and\n      sub\n        /* \"contracts/p2p/bridge/ChainB.sol\":10861:11970  if (address(token) == address(WKEK)) {... */\n      tag_239\n      jumpi\n        /* \"contracts/p2p/bridge/ChainB.sol\":10953:10957  cTok */\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":10912:10916  VR_c */\n      dup9\n        /* \"contracts/p2p/bridge/ChainB.sol\":10912:10926  VR_c.community */\n      0x00\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":10912:10941  VR_c.community.wkekAmountOwed */\n      0x04\n      add\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":10912:10958  VR_c.community.wkekAmountOwed -= uint256(cTok) */\n      dup3\n      dup3\n      sload\n      tag_240\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_240:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":10972:11003  VR_d.development.wkekAmountOwed */\n      0x0c\n      dup8\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":10972:11020  VR_d.development.wkekAmountOwed -= uint256(dTok) */\n      dup1\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":11015:11019  dTok */\n      dup4\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":10972:11003  VR_d.development.wkekAmountOwed */\n      swap1\n      0x00\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":10972:11020  VR_d.development.wkekAmountOwed -= uint256(dTok) */\n      tag_241\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11015:11019  dTok */\n      dup5\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":10972:11020  VR_d.development.wkekAmountOwed -= uint256(dTok) */\n      tag_213\n      jump\t// in\n    tag_241:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11034:11065  VR_c.community.tokenAmountDrawn */\n      0x06\n      dup9\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":11034:11082  VR_c.community.tokenAmountDrawn += uint256(cliq) */\n      dup1\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":11077:11081  cliq */\n      dup7\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":11034:11065  VR_c.community.tokenAmountDrawn */\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11034:11048  VR_c.community */\n      0x00\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11034:11082  VR_c.community.tokenAmountDrawn += uint256(cliq) */\n      tag_242\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11077:11081  cliq */\n      dup5\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11034:11082  VR_c.community.tokenAmountDrawn += uint256(cliq) */\n      tag_184\n      jump\t// in\n    tag_242:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11096:11129  VR_d.development.tokenAmountDrawn */\n      0x0e\n      dup8\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":11096:11146  VR_d.development.tokenAmountDrawn += uint256(dliq) */\n      dup1\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":11141:11145  dliq */\n      dup6\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":11096:11129  VR_d.development.tokenAmountDrawn */\n      swap1\n      0x00\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11096:11146  VR_d.development.tokenAmountDrawn += uint256(dliq) */\n      tag_243\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11141:11145  dliq */\n      dup5\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11096:11146  VR_d.development.tokenAmountDrawn += uint256(dliq) */\n      tag_184\n      jump\t// in\n    tag_243:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11167:11171  WKEK */\n      sload(0x09)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11190:11200  _community */\n      sload(0x03)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11160:11208  IERC20(WKEK).transfer(payable(_community), cliq) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11167:11171  WKEK */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11160:11181  IERC20(WKEK).transfer */\n      0xa9059cbb\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11160:11208  IERC20(WKEK).transfer(payable(_community), cliq) */\n      tag_244\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11190:11200  _community */\n      swap2\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11203:11207  cliq */\n      dup10\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11160:11208  IERC20(WKEK).transfer(payable(_community), cliq) */\n      0x04\n      add\n      tag_245\n      jump\t// in\n    tag_244:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11229:11233  WKEK */\n      sload(0x09)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11252:11264  _development */\n      sload(0x02)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11222:11272  IERC20(WKEK).transfer(payable(_development), dliq) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11229:11233  WKEK */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11222:11243  IERC20(WKEK).transfer */\n      0xa9059cbb\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11222:11272  IERC20(WKEK).transfer(payable(_development), dliq) */\n      tag_250\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11252:11264  _development */\n      swap2\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11267:11271  dliq */\n      dup9\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11222:11272  IERC20(WKEK).transfer(payable(_development), dliq) */\n      0x04\n      add\n      tag_245\n      jump\t// in\n    tag_250:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_252:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_253\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_253:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":10861:11970  if (address(token) == address(WKEK)) {... */\n      jump(tag_269)\n    tag_239:\n        /* \"contracts/p2p/bridge/ChainB.sol\":11319:11322  KEK */\n      sload(0x08)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11293:11323  address(token) == address(KEK) */\n      dup11\n      dup2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":11319:11322  KEK */\n      swap2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":11293:11323  address(token) == address(KEK) */\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":11293:11343  address(token) == address(KEK) && tokenFee == true */\n      dup1\n      iszero\n      tag_255\n      jumpi\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11327:11335  tokenFee */\n      and(0xff, sload(0x12))\n        /* \"contracts/p2p/bridge/ChainB.sol\":11327:11343  tokenFee == true */\n      iszero\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":11327:11335  tokenFee */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":11327:11343  tokenFee == true */\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":11293:11343  address(token) == address(KEK) && tokenFee == true */\n    tag_255:\n        /* \"contracts/p2p/bridge/ChainB.sol\":11289:11970  if (address(token) == address(KEK) && tokenFee == true) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"contracts/p2p/bridge/ChainB.sol\":11401:11405  cTok */\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11359:11363  VR_c */\n      dup9\n        /* \"contracts/p2p/bridge/ChainB.sol\":11359:11373  VR_c.community */\n      0x00\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":11359:11389  VR_c.community.tokenAmountOwed */\n      0x05\n      add\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":11359:11406  VR_c.community.tokenAmountOwed -= uint256(cTok) */\n      dup3\n      dup3\n      sload\n      tag_257\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_257:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11420:11452  VR_d.development.tokenAmountOwed */\n      0x0d\n      dup8\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":11420:11469  VR_d.development.tokenAmountOwed -= uint256(dTok) */\n      dup1\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":11464:11468  dTok */\n      dup4\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":11420:11452  VR_d.development.tokenAmountOwed */\n      swap1\n      0x00\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11420:11469  VR_d.development.tokenAmountOwed -= uint256(dTok) */\n      tag_258\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11464:11468  dTok */\n      dup5\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11420:11469  VR_d.development.tokenAmountOwed -= uint256(dTok) */\n      tag_213\n      jump\t// in\n    tag_258:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11483:11514  VR_c.community.tokenAmountDrawn */\n      0x06\n      dup9\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":11483:11531  VR_c.community.tokenAmountDrawn += uint256(cliq) */\n      dup1\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":11526:11530  cliq */\n      dup7\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":11483:11514  VR_c.community.tokenAmountDrawn */\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11483:11497  VR_c.community */\n      0x00\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11483:11531  VR_c.community.tokenAmountDrawn += uint256(cliq) */\n      tag_259\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11526:11530  cliq */\n      dup5\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11483:11531  VR_c.community.tokenAmountDrawn += uint256(cliq) */\n      tag_184\n      jump\t// in\n    tag_259:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11545:11578  VR_d.development.tokenAmountDrawn */\n      0x0e\n      dup8\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":11545:11595  VR_d.development.tokenAmountDrawn += uint256(dliq) */\n      dup1\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":11590:11594  dliq */\n      dup6\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":11545:11578  VR_d.development.tokenAmountDrawn */\n      swap1\n      0x00\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11545:11595  VR_d.development.tokenAmountDrawn += uint256(dliq) */\n      tag_260\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11590:11594  dliq */\n      dup5\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11545:11595  VR_d.development.tokenAmountDrawn += uint256(dliq) */\n      tag_184\n      jump\t// in\n    tag_260:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11640:11650  _community */\n      sload(0x03)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11609:11658  IERC20(token).transfer(payable(_community), cliq) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11609:11631  IERC20(token).transfer */\n      dup12\n      dup2\n      and\n      swap3\n      0xa9059cbb\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11609:11658  IERC20(token).transfer(payable(_community), cliq) */\n      tag_261\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11640:11650  _community */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11653:11657  cliq */\n      dup10\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11609:11658  IERC20(token).transfer(payable(_community), cliq) */\n      0x04\n      add\n      tag_245\n      jump\t// in\n    tag_261:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_263:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_264\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_264:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11703:11715  _development */\n      sload(0x02)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11672:11723  IERC20(token).transfer(payable(_development), dliq) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11672:11694  IERC20(token).transfer */\n      dup12\n      dup2\n      and\n      swap3\n      0xa9059cbb\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11672:11723  IERC20(token).transfer(payable(_development), dliq) */\n      tag_250\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11703:11715  _development */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11718:11722  dliq */\n      dup9\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11672:11723  IERC20(token).transfer(payable(_development), dliq) */\n      0x04\n      add\n      tag_245\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":11289:11970  if (address(token) == address(KEK) && tokenFee == true) {... */\n    tag_256:\n        /* \"contracts/p2p/bridge/ChainB.sol\":11796:11811  Token_liquidity */\n      dup6\n        /* \"contracts/p2p/bridge/ChainB.sol\":11754:11758  VR_c */\n      dup9\n        /* \"contracts/p2p/bridge/ChainB.sol\":11754:11768  VR_c.community */\n      0x00\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":11754:11784  VR_c.community.tokenAmountOwed */\n      0x05\n      add\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":11754:11812  VR_c.community.tokenAmountOwed -= uint256(Token_liquidity) */\n      dup3\n      dup3\n      sload\n      tag_270\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_270:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11826:11857  VR_c.community.tokenAmountDrawn */\n      0x06\n      dup9\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":11826:11885  VR_c.community.tokenAmountDrawn += uint256(Token_liquidity) */\n      dup1\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":11869:11884  Token_liquidity */\n      dup8\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":11826:11857  VR_c.community.tokenAmountDrawn */\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11826:11840  VR_c.community */\n      0x00\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11826:11885  VR_c.community.tokenAmountDrawn += uint256(Token_liquidity) */\n      tag_271\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11869:11884  Token_liquidity */\n      dup5\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11826:11885  VR_c.community.tokenAmountDrawn += uint256(Token_liquidity) */\n      tag_184\n      jump\t// in\n    tag_271:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11930:11940  _community */\n      sload(0x03)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11899:11959  IERC20(token).transfer(payable(_community), Token_liquidity) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11899:11921  IERC20(token).transfer */\n      dup12\n      dup2\n      and\n      swap3\n      0xa9059cbb\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11899:11959  IERC20(token).transfer(payable(_community), Token_liquidity) */\n      tag_272\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":11930:11940  _community */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11943:11958  Token_liquidity */\n      dup11\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11899:11959  IERC20(token).transfer(payable(_community), Token_liquidity) */\n      0x04\n      add\n      tag_245\n      jump\t// in\n    tag_272:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_274\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_274:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_275\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_275:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":11289:11970  if (address(token) == address(KEK) && tokenFee == true) {... */\n    tag_269:\n        /* \"contracts/p2p/bridge/ChainB.sol\":11984:12045  WithdrawToken(address(this), address(token), Token_liquidity) */\n      mload(0x40)\n        /* \"#utility.yul\":4550:4575   */\n      dup7\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":11984:12045  WithdrawToken(address(this), address(token), Token_liquidity) */\n      dup11\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":12006:12010  this */\n      address\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":11984:12045  WithdrawToken(address(this), address(token), Token_liquidity) */\n      0x037238854fe57fbf51f09946f854fc3916fe83938d6521f09bd05463839f1304\n      swap1\n        /* \"#utility.yul\":4538:4540   */\n      0x20\n        /* \"#utility.yul\":4523:4541   */\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":11984:12045  WithdrawToken(address(this), address(token), Token_liquidity) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/p2p/bridge/ChainB.sol\":10380:12052  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":10318:12052  function withdrawToken(address token) public virtual override {... */\n      pop\n      jump\t// out\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1106:1464  function transferAuthorization(address fromAddr, address toAddr)... */\n    tag_82:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1238:1242  bool */\n      0x00\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      tag_278\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:469  isAuthorized */\n      tag_132\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":449:484  require(isAuthorized(_msgSender())) */\n      tag_280\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_280:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1266:1290  fromAddr == _msgSender() */\n      dup4\n      and\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1266:1290  fromAddr == _msgSender() */\n      eq\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1258:1291  require(fromAddr == _msgSender()) */\n      tag_283\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_283:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1301:1317  bool transferred */\n      0x00\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1335:1361  authorize(address(toAddr)) */\n      tag_284\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1353:1359  toAddr */\n      dup4\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1335:1344  authorize */\n      tag_101\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1335:1361  authorize(address(toAddr)) */\n      jump\t// in\n    tag_284:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1371:1401  unauthorize(address(fromAddr)) */\n      tag_285\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1391:1399  fromAddr */\n      dup5\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1371:1382  unauthorize */\n      tag_117\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1371:1401  unauthorize(address(fromAddr)) */\n      jump\t// in\n    tag_285:\n      pop\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1425:1429  true */\n      0x01\n      swap4\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1106:1464  function transferAuthorization(address fromAddr, address toAddr)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":398:437  string public symbol = unicode\"â˜¦ðŸ”‘\" */\n    tag_86:\n      0x05\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n        /* \"contracts/p2p/bridge/ChainB.sol\":4109:5579  function vaultDebt(address vault)... */\n    tag_95:\n        /* \"contracts/p2p/bridge/ChainB.sol\":4253:4260  uint256 */\n      0x00\n      dup1\n      dup1\n      dup1\n      dup1\n      dup1\n      dup1\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      tag_292\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:469  isAuthorized */\n      tag_132\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      jump\t// in\n    tag_292:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":449:484  require(isAuthorized(_msgSender())) */\n      tag_294\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_294:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":4432:4460  vaultRecords[address(vault)] */\n      dup1\n      dup10\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":4411:4429  Vault storage VR_v */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":4432:4460  vaultRecords[address(vault)] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":4432:4444  vaultRecords */\n      0x0c\n        /* \"contracts/p2p/bridge/ChainB.sol\":4432:4460  vaultRecords[address(vault)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/p2p/bridge/ChainB.sol\":4617:4627  _community */\n      sload(0x03)\n        /* \"contracts/p2p/bridge/ChainB.sol\":4432:4460  vaultRecords[address(vault)] */\n      swap1\n      swap4\n        /* \"contracts/p2p/bridge/ChainB.sol\":4411:4429  Vault storage VR_v */\n      swap2\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":4617:4627  _community */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":4591:4628  address(vault) == address(_community) */\n      swap1\n      sub\n        /* \"contracts/p2p/bridge/ChainB.sol\":4587:5498  if (address(vault) == address(_community)) {... */\n      tag_296\n      jumpi\n      pop\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":4652:4681  VR_v.community.coinAmountOwed */\n      0x01\n      dup4\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":4703:4733  VR_v.community.tokenAmountOwed */\n      0x05\n      dup5\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":4755:4784  VR_v.community.wkekAmountOwed */\n      0x04\n      dup6\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":4807:4837  VR_v.community.coinAmountDrawn */\n      0x02\n      dup7\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":4860:4891  VR_v.community.tokenAmountDrawn */\n      0x06\n      dup8\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":4652:4681  VR_v.community.coinAmountOwed */\n      swap4\n      swap6\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":4703:4733  VR_v.community.tokenAmountOwed */\n      swap2\n      swap4\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":4755:4784  VR_v.community.wkekAmountOwed */\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":4587:5498  if (address(vault) == address(_community)) {... */\n      jump(tag_299)\n    tag_296:\n        /* \"contracts/p2p/bridge/ChainB.sol\":4938:4950  _development */\n      sload(0x02)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":4912:4951  address(vault) == address(_development) */\n      swap1\n      dup16\n      and\n      sub\n        /* \"contracts/p2p/bridge/ChainB.sol\":4908:5498  if (address(vault) == address(_development)) {... */\n      tag_298\n      jumpi\n      pop\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":4975:5006  VR_v.development.coinAmountOwed */\n      0x09\n      dup4\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":5028:5060  VR_v.development.tokenAmountOwed */\n      0x0d\n      dup5\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":5082:5113  VR_v.development.wkekAmountOwed */\n      0x0c\n      dup6\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":5136:5168  VR_v.development.coinAmountDrawn */\n      0x0a\n      dup7\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":5191:5224  VR_v.development.tokenAmountDrawn */\n      0x0e\n      dup8\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":4975:5006  VR_v.development.coinAmountOwed */\n      swap4\n      swap6\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5028:5060  VR_v.development.tokenAmountOwed */\n      swap2\n      swap4\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5082:5113  VR_v.development.wkekAmountOwed */\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":4908:5498  if (address(vault) == address(_development)) {... */\n      jump(tag_299)\n    tag_298:\n      pop\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5263:5289  VR_v.member.coinAmountOwed */\n      0x11\n      dup4\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":5311:5338  VR_v.member.tokenAmountOwed */\n      0x15\n      dup5\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":5360:5386  VR_v.member.wkekAmountOwed */\n      0x14\n      dup6\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":5409:5436  VR_v.member.coinAmountDrawn */\n      0x12\n      dup7\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":5459:5487  VR_v.member.tokenAmountDrawn */\n      0x16\n      dup8\n      add\n      sload\n        /* \"contracts/p2p/bridge/ChainB.sol\":5263:5289  VR_v.member.coinAmountOwed */\n      swap4\n      swap6\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5311:5338  VR_v.member.tokenAmountOwed */\n      swap2\n      swap4\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5360:5386  VR_v.member.wkekAmountOwed */\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":4908:5498  if (address(vault) == address(_development)) {... */\n    tag_299:\n        /* \"contracts/p2p/bridge/ChainB.sol\":5515:5523  coinAD_V */\n      sload(0x0d)\n        /* \"contracts/p2p/bridge/ChainB.sol\":5525:5534  tokenAD_V */\n      sload(0x0e)\n        /* \"contracts/p2p/bridge/ChainB.sol\":5515:5523  coinAD_V */\n      swap1\n      swap16\n        /* \"contracts/p2p/bridge/ChainB.sol\":5525:5534  tokenAD_V */\n      swap1\n      swap15\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5536:5541  cOwed */\n      swap5\n      swap13\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5543:5548  tOwed */\n      swap3\n      swap11\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5550:5555  wOwed */\n      swap1\n      swap9\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5543:5548  tOwed */\n      swap7\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5536:5541  cOwed */\n      swap5\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":4109:5579  function vaultDebt(address vault)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":776:877  function authorize(address adr) public virtual authorized {... */\n    tag_101:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      tag_301\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:469  isAuthorized */\n      tag_132\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      jump\t// in\n    tag_301:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":449:484  require(isAuthorized(_msgSender())) */\n      tag_303\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":844:863  authorizations[adr] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":866:870  true */\n      0x01\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":844:863  authorizations[adr] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":844:870  authorizations[adr] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":776:877  function authorize(address adr) public virtual authorized {... */\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":12058:13377  function transfer(... */\n    tag_106:\n        /* \"contracts/p2p/bridge/ChainB.sol\":12208:12212  bool */\n      0x00\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      tag_306\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:469  isAuthorized */\n      tag_132\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      jump\t// in\n    tag_306:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":449:484  require(isAuthorized(_msgSender())) */\n      tag_308\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_308:\n        /* \"contracts/p2p/bridge/ChainB.sol\":12254:12264  _community */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":12282:12313  address(receiver) != address(0) */\n      dup4\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":12275:12314  assert(address(receiver) != address(0)) */\n      tag_311\n      jumpi\n      tag_311\n      tag_143\n      jump\t// in\n    tag_311:\n        /* \"contracts/p2p/bridge/ChainB.sol\":12404:12414  _community */\n      sload(0x03)\n        /* \"contracts/p2p/bridge/ChainB.sol\":12346:12352  amount */\n      dup5\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":12324:12343  uint256 amountDrawn */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":12396:12434  address(_community) == address(sender) */\n      dup1\n      dup10\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":12404:12414  _community */\n      swap2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":12396:12434  address(_community) == address(sender) */\n      sub\n        /* \"contracts/p2p/bridge/ChainB.sol\":12392:13321  if (address(_community) == address(sender)) {... */\n      tag_312\n      jumpi\n        /* \"contracts/p2p/bridge/ChainB.sol\":12472:12480  receiver */\n      dup5\n        /* \"contracts/p2p/bridge/ChainB.sol\":12450:12481  _community_ = payable(receiver) */\n      swap3\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":12496:12505  bool safe */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":12519:12530  _community_ */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":12511:12536  payable(_community_).call */\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":12544:12555  amountDrawn */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":12511:12560  payable(_community_).call{value: amountDrawn}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_316\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_315)\n    tag_316:\n      0x60\n      swap2\n      pop\n    tag_315:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":12495:12560  (bool safe, ) = payable(_community_).call{value: amountDrawn}(\"\") */\n      swap1\n      swap2\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":12590:12594  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":12582:12594  safe == true */\n      dup2\n      iszero\n      iszero\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":12574:12595  require(safe == true) */\n      tag_317\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_317:\n        /* \"contracts/p2p/bridge/ChainB.sol\":12619:12623  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":12609:12623  success = true */\n      swap2\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":12436:12634  {... */\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":12392:13321  if (address(_community) == address(sender)) {... */\n      jump(tag_341)\n    tag_312:\n        /* \"contracts/p2p/bridge/ChainB.sol\":12652:12664  _development */\n      sload(0x02)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":12644:12684  address(_development) == address(sender) */\n      dup1\n      dup10\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":12652:12664  _development */\n      swap2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":12644:12684  address(_development) == address(sender) */\n      sub\n        /* \"contracts/p2p/bridge/ChainB.sol\":12640:13321  if (address(_development) == address(sender)) {... */\n      tag_319\n      jumpi\n        /* \"contracts/p2p/bridge/ChainB.sol\":12722:12730  receiver */\n      dup5\n        /* \"contracts/p2p/bridge/ChainB.sol\":12700:12731  _community_ = payable(receiver) */\n      swap3\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":12745:12757  uint256 hFee */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":12804:12809  10000 */\n      0x2710\n        /* \"contracts/p2p/bridge/ChainB.sol\":12787:12791  bFee */\n      sload(0x0f)\n        /* \"contracts/p2p/bridge/ChainB.sol\":12769:12775  amount */\n      dup9\n        /* \"contracts/p2p/bridge/ChainB.sol\":12761:12792  uint256(amount) * uint256(bFee) */\n      tag_320\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"contracts/p2p/bridge/ChainB.sol\":12760:12810  (uint256(amount) * uint256(bFee)) / uint256(10000) */\n      tag_322\n      swap2\n      swap1\n      tag_323\n      jump\t// in\n    tag_322:\n        /* \"contracts/p2p/bridge/ChainB.sol\":12745:12810  uint256 hFee = (uint256(amount) * uint256(bFee)) / uint256(10000) */\n      swap1\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":12824:12838  amount -= hFee */\n      tag_324\n        /* \"contracts/p2p/bridge/ChainB.sol\":12745:12810  uint256 hFee = (uint256(amount) * uint256(bFee)) / uint256(10000) */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":12824:12838  amount -= hFee */\n      dup9\n      tag_213\n      jump\t// in\n    tag_324:\n      swap7\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":12855:12867  uint256 cliq */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":12869:12881  uint256 dliq */\n      dup1\n        /* \"contracts/p2p/bridge/ChainB.sol\":12885:12896  split(hFee) */\n      tag_325\n        /* \"contracts/p2p/bridge/ChainB.sol\":12891:12895  hFee */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":12885:12890  split */\n      tag_196\n        /* \"contracts/p2p/bridge/ChainB.sol\":12885:12896  split(hFee) */\n      jump\t// in\n    tag_325:\n        /* \"contracts/p2p/bridge/ChainB.sol\":12852:12896  (, uint256 cliq, uint256 dliq) = split(hFee) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":12911:12924  bool successA */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":12938:12949  _community_ */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":12930:12955  payable(_community_).call */\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":12963:12969  amount */\n      dup11\n        /* \"contracts/p2p/bridge/ChainB.sol\":12930:12974  payable(_community_).call{value: amount}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_329\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_328)\n    tag_329:\n      0x60\n      swap2\n      pop\n    tag_328:\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":13016:13026  _community */\n      sload(0x03)\n        /* \"contracts/p2p/bridge/ChainB.sol\":13008:13049  payable(_community).call{value: cliq}(\"\") */\n      mload(0x40)\n        /* \"contracts/p2p/bridge/ChainB.sol\":12910:12974  (bool successA, ) = payable(_community_).call{value: amount}(\"\") */\n      swap2\n      swap3\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":12989:13002  bool successB */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":13016:13026  _community */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":13040:13044  cliq */\n      dup6\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":12989:13002  bool successB */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":13008:13049  payable(_community).call{value: cliq}(\"\") */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":12989:13002  bool successB */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":13008:13049  payable(_community).call{value: cliq}(\"\") */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":13040:13044  cliq */\n      dup6\n        /* \"contracts/p2p/bridge/ChainB.sol\":13016:13026  _community */\n      dup8\n        /* \"contracts/p2p/bridge/ChainB.sol\":13008:13049  payable(_community).call{value: cliq}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_333\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_332)\n    tag_333:\n      0x60\n      swap2\n      pop\n    tag_332:\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":13091:13103  _development */\n      sload(0x02)\n        /* \"contracts/p2p/bridge/ChainB.sol\":13083:13126  payable(_development).call{value: dliq}(\"\") */\n      mload(0x40)\n        /* \"contracts/p2p/bridge/ChainB.sol\":12988:13049  (bool successB, ) = payable(_community).call{value: cliq}(\"\") */\n      swap2\n      swap3\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":13064:13077  bool successC */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":13091:13103  _development */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":13117:13121  dliq */\n      dup6\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":13064:13077  bool successC */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":13083:13126  payable(_development).call{value: dliq}(\"\") */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":13064:13077  bool successC */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":13083:13126  payable(_development).call{value: dliq}(\"\") */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":13117:13121  dliq */\n      dup6\n        /* \"contracts/p2p/bridge/ChainB.sol\":13091:13103  _development */\n      dup8\n        /* \"contracts/p2p/bridge/ChainB.sol\":13083:13126  payable(_development).call{value: dliq}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_337\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_336)\n    tag_337:\n      0x60\n      swap2\n      pop\n    tag_336:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":13063:13126  (bool successC, ) = payable(_development).call{value: dliq}(\"\") */\n      swap1\n      swap2\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":13160:13164  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":13148:13164  successA == true */\n      dup4\n      iszero\n      iszero\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":13140:13165  require(successA == true) */\n      tag_338\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_338:\n        /* \"contracts/p2p/bridge/ChainB.sol\":13199:13203  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":13187:13203  successB == true */\n      dup3\n      iszero\n      iszero\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":13179:13204  require(successB == true) */\n      tag_339\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_339:\n        /* \"contracts/p2p/bridge/ChainB.sol\":13238:13242  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":13226:13242  successC == true */\n      dup2\n      iszero\n      iszero\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":13218:13243  require(successC == true) */\n      tag_340\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_340:\n        /* \"contracts/p2p/bridge/ChainB.sol\":13267:13271  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":13257:13271  success = true */\n      swap7\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":12686:13282  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":12640:13321  if (address(_development) == address(sender)) {... */\n      jump(tag_341)\n    tag_319:\n        /* \"contracts/p2p/bridge/ChainB.sol\":13302:13310  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/p2p/bridge/ChainB.sol\":12640:13321  if (address(_development) == address(sender)) {... */\n    tag_341:\n        /* \"contracts/p2p/bridge/ChainB.sol\":13338:13345  success */\n      dup1\n        /* \"contracts/p2p/bridge/ChainB.sol\":13330:13346  require(success) */\n      tag_342\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_342:\n        /* \"contracts/p2p/bridge/ChainB.sol\":13363:13370  success */\n      swap7\n        /* \"contracts/p2p/bridge/ChainB.sol\":12058:13377  function transfer(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":9853:10122  function depositTracer(address _depositor)... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":9994:10027  vaultRecords[address(_depositor)] */\n      dup2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":9973:9991  Vault storage VR_s */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":9994:10027  vaultRecords[address(_depositor)] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":9994:10006  vaultRecords */\n      0x0c\n        /* \"contracts/p2p/bridge/ChainB.sol\":9994:10027  vaultRecords[address(_depositor)] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/p2p/bridge/ChainB.sol\":10065:10076  VR_s.member */\n      0x10\n      dup2\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":10099:10115  return (tBlocks) */\n      dup1\n      sload\n      dup5\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap6\n      mstore\n      dup1\n      dup6\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":9941:9957  uint256[] memory */\n      0x60\n      swap5\n        /* \"contracts/p2p/bridge/ChainB.sol\":9994:10027  vaultRecords[address(_depositor)] */\n      swap3\n      swap4\n        /* \"contracts/p2p/bridge/ChainB.sol\":10065:10076  VR_s.member */\n      swap2\n      swap3\n        /* \"contracts/p2p/bridge/ChainB.sol\":10099:10115  return (tBlocks) */\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":10065:10076  VR_s.member */\n      dup4\n      swap2\n        /* \"contracts/p2p/bridge/ChainB.sol\":10099:10115  return (tBlocks) */\n      swap1\n      dup4\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":10065:10076  VR_s.member */\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":10099:10115  return (tBlocks) */\n      dup3\n      dup1\n      iszero\n      tag_344\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_345:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_345\n      jumpi\n    tag_344:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":9853:10122  function depositTracer(address _depositor)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":883:987  function unauthorize(address adr) public virtual authorized {... */\n    tag_117:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      tag_347\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:469  isAuthorized */\n      tag_132\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      jump\t// in\n    tag_347:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":449:484  require(isAuthorized(_msgSender())) */\n      tag_349\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_349:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":953:972  authorizations[adr] */\n      and\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":975:980  false */\n      0x00\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":953:972  authorizations[adr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":953:967  authorizations */\n      0x01\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":953:972  authorizations[adr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":953:980  authorizations[adr] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":883:987  function unauthorize(address adr) public virtual authorized {... */\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":2811:3433  function bridgeKEK_bulk(uint256 amountKEK) external payable returns (bool) {... */\n    tag_120:\n        /* \"contracts/p2p/bridge/ChainB.sol\":2880:2884  bool */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":2934:2938  tFEE */\n      sload(0x10)\n        /* \"contracts/p2p/bridge/ChainB.sol\":2912:2921  msg.value */\n      callvalue\n        /* \"contracts/p2p/bridge/ChainB.sol\":2904:2939  uint256(msg.value) >= uint256(tFEE) */\n      lt\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":2896:2940  require(uint256(msg.value) >= uint256(tFEE)) */\n      tag_352\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_352:\n        /* \"contracts/p2p/bridge/ChainB.sol\":3016:3018  40 */\n      0x28\n        /* \"contracts/p2p/bridge/ChainB.sol\":2989:3004  bridgeMaxAmount */\n      sload(0x11)\n        /* \"contracts/p2p/bridge/ChainB.sol\":2981:3019  uint256(bridgeMaxAmount) * uint256(40) */\n      tag_353\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_353:\n        /* \"contracts/p2p/bridge/ChainB.sol\":2966:2975  amountKEK */\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":2958:3020  uint256(amountKEK) <= (uint256(bridgeMaxAmount) * uint256(40)) */\n      gt\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":2950:3021  require(uint256(amountKEK) <= (uint256(bridgeMaxAmount) * uint256(40))) */\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":993:1100  function isAuthorized(address adr) internal view returns (bool) {... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1074:1093  authorizations[adr] */\n      and\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1051:1055  bool */\n      0x00\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1074:1093  authorizations[adr] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1074:1088  authorizations */\n      0x01\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":1074:1093  authorizations[adr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":993:1100  function isAuthorized(address adr) internal view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":3439:4103  function deposit(... */\n    tag_177:\n        /* \"contracts/p2p/bridge/ChainB.sol\":3665:3668  KEK */\n      sload(0x08)\n        /* \"contracts/p2p/bridge/ChainB.sol\":3553:3557  bool */\n      0x00\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":3589:3595  amount */\n      dup3\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":3553:3557  bool */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":3665:3668  KEK */\n      swap1\n      dup2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":3639:3669  address(token) == address(KEK) */\n      swap1\n      dup7\n      and\n      sub\n        /* \"contracts/p2p/bridge/ChainB.sol\":3635:4073  if (address(token) == address(KEK)) {... */\n      tag_374\n      jumpi\n        /* \"contracts/p2p/bridge/ChainB.sol\":3698:3704  amount */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":3685:3694  tokenAD_V */\n      0x0e\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":3685:3704  tokenAD_V += amount */\n      dup3\n      dup3\n      sload\n      tag_375\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_375:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":3738:3747  msg.value */\n      callvalue\n        /* \"contracts/p2p/bridge/ChainB.sol\":3718:3726  coinAD_V */\n      0x0d\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":3718:3748  coinAD_V += uint256(msg.value) */\n      dup3\n      dup3\n      sload\n      tag_376\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_376:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":3769:3772  KEK */\n      sload(0x08)\n        /* \"contracts/p2p/bridge/ChainB.sol\":3762:3900  IERC20(KEK).transferFrom(... */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11298:11313   */\n      dup9\n      dup2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":3762:3900  IERC20(KEK).transferFrom(... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":11280:11314   */\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":3856:3860  this */\n      address\n        /* \"#utility.yul\":11330:11348   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":11323:11366   */\n      mstore\n        /* \"#utility.yul\":11382:11400   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11375:11409   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":3769:3772  KEK */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":3762:3786  IERC20(KEK).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11215:11233   */\n      0x64\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":3762:3900  IERC20(KEK).transferFrom(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_380\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_380:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_381\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_381:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":3914:3954  traceDeposit(depositor, liquidity, true) */\n      tag_382\n        /* \"contracts/p2p/bridge/ChainB.sol\":3927:3936  depositor */\n      dup7\n        /* \"contracts/p2p/bridge/ChainB.sol\":3938:3947  liquidity */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":3949:3953  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":3914:3926  traceDeposit */\n      tag_383\n        /* \"contracts/p2p/bridge/ChainB.sol\":3914:3954  traceDeposit(depositor, liquidity, true) */\n      jump\t// in\n    tag_382:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":3978:3982  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":3635:4073  if (address(token) == address(KEK)) {... */\n      jump(tag_384)\n    tag_374:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":4042:4062  revert(\"!SUPPORTED\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11622:11624   */\n      0x20\n        /* \"contracts/p2p/bridge/ChainB.sol\":4042:4062  revert(\"!SUPPORTED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11604:11625   */\n      mstore\n        /* \"#utility.yul\":11661:11663   */\n      0x0a\n        /* \"#utility.yul\":11641:11659   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11634:11664   */\n      mstore\n      shl(0xb2, 0x0854d5541413d4951151)\n        /* \"#utility.yul\":11680:11698   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11673:11713   */\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":4023:4028  false */\n      0x00\n      swap1\n        /* \"#utility.yul\":11730:11748   */\n      0x64\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":4042:4062  revert(\"!SUPPORTED\") */\n      tag_173\n        /* \"#utility.yul\":11420:11754   */\n      jump\n        /* \"contracts/p2p/bridge/ChainB.sol\":3635:4073  if (address(token) == address(KEK)) {... */\n    tag_384:\n        /* \"contracts/p2p/bridge/ChainB.sol\":4089:4096  success */\n      swap6\n        /* \"contracts/p2p/bridge/ChainB.sol\":3439:4103  function deposit(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":6213:7738  function synced(... */\n    tag_181:\n        /* \"contracts/p2p/bridge/ChainB.sol\":6340:6344  bool */\n      0x00\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      tag_388\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:469  isAuthorized */\n      tag_132\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":457:483  isAuthorized(_msgSender()) */\n      jump\t// in\n    tag_388:\n        /* \"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":449:484  require(isAuthorized(_msgSender())) */\n      tag_390\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_390:\n        /* \"contracts/p2p/bridge/ChainB.sol\":6398:6408  _community */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":6356:6374  Vault storage VR_c */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":6377:6410  vaultRecords[address(_community)] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":6377:6389  vaultRecords */\n      0x0c\n        /* \"contracts/p2p/bridge/ChainB.sol\":6377:6410  vaultRecords[address(_community)] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/p2p/bridge/ChainB.sol\":6462:6474  _development */\n      sload(0x02)\n      swap1\n      swap4\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":6441:6476  vaultRecords[address(_development)] */\n      dup3\n      mstore\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":6356:6374  Vault storage VR_c */\n      dup1\n      dup1\n        /* \"contracts/p2p/bridge/ChainB.sol\":6533:6543  split(sTb) */\n      tag_392\n        /* \"contracts/p2p/bridge/ChainB.sol\":6539:6542  sTb */\n      dup10\n        /* \"contracts/p2p/bridge/ChainB.sol\":6533:6538  split */\n      tag_196\n        /* \"contracts/p2p/bridge/ChainB.sol\":6533:6543  split(sTb) */\n      jump\t// in\n    tag_392:\n        /* \"contracts/p2p/bridge/ChainB.sol\":6486:6543  (uint256 tSum, uint256 cTliq, uint256 dTliq) = split(sTb) */\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":6553:6562  bool sync */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":6597:6601  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":6584:6601  isTokenTx == true */\n      dup9\n      iszero\n      iszero\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":6584:6636  isTokenTx == true && address(token) == address(WKEK) */\n      dup1\n      iszero\n      tag_393\n      jumpi\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":6631:6635  WKEK */\n      sload(0x09)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":6605:6636  address(token) == address(WKEK) */\n      dup11\n      dup2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":6631:6635  WKEK */\n      swap2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":6605:6636  address(token) == address(WKEK) */\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":6584:6636  isTokenTx == true && address(token) == address(WKEK) */\n    tag_393:\n        /* \"contracts/p2p/bridge/ChainB.sol\":6580:7570  if (isTokenTx == true && address(token) == address(WKEK)) {... */\n      iszero\n      tag_394\n      jumpi\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":6652:6681  VR_c.community.wkekAmountOwed */\n      0x04\n      dup6\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":6652:6698  VR_c.community.wkekAmountOwed = uint256(cTliq) */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":6712:6743  VR_d.development.wkekAmountOwed */\n      0x0c\n      dup5\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":6712:6760  VR_d.development.wkekAmountOwed = uint256(dTliq) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":6781:6785  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":6580:7570  if (isTokenTx == true && address(token) == address(WKEK)) {... */\n      jump(tag_405)\n    tag_394:\n        /* \"contracts/p2p/bridge/ChainB.sol\":6832:6836  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":6819:6836  isTokenTx == true */\n      dup9\n      iszero\n      iszero\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":6819:6882  isTokenTx == true &&... */\n      dup1\n      iszero\n      tag_396\n      jumpi\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":6878:6881  KEK */\n      sload(0x08)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":6852:6882  address(token) == address(KEK) */\n      dup11\n      dup2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":6878:6881  KEK */\n      swap2\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":6852:6882  address(token) == address(KEK) */\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":6819:6882  isTokenTx == true &&... */\n    tag_396:\n        /* \"contracts/p2p/bridge/ChainB.sol\":6819:6915  isTokenTx == true &&... */\n      dup1\n      iszero\n      tag_397\n      jumpi\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":6898:6906  tokenFee */\n      and(0xff, sload(0x12))\n        /* \"contracts/p2p/bridge/ChainB.sol\":6898:6915  tokenFee == false */\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":6819:6915  isTokenTx == true &&... */\n    tag_397:\n        /* \"contracts/p2p/bridge/ChainB.sol\":6802:7570  if (... */\n      iszero\n      tag_398\n      jumpi\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":6940:6970  VR_c.community.tokenAmountOwed */\n      0x05\n      dup6\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":6940:6986  VR_c.community.tokenAmountOwed = uint256(tSum) */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":7007:7011  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":6802:7570  if (... */\n      jump(tag_405)\n    tag_398:\n        /* \"contracts/p2p/bridge/ChainB.sol\":7032:7050  isTokenTx == false */\n      dup8\n      iszero\n      dup1\n      iszero\n        /* \"contracts/p2p/bridge/ChainB.sol\":7032:7085  isTokenTx == false && address(token) == address(this) */\n      tag_400\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":7054:7085  address(token) == address(this) */\n      dup10\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":7080:7084  this */\n      address\n        /* \"contracts/p2p/bridge/ChainB.sol\":7054:7085  address(token) == address(this) */\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":7032:7085  isTokenTx == false && address(token) == address(this) */\n    tag_400:\n        /* \"contracts/p2p/bridge/ChainB.sol\":7028:7570  if (isTokenTx == false && address(token) == address(this)) {... */\n      iszero\n      tag_401\n      jumpi\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":7101:7130  VR_c.community.coinAmountOwed */\n      0x01\n      dup1\n      dup7\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":7101:7146  VR_c.community.coinAmountOwed = uint256(tSum) */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":7028:7570  if (isTokenTx == false && address(token) == address(this)) {... */\n      jump(tag_405)\n    tag_401:\n        /* \"contracts/p2p/bridge/ChainB.sol\":7205:7209  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":7192:7209  isTokenTx == true */\n      dup9\n      iszero\n      iszero\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":7192:7244  isTokenTx == true && address(token) == address(this) */\n      dup1\n      iszero\n      tag_403\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":7213:7244  address(token) == address(this) */\n      dup10\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":7239:7243  this */\n      address\n        /* \"contracts/p2p/bridge/ChainB.sol\":7213:7244  address(token) == address(this) */\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":7192:7244  isTokenTx == true && address(token) == address(this) */\n    tag_403:\n        /* \"contracts/p2p/bridge/ChainB.sol\":7188:7570  if (isTokenTx == true && address(token) == address(this)) {... */\n      iszero\n      tag_404\n      jumpi\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":7260:7289  VR_c.community.coinAmountOwed */\n      0x01\n      dup1\n      dup7\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":7260:7306  VR_c.community.coinAmountOwed = uint256(cTliq) */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":7320:7351  VR_d.development.coinAmountOwed */\n      0x09\n      dup6\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":7320:7368  VR_d.development.coinAmountOwed = uint256(dTliq) */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":7188:7570  if (isTokenTx == true && address(token) == address(this)) {... */\n      jump(tag_405)\n    tag_404:\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":7424:7454  VR_c.community.tokenAmountOwed */\n      0x05\n      dup6\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":7424:7471  VR_c.community.tokenAmountOwed = uint256(cTliq) */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":7485:7517  VR_d.development.tokenAmountOwed */\n      0x0d\n      dup5\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":7485:7534  VR_d.development.tokenAmountOwed = uint256(dTliq) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":7555:7559  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":7188:7570  if (isTokenTx == true && address(token) == address(this)) {... */\n    tag_405:\n        /* \"contracts/p2p/bridge/ChainB.sol\":7596:7600  true */\n      0x01\n        /* \"contracts/p2p/bridge/ChainB.sol\":7583:7600  isTokenTx == true */\n      dup9\n      iszero\n      iszero\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":7583:7620  isTokenTx == true && tokenAD_V < tSum */\n      dup1\n      iszero\n      tag_406\n      jumpi\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":7616:7620  tSum */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":7604:7613  tokenAD_V */\n      sload(0x0e)\n        /* \"contracts/p2p/bridge/ChainB.sol\":7604:7620  tokenAD_V < tSum */\n      lt\n        /* \"contracts/p2p/bridge/ChainB.sol\":7583:7620  isTokenTx == true && tokenAD_V < tSum */\n    tag_406:\n        /* \"contracts/p2p/bridge/ChainB.sol\":7579:7711  if (isTokenTx == true && tokenAD_V < tSum) {... */\n      iszero\n      tag_407\n      jumpi\n        /* \"contracts/p2p/bridge/ChainB.sol\":7649:7653  tSum */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":7636:7645  tokenAD_V */\n      0x0e\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":7636:7653  tokenAD_V += tSum */\n      dup3\n      dup3\n      sload\n      tag_408\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_408:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":7579:7711  if (isTokenTx == true && tokenAD_V < tSum) {... */\n      tag_409\n      swap1\n      pop\n      jump\n    tag_407:\n        /* \"contracts/p2p/bridge/ChainB.sol\":7696:7700  tSum */\n      dup4\n        /* \"contracts/p2p/bridge/ChainB.sol\":7684:7692  coinAD_V */\n      0x0d\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":7684:7700  coinAD_V += tSum */\n      dup3\n      dup3\n      sload\n      tag_410\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_410:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":7579:7711  if (isTokenTx == true && tokenAD_V < tSum) {... */\n    tag_409:\n        /* \"contracts/p2p/bridge/ChainB.sol\":7727:7731  sync */\n      swap10\n        /* \"contracts/p2p/bridge/ChainB.sol\":6213:7738  function synced(... */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":5585:6207  function split(uint256 liquidity)... */\n    tag_196:\n        /* \"contracts/p2p/bridge/ChainB.sol\":5678:5685  uint256 */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":5699:5706  uint256 */\n      dup1\n        /* \"contracts/p2p/bridge/ChainB.sol\":5720:5727  uint256 */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":5788:5789  0 */\n      dup1\n        /* \"contracts/p2p/bridge/ChainB.sol\":5767:5776  liquidity */\n      dup5\n        /* \"contracts/p2p/bridge/ChainB.sol\":5759:5790  uint256(liquidity) > uint256(0) */\n      gt\n        /* \"contracts/p2p/bridge/ChainB.sol\":5752:5791  assert(uint256(liquidity) > uint256(0)) */\n      tag_413\n      jumpi\n      tag_413\n      tag_143\n      jump\t// in\n    tag_413:\n        /* \"contracts/p2p/bridge/ChainB.sol\":5801:5827  uint256 communityLiquidity */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":5881:5898  shareBasisDivisor */\n      immutable(\"0xbbf5a24880b10a5f9f601c4058e4771ddea17e7d765ceb3c903814e1c0d621e0\")\n        /* \"contracts/p2p/bridge/ChainB.sol\":5843:5865  teamDonationMultiplier */\n      sload(0x06)\n        /* \"contracts/p2p/bridge/ChainB.sol\":5831:5840  liquidity */\n      dup7\n        /* \"contracts/p2p/bridge/ChainB.sol\":5831:5865  liquidity * teamDonationMultiplier */\n      tag_414\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_414:\n        /* \"contracts/p2p/bridge/ChainB.sol\":5830:5898  (liquidity * teamDonationMultiplier) /... */\n      tag_415\n      swap2\n      swap1\n      tag_323\n      jump\t// in\n    tag_415:\n        /* \"contracts/p2p/bridge/ChainB.sol\":5801:5898  uint256 communityLiquidity = (liquidity * teamDonationMultiplier) /... */\n      swap1\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5908:5936  uint256 developmentLiquidity */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":5940:5970  liquidity - communityLiquidity */\n      tag_416\n        /* \"contracts/p2p/bridge/ChainB.sol\":5801:5898  uint256 communityLiquidity = (liquidity * teamDonationMultiplier) /... */\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":5940:5949  liquidity */\n      dup8\n        /* \"contracts/p2p/bridge/ChainB.sol\":5940:5970  liquidity - communityLiquidity */\n      tag_213\n      jump\t// in\n    tag_416:\n        /* \"contracts/p2p/bridge/ChainB.sol\":5908:5971  uint256 developmentLiquidity = (liquidity - communityLiquidity) */\n      swap1\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5981:6008  uint256 totalSumOfLiquidity */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":6011:6052  communityLiquidity + developmentLiquidity */\n      tag_417\n        /* \"contracts/p2p/bridge/ChainB.sol\":5908:5971  uint256 developmentLiquidity = (liquidity - communityLiquidity) */\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":6011:6029  communityLiquidity */\n      dup5\n        /* \"contracts/p2p/bridge/ChainB.sol\":6011:6052  communityLiquidity + developmentLiquidity */\n      tag_184\n      jump\t// in\n    tag_417:\n        /* \"contracts/p2p/bridge/ChainB.sol\":5981:6052  uint256 totalSumOfLiquidity = communityLiquidity + developmentLiquidity */\n      swap1\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":6109:6118  liquidity */\n      dup7\n        /* \"contracts/p2p/bridge/ChainB.sol\":6077:6096  totalSumOfLiquidity */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":6069:6119  uint256(totalSumOfLiquidity) == uint256(liquidity) */\n      eq\n        /* \"contracts/p2p/bridge/ChainB.sol\":6062:6120  assert(uint256(totalSumOfLiquidity) == uint256(liquidity)) */\n      tag_419\n      jumpi\n      tag_419\n      tag_143\n      jump\t// in\n    tag_419:\n        /* \"contracts/p2p/bridge/ChainB.sol\":6138:6157  totalSumOfLiquidity */\n      swap7\n        /* \"contracts/p2p/bridge/ChainB.sol\":6159:6177  communityLiquidity */\n      swap2\n      swap6\n      pop\n      swap4\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":5585:6207  function split(uint256 liquidity)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/p2p/bridge/ChainB.sol\":9351:9847  function traceDeposit(... */\n    tag_383:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/p2p/bridge/ChainB.sol\":9496:9529  vaultRecords[address(_depositor)] */\n      dup4\n      and\n        /* \"contracts/p2p/bridge/ChainB.sol\":9475:9493  Vault storage VR_s */\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":9496:9529  vaultRecords[address(_depositor)] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":9496:9508  vaultRecords */\n      0x0c\n        /* \"contracts/p2p/bridge/ChainB.sol\":9496:9529  vaultRecords[address(_depositor)] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":164:174  msg.sender */\n      caller\n        /* \"contracts/p2p/bridge/ChainB.sol\":9539:9567  depositRecords[_msgSender()] */\n      dup5\n      mstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":9539:9553  depositRecords */\n      0x0b\n        /* \"contracts/p2p/bridge/ChainB.sol\":9539:9567  depositRecords[_msgSender()] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/p2p/bridge/ChainB.sol\":9568:9580  block.number */\n      number\n        /* \"contracts/p2p/bridge/ChainB.sol\":9539:9581  depositRecords[_msgSender()][block.number] */\n      dup1\n      dup7\n      mstore\n      swap1\n      dup5\n      mstore\n      swap2\n      dup5\n      keccak256\n        /* \"contracts/p2p/bridge/ChainB.sol\":9539:9593  depositRecords[_msgSender()][block.number] = liquidity */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":9603:9614  VR_s.member */\n      0x10\n      dup2\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":9603:9646  VR_s.member.blockNumbers.push(block.number) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      swap2\n      dup7\n      mstore\n      swap4\n      swap1\n      swap5\n      keccak256\n      swap1\n      swap3\n      add\n      sstore\n        /* \"contracts/p2p/bridge/ChainB.sol\":9496:9529  vaultRecords[address(_depositor)] */\n      swap1\n        /* \"contracts/p2p/bridge/ChainB.sol\":9660:9676  aTokenTX == true */\n      dup3\n      iszero\n      iszero\n      swap1\n      sub\n        /* \"contracts/p2p/bridge/ChainB.sol\":9656:9841  if (aTokenTX == true) {... */\n      tag_423\n      jumpi\n        /* \"contracts/p2p/bridge/ChainB.sol\":9736:9745  liquidity */\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":9692:9696  VR_s */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":9692:9703  VR_s.member */\n      0x10\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":9692:9724  VR_s.member.tokenAmountDeposited */\n      0x07\n      add\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":9692:9746  VR_s.member.tokenAmountDeposited += uint256(liquidity) */\n      dup3\n      dup3\n      sload\n      tag_424\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_424:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":9656:9841  if (aTokenTX == true) {... */\n      tag_425\n      swap1\n      pop\n      jump\n    tag_423:\n        /* \"contracts/p2p/bridge/ChainB.sol\":9820:9829  liquidity */\n      dup3\n        /* \"contracts/p2p/bridge/ChainB.sol\":9777:9781  VR_s */\n      dup2\n        /* \"contracts/p2p/bridge/ChainB.sol\":9777:9788  VR_s.member */\n      0x10\n      add\n        /* \"contracts/p2p/bridge/ChainB.sol\":9777:9808  VR_s.member.coinAmountDeposited */\n      0x03\n      add\n      0x00\n        /* \"contracts/p2p/bridge/ChainB.sol\":9777:9830  VR_s.member.coinAmountDeposited += uint256(liquidity) */\n      dup3\n      dup3\n      sload\n      tag_426\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_426:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":9656:9841  if (aTokenTX == true) {... */\n    tag_425:\n        /* \"contracts/p2p/bridge/ChainB.sol\":9465:9847  {... */\n      pop\n        /* \"contracts/p2p/bridge/ChainB.sol\":9351:9847  function traceDeposit(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:611   */\n    tag_33:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_436:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_436)\n    tag_438:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_439:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:743   */\n    tag_427:\n        /* \"#utility.yul\":677:687   */\n      0x4e487b71\n        /* \"#utility.yul\":672:675   */\n      0xe0\n        /* \"#utility.yul\":668:688   */\n      shl\n        /* \"#utility.yul\":665:666   */\n      0x00\n        /* \"#utility.yul\":658:689   */\n      mstore\n        /* \"#utility.yul\":708:712   */\n      0x41\n        /* \"#utility.yul\":705:706   */\n      0x04\n        /* \"#utility.yul\":698:713   */\n      mstore\n        /* \"#utility.yul\":732:736   */\n      0x24\n        /* \"#utility.yul\":729:730   */\n      0x00\n        /* \"#utility.yul\":722:737   */\n      revert\n        /* \"#utility.yul\":748:1023   */\n    tag_428:\n        /* \"#utility.yul\":819:821   */\n      0x40\n        /* \"#utility.yul\":813:822   */\n      mload\n        /* \"#utility.yul\":884:886   */\n      0x1f\n        /* \"#utility.yul\":865:878   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":861:888   */\n      and\n        /* \"#utility.yul\":849:889   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":904:938   */\n      dup2\n      gt\n        /* \"#utility.yul\":940:962   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":901:963   */\n      or\n        /* \"#utility.yul\":898:986   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":966:984   */\n      tag_443\n      tag_427\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":1002:1004   */\n      0x40\n        /* \"#utility.yul\":995:1017   */\n      mstore\n        /* \"#utility.yul\":748:1023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1028:1211   */\n    tag_429:\n        /* \"#utility.yul\":1088:1092   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1113:1119   */\n      dup3\n        /* \"#utility.yul\":1110:1140   */\n      gt\n        /* \"#utility.yul\":1107:1163   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":1143:1161   */\n      tag_446\n      tag_427\n      jump\t// in\n    tag_446:\n      pop\n        /* \"#utility.yul\":1188:1189   */\n      0x05\n        /* \"#utility.yul\":1184:1198   */\n      shl\n        /* \"#utility.yul\":1200:1204   */\n      0x20\n        /* \"#utility.yul\":1180:1205   */\n      add\n      swap1\n        /* \"#utility.yul\":1028:1211   */\n      jump\t// out\n        /* \"#utility.yul\":1216:1347   */\n    tag_430:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1291:1322   */\n      dup2\n      and\n        /* \"#utility.yul\":1281:1323   */\n      dup2\n      eq\n        /* \"#utility.yul\":1271:1341   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":1337:1338   */\n      0x00\n        /* \"#utility.yul\":1334:1335   */\n      dup1\n        /* \"#utility.yul\":1327:1339   */\n      revert\n        /* \"#utility.yul\":1352:2089   */\n    tag_431:\n        /* \"#utility.yul\":1406:1411   */\n      0x00\n        /* \"#utility.yul\":1459:1462   */\n      dup3\n        /* \"#utility.yul\":1452:1456   */\n      0x1f\n        /* \"#utility.yul\":1444:1450   */\n      dup4\n        /* \"#utility.yul\":1440:1457   */\n      add\n        /* \"#utility.yul\":1436:1463   */\n      slt\n        /* \"#utility.yul\":1426:1481   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":1477:1478   */\n      0x00\n        /* \"#utility.yul\":1474:1475   */\n      dup1\n        /* \"#utility.yul\":1467:1479   */\n      revert\n        /* \"#utility.yul\":1426:1481   */\n    tag_450:\n        /* \"#utility.yul\":1513:1519   */\n      dup2\n        /* \"#utility.yul\":1500:1520   */\n      calldataload\n        /* \"#utility.yul\":1539:1543   */\n      0x20\n        /* \"#utility.yul\":1563:1623   */\n      tag_451\n        /* \"#utility.yul\":1579:1622   */\n      tag_452\n        /* \"#utility.yul\":1619:1621   */\n      dup4\n        /* \"#utility.yul\":1579:1622   */\n      tag_429\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":1563:1623   */\n      tag_428\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":1657:1672   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":1743:1744   */\n      0x05\n        /* \"#utility.yul\":1739:1749   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":1727:1750   */\n      dup5\n      add\n        /* \"#utility.yul\":1723:1755   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":1688:1700   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1767:1782   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":1764:1799   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":1795:1796   */\n      0x00\n        /* \"#utility.yul\":1792:1793   */\n      dup1\n        /* \"#utility.yul\":1785:1797   */\n      revert\n        /* \"#utility.yul\":1764:1799   */\n    tag_453:\n        /* \"#utility.yul\":1831:1833   */\n      dup3\n        /* \"#utility.yul\":1823:1829   */\n      dup7\n        /* \"#utility.yul\":1819:1834   */\n      add\n        /* \"#utility.yul\":1843:2060   */\n    tag_454:\n        /* \"#utility.yul\":1859:1865   */\n      dup5\n        /* \"#utility.yul\":1854:1857   */\n      dup2\n        /* \"#utility.yul\":1851:1866   */\n      lt\n        /* \"#utility.yul\":1843:2060   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":1939:1942   */\n      dup1\n        /* \"#utility.yul\":1926:1943   */\n      calldataload\n        /* \"#utility.yul\":1956:1987   */\n      tag_457\n        /* \"#utility.yul\":1981:1986   */\n      dup2\n        /* \"#utility.yul\":1956:1987   */\n      tag_430\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":2000:2018   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2038:2050   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":1876:1888   */\n      dup4\n      add\n        /* \"#utility.yul\":1843:2060   */\n      jump(tag_454)\n    tag_456:\n      pop\n        /* \"#utility.yul\":2078:2083   */\n      swap7\n        /* \"#utility.yul\":1352:2089   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2094:3234   */\n    tag_36:\n        /* \"#utility.yul\":2212:2218   */\n      0x00\n        /* \"#utility.yul\":2220:2226   */\n      dup1\n        /* \"#utility.yul\":2273:2275   */\n      0x40\n        /* \"#utility.yul\":2261:2270   */\n      dup4\n        /* \"#utility.yul\":2252:2259   */\n      dup6\n        /* \"#utility.yul\":2248:2271   */\n      sub\n        /* \"#utility.yul\":2244:2276   */\n      slt\n        /* \"#utility.yul\":2241:2293   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":2289:2290   */\n      0x00\n        /* \"#utility.yul\":2286:2287   */\n      dup1\n        /* \"#utility.yul\":2279:2291   */\n      revert\n        /* \"#utility.yul\":2241:2293   */\n    tag_459:\n        /* \"#utility.yul\":2329:2338   */\n      dup3\n        /* \"#utility.yul\":2316:2339   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2399:2401   */\n      dup1\n        /* \"#utility.yul\":2391:2397   */\n      dup3\n        /* \"#utility.yul\":2388:2402   */\n      gt\n        /* \"#utility.yul\":2385:2419   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":2415:2416   */\n      0x00\n        /* \"#utility.yul\":2412:2413   */\n      dup1\n        /* \"#utility.yul\":2405:2417   */\n      revert\n        /* \"#utility.yul\":2385:2419   */\n    tag_460:\n        /* \"#utility.yul\":2453:2459   */\n      dup2\n        /* \"#utility.yul\":2442:2451   */\n      dup6\n        /* \"#utility.yul\":2438:2460   */\n      add\n        /* \"#utility.yul\":2428:2460   */\n      swap2\n      pop\n        /* \"#utility.yul\":2498:2505   */\n      dup6\n        /* \"#utility.yul\":2491:2495   */\n      0x1f\n        /* \"#utility.yul\":2487:2489   */\n      dup4\n        /* \"#utility.yul\":2483:2496   */\n      add\n        /* \"#utility.yul\":2479:2506   */\n      slt\n        /* \"#utility.yul\":2469:2524   */\n      tag_461\n      jumpi\n        /* \"#utility.yul\":2520:2521   */\n      0x00\n        /* \"#utility.yul\":2517:2518   */\n      dup1\n        /* \"#utility.yul\":2510:2522   */\n      revert\n        /* \"#utility.yul\":2469:2524   */\n    tag_461:\n        /* \"#utility.yul\":2556:2558   */\n      dup2\n        /* \"#utility.yul\":2543:2559   */\n      calldataload\n        /* \"#utility.yul\":2578:2582   */\n      0x20\n        /* \"#utility.yul\":2602:2662   */\n      tag_462\n        /* \"#utility.yul\":2618:2661   */\n      tag_452\n        /* \"#utility.yul\":2658:2660   */\n      dup4\n        /* \"#utility.yul\":2618:2661   */\n      tag_429\n      jump\t// in\n        /* \"#utility.yul\":2602:2662   */\n    tag_462:\n        /* \"#utility.yul\":2696:2711   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2778:2779   */\n      0x05\n        /* \"#utility.yul\":2774:2784   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":2766:2785   */\n      dup5\n      add\n        /* \"#utility.yul\":2762:2790   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":2727:2739   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2802:2821   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":2799:2838   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":2834:2835   */\n      0x00\n        /* \"#utility.yul\":2831:2832   */\n      dup1\n        /* \"#utility.yul\":2824:2836   */\n      revert\n        /* \"#utility.yul\":2799:2838   */\n    tag_464:\n        /* \"#utility.yul\":2858:2869   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":2878:3020   */\n    tag_465:\n        /* \"#utility.yul\":2894:2900   */\n      dup4\n        /* \"#utility.yul\":2889:2892   */\n      dup7\n        /* \"#utility.yul\":2886:2901   */\n      lt\n        /* \"#utility.yul\":2878:3020   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":2960:2977   */\n      dup6\n      calldataload\n        /* \"#utility.yul\":2948:2978   */\n      dup3\n      mstore\n        /* \"#utility.yul\":2911:2923   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":2998:3010   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2878:3020   */\n      jump(tag_465)\n    tag_467:\n        /* \"#utility.yul\":3039:3044   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":3082:3100   */\n      dup7\n      add\n        /* \"#utility.yul\":3069:3101   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":3113:3129   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3110:3146   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":3142:3143   */\n      0x00\n        /* \"#utility.yul\":3139:3140   */\n      dup1\n        /* \"#utility.yul\":3132:3144   */\n      revert\n        /* \"#utility.yul\":3110:3146   */\n    tag_468:\n      pop\n        /* \"#utility.yul\":3165:3228   */\n      tag_469\n        /* \"#utility.yul\":3220:3227   */\n      dup6\n        /* \"#utility.yul\":3209:3217   */\n      dup3\n        /* \"#utility.yul\":3198:3207   */\n      dup7\n        /* \"#utility.yul\":3194:3218   */\n      add\n        /* \"#utility.yul\":3165:3228   */\n      tag_431\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":3155:3228   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2094:3234   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3431:3611   */\n    tag_42:\n        /* \"#utility.yul\":3490:3496   */\n      0x00\n        /* \"#utility.yul\":3543:3545   */\n      0x20\n        /* \"#utility.yul\":3531:3540   */\n      dup3\n        /* \"#utility.yul\":3522:3529   */\n      dup5\n        /* \"#utility.yul\":3518:3541   */\n      sub\n        /* \"#utility.yul\":3514:3546   */\n      slt\n        /* \"#utility.yul\":3511:3563   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":3559:3560   */\n      0x00\n        /* \"#utility.yul\":3556:3557   */\n      dup1\n        /* \"#utility.yul\":3549:3561   */\n      revert\n        /* \"#utility.yul\":3511:3563   */\n    tag_472:\n      pop\n        /* \"#utility.yul\":3582:3605   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3431:3611   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:3819   */\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3780:3812   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3762:3813   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3750:3752   */\n      0x20\n        /* \"#utility.yul\":3735:3753   */\n      add\n      swap1\n        /* \"#utility.yul\":3616:3819   */\n      jump\t// out\n        /* \"#utility.yul\":3824:4079   */\n    tag_56:\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3944:3946   */\n      0x20\n        /* \"#utility.yul\":3932:3941   */\n      dup3\n        /* \"#utility.yul\":3923:3930   */\n      dup5\n        /* \"#utility.yul\":3919:3942   */\n      sub\n        /* \"#utility.yul\":3915:3947   */\n      slt\n        /* \"#utility.yul\":3912:3964   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":3960:3961   */\n      0x00\n        /* \"#utility.yul\":3957:3958   */\n      dup1\n        /* \"#utility.yul\":3950:3962   */\n      revert\n        /* \"#utility.yul\":3912:3964   */\n    tag_475:\n        /* \"#utility.yul\":3999:4008   */\n      dup2\n        /* \"#utility.yul\":3986:4009   */\n      calldataload\n        /* \"#utility.yul\":4018:4049   */\n      tag_476\n        /* \"#utility.yul\":4043:4048   */\n      dup2\n        /* \"#utility.yul\":4018:4049   */\n      tag_430\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":4068:4073   */\n      swap4\n        /* \"#utility.yul\":3824:4079   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4084:4399   */\n    tag_64:\n        /* \"#utility.yul\":4152:4158   */\n      0x00\n        /* \"#utility.yul\":4160:4166   */\n      dup1\n        /* \"#utility.yul\":4213:4215   */\n      0x40\n        /* \"#utility.yul\":4201:4210   */\n      dup4\n        /* \"#utility.yul\":4192:4199   */\n      dup6\n        /* \"#utility.yul\":4188:4211   */\n      sub\n        /* \"#utility.yul\":4184:4216   */\n      slt\n        /* \"#utility.yul\":4181:4233   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":4229:4230   */\n      0x00\n        /* \"#utility.yul\":4226:4227   */\n      dup1\n        /* \"#utility.yul\":4219:4231   */\n      revert\n        /* \"#utility.yul\":4181:4233   */\n    tag_478:\n        /* \"#utility.yul\":4268:4277   */\n      dup3\n        /* \"#utility.yul\":4255:4278   */\n      calldataload\n        /* \"#utility.yul\":4287:4318   */\n      tag_479\n        /* \"#utility.yul\":4312:4317   */\n      dup2\n        /* \"#utility.yul\":4287:4318   */\n      tag_430\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":4337:4342   */\n      swap5\n        /* \"#utility.yul\":4389:4391   */\n      0x20\n        /* \"#utility.yul\":4374:4392   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4361:4393   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4084:4399   */\n      jump\t// out\n        /* \"#utility.yul\":4586:4704   */\n    tag_432:\n        /* \"#utility.yul\":4672:4677   */\n      dup1\n        /* \"#utility.yul\":4665:4678   */\n      iszero\n        /* \"#utility.yul\":4658:4679   */\n      iszero\n        /* \"#utility.yul\":4651:4656   */\n      dup2\n        /* \"#utility.yul\":4648:4680   */\n      eq\n        /* \"#utility.yul\":4638:4698   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":4694:4695   */\n      0x00\n        /* \"#utility.yul\":4691:4692   */\n      dup1\n        /* \"#utility.yul\":4684:4696   */\n      revert\n        /* \"#utility.yul\":4709:5455   */\n    tag_71:\n        /* \"#utility.yul\":4826:4832   */\n      0x00\n        /* \"#utility.yul\":4834:4840   */\n      dup1\n        /* \"#utility.yul\":4842:4848   */\n      0x00\n        /* \"#utility.yul\":4850:4856   */\n      dup1\n        /* \"#utility.yul\":4858:4864   */\n      0x00\n        /* \"#utility.yul\":4866:4872   */\n      dup1\n        /* \"#utility.yul\":4919:4922   */\n      0xc0\n        /* \"#utility.yul\":4907:4916   */\n      dup8\n        /* \"#utility.yul\":4898:4905   */\n      dup10\n        /* \"#utility.yul\":4894:4917   */\n      sub\n        /* \"#utility.yul\":4890:4923   */\n      slt\n        /* \"#utility.yul\":4887:4940   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":4936:4937   */\n      0x00\n        /* \"#utility.yul\":4933:4934   */\n      dup1\n        /* \"#utility.yul\":4926:4938   */\n      revert\n        /* \"#utility.yul\":4887:4940   */\n    tag_484:\n        /* \"#utility.yul\":4975:4984   */\n      dup7\n        /* \"#utility.yul\":4962:4985   */\n      calldataload\n        /* \"#utility.yul\":4994:5025   */\n      tag_485\n        /* \"#utility.yul\":5019:5024   */\n      dup2\n        /* \"#utility.yul\":4994:5025   */\n      tag_430\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":5044:5049   */\n      swap6\n      pop\n        /* \"#utility.yul\":5101:5103   */\n      0x20\n        /* \"#utility.yul\":5086:5104   */\n      dup8\n      add\n        /* \"#utility.yul\":5073:5105   */\n      calldataload\n        /* \"#utility.yul\":5114:5147   */\n      tag_486\n        /* \"#utility.yul\":5073:5105   */\n      dup2\n        /* \"#utility.yul\":5114:5147   */\n      tag_430\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":5166:5173   */\n      swap5\n      pop\n        /* \"#utility.yul\":5220:5222   */\n      0x40\n        /* \"#utility.yul\":5205:5223   */\n      dup8\n      add\n        /* \"#utility.yul\":5192:5224   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":5276:5278   */\n      0x60\n        /* \"#utility.yul\":5261:5279   */\n      dup8\n      add\n        /* \"#utility.yul\":5248:5280   */\n      calldataload\n        /* \"#utility.yul\":5289:5319   */\n      tag_487\n        /* \"#utility.yul\":5248:5280   */\n      dup2\n        /* \"#utility.yul\":5289:5319   */\n      tag_432\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":4709:5455   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":5392:5395   */\n      0x80\n        /* \"#utility.yul\":5377:5396   */\n      dup2\n      add\n        /* \"#utility.yul\":5364:5397   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":5444:5447   */\n      0xa0\n        /* \"#utility.yul\":5429:5448   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5416:5449   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":4709:5455   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5712:6100   */\n    tag_81:\n        /* \"#utility.yul\":5780:5786   */\n      0x00\n        /* \"#utility.yul\":5788:5794   */\n      dup1\n        /* \"#utility.yul\":5841:5843   */\n      0x40\n        /* \"#utility.yul\":5829:5838   */\n      dup4\n        /* \"#utility.yul\":5820:5827   */\n      dup6\n        /* \"#utility.yul\":5816:5839   */\n      sub\n        /* \"#utility.yul\":5812:5844   */\n      slt\n        /* \"#utility.yul\":5809:5861   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":5857:5858   */\n      0x00\n        /* \"#utility.yul\":5854:5855   */\n      dup1\n        /* \"#utility.yul\":5847:5859   */\n      revert\n        /* \"#utility.yul\":5809:5861   */\n    tag_492:\n        /* \"#utility.yul\":5896:5905   */\n      dup3\n        /* \"#utility.yul\":5883:5906   */\n      calldataload\n        /* \"#utility.yul\":5915:5946   */\n      tag_493\n        /* \"#utility.yul\":5940:5945   */\n      dup2\n        /* \"#utility.yul\":5915:5946   */\n      tag_430\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":5965:5970   */\n      swap2\n      pop\n        /* \"#utility.yul\":6022:6024   */\n      0x20\n        /* \"#utility.yul\":6007:6025   */\n      dup4\n      add\n        /* \"#utility.yul\":5994:6026   */\n      calldataload\n        /* \"#utility.yul\":6035:6068   */\n      tag_494\n        /* \"#utility.yul\":5994:6026   */\n      dup2\n        /* \"#utility.yul\":6035:6068   */\n      tag_430\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":6087:6094   */\n      dup1\n        /* \"#utility.yul\":6077:6094   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5712:6100   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6717:7181   */\n    tag_105:\n        /* \"#utility.yul\":6802:6808   */\n      0x00\n        /* \"#utility.yul\":6810:6816   */\n      dup1\n        /* \"#utility.yul\":6818:6824   */\n      0x00\n        /* \"#utility.yul\":6871:6873   */\n      0x60\n        /* \"#utility.yul\":6859:6868   */\n      dup5\n        /* \"#utility.yul\":6850:6857   */\n      dup7\n        /* \"#utility.yul\":6846:6869   */\n      sub\n        /* \"#utility.yul\":6842:6874   */\n      slt\n        /* \"#utility.yul\":6839:6891   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":6887:6888   */\n      0x00\n        /* \"#utility.yul\":6884:6885   */\n      dup1\n        /* \"#utility.yul\":6877:6889   */\n      revert\n        /* \"#utility.yul\":6839:6891   */\n    tag_497:\n        /* \"#utility.yul\":6926:6935   */\n      dup4\n        /* \"#utility.yul\":6913:6936   */\n      calldataload\n        /* \"#utility.yul\":6945:6976   */\n      tag_498\n        /* \"#utility.yul\":6970:6975   */\n      dup2\n        /* \"#utility.yul\":6945:6976   */\n      tag_430\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":6995:7000   */\n      swap3\n      pop\n        /* \"#utility.yul\":7047:7049   */\n      0x20\n        /* \"#utility.yul\":7032:7050   */\n      dup5\n      add\n        /* \"#utility.yul\":7019:7051   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":7103:7105   */\n      0x40\n        /* \"#utility.yul\":7088:7106   */\n      dup5\n      add\n        /* \"#utility.yul\":7075:7107   */\n      calldataload\n        /* \"#utility.yul\":7116:7149   */\n      tag_499\n        /* \"#utility.yul\":7075:7107   */\n      dup2\n        /* \"#utility.yul\":7116:7149   */\n      tag_430\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":7168:7175   */\n      dup1\n        /* \"#utility.yul\":7158:7175   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6717:7181   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7186:7818   */\n    tag_113:\n        /* \"#utility.yul\":7357:7359   */\n      0x20\n        /* \"#utility.yul\":7409:7430   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7479:7492   */\n      dup3\n      mload\n        /* \"#utility.yul\":7382:7400   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":7501:7523   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x00\n      swap2\n        /* \"#utility.yul\":7357:7359   */\n      swap1\n        /* \"#utility.yul\":7580:7595   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7554:7556   */\n      0x40\n        /* \"#utility.yul\":7539:7557   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":7328:7332   */\n      dup5\n        /* \"#utility.yul\":7623:7792   */\n    tag_501:\n        /* \"#utility.yul\":7637:7643   */\n      dup2\n        /* \"#utility.yul\":7634:7635   */\n      dup2\n        /* \"#utility.yul\":7631:7644   */\n      lt\n        /* \"#utility.yul\":7623:7792   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":7698:7711   */\n      dup4\n      mload\n        /* \"#utility.yul\":7686:7712   */\n      dup4\n      mstore\n        /* \"#utility.yul\":7767:7782   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":7732:7744   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":7659:7660   */\n      0x01\n        /* \"#utility.yul\":7652:7661   */\n      add\n        /* \"#utility.yul\":7623:7792   */\n      jump(tag_501)\n    tag_503:\n      pop\n        /* \"#utility.yul\":7809:7812   */\n      swap1\n      swap7\n        /* \"#utility.yul\":7186:7818   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7823:8203   */\n    tag_123:\n        /* \"#utility.yul\":7902:7903   */\n      0x01\n        /* \"#utility.yul\":7898:7910   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7945:7957   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7966:8027   */\n      tag_505\n      jumpi\n        /* \"#utility.yul\":8020:8024   */\n      0x7f\n        /* \"#utility.yul\":8012:8018   */\n      dup3\n        /* \"#utility.yul\":8008:8025   */\n      and\n        /* \"#utility.yul\":7998:8025   */\n      swap2\n      pop\n        /* \"#utility.yul\":7966:8027   */\n    tag_505:\n        /* \"#utility.yul\":8073:8075   */\n      0x20\n        /* \"#utility.yul\":8065:8071   */\n      dup3\n        /* \"#utility.yul\":8062:8076   */\n      lt\n        /* \"#utility.yul\":8042:8060   */\n      dup2\n        /* \"#utility.yul\":8039:8077   */\n      sub\n        /* \"#utility.yul\":8036:8197   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":8119:8129   */\n      0x4e487b71\n        /* \"#utility.yul\":8114:8117   */\n      0xe0\n        /* \"#utility.yul\":8110:8130   */\n      shl\n        /* \"#utility.yul\":8107:8108   */\n      0x00\n        /* \"#utility.yul\":8100:8131   */\n      mstore\n        /* \"#utility.yul\":8154:8158   */\n      0x22\n        /* \"#utility.yul\":8151:8152   */\n      0x04\n        /* \"#utility.yul\":8144:8159   */\n      mstore\n        /* \"#utility.yul\":8182:8186   */\n      0x24\n        /* \"#utility.yul\":8179:8180   */\n      0x00\n        /* \"#utility.yul\":8172:8187   */\n      revert\n        /* \"#utility.yul\":8036:8197   */\n    tag_506:\n      pop\n        /* \"#utility.yul\":7823:8203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8208:8335   */\n    tag_140:\n        /* \"#utility.yul\":8269:8279   */\n      0x4e487b71\n        /* \"#utility.yul\":8264:8267   */\n      0xe0\n        /* \"#utility.yul\":8260:8280   */\n      shl\n        /* \"#utility.yul\":8257:8258   */\n      0x00\n        /* \"#utility.yul\":8250:8281   */\n      mstore\n        /* \"#utility.yul\":8300:8304   */\n      0x32\n        /* \"#utility.yul\":8297:8298   */\n      0x04\n        /* \"#utility.yul\":8290:8305   */\n      mstore\n        /* \"#utility.yul\":8324:8328   */\n      0x24\n        /* \"#utility.yul\":8321:8322   */\n      0x00\n        /* \"#utility.yul\":8314:8329   */\n      revert\n        /* \"#utility.yul\":8340:8467   */\n    tag_143:\n        /* \"#utility.yul\":8401:8411   */\n      0x4e487b71\n        /* \"#utility.yul\":8396:8399   */\n      0xe0\n        /* \"#utility.yul\":8392:8412   */\n      shl\n        /* \"#utility.yul\":8389:8390   */\n      0x00\n        /* \"#utility.yul\":8382:8413   */\n      mstore\n        /* \"#utility.yul\":8432:8436   */\n      0x01\n        /* \"#utility.yul\":8429:8430   */\n      0x04\n        /* \"#utility.yul\":8422:8437   */\n      mstore\n        /* \"#utility.yul\":8456:8460   */\n      0x24\n        /* \"#utility.yul\":8453:8454   */\n      0x00\n        /* \"#utility.yul\":8446:8461   */\n      revert\n        /* \"#utility.yul\":8682:8809   */\n    tag_433:\n        /* \"#utility.yul\":8743:8753   */\n      0x4e487b71\n        /* \"#utility.yul\":8738:8741   */\n      0xe0\n        /* \"#utility.yul\":8734:8754   */\n      shl\n        /* \"#utility.yul\":8731:8732   */\n      0x00\n        /* \"#utility.yul\":8724:8755   */\n      mstore\n        /* \"#utility.yul\":8774:8778   */\n      0x11\n        /* \"#utility.yul\":8771:8772   */\n      0x04\n        /* \"#utility.yul\":8764:8779   */\n      mstore\n        /* \"#utility.yul\":8798:8802   */\n      0x24\n        /* \"#utility.yul\":8795:8796   */\n      0x00\n        /* \"#utility.yul\":8788:8803   */\n      revert\n        /* \"#utility.yul\":8814:8949   */\n    tag_155:\n        /* \"#utility.yul\":8853:8856   */\n      0x00\n        /* \"#utility.yul\":8874:8891   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":8871:8914   */\n      tag_513\n      jumpi\n        /* \"#utility.yul\":8894:8912   */\n      tag_513\n      tag_433\n      jump\t// in\n    tag_513:\n      pop\n        /* \"#utility.yul\":8941:8942   */\n      0x01\n        /* \"#utility.yul\":8930:8943   */\n      add\n      swap1\n        /* \"#utility.yul\":8814:8949   */\n      jump\t// out\n        /* \"#utility.yul\":8954:9138   */\n    tag_164:\n        /* \"#utility.yul\":9024:9030   */\n      0x00\n        /* \"#utility.yul\":9077:9079   */\n      0x20\n        /* \"#utility.yul\":9065:9074   */\n      dup3\n        /* \"#utility.yul\":9056:9063   */\n      dup5\n        /* \"#utility.yul\":9052:9075   */\n      sub\n        /* \"#utility.yul\":9048:9080   */\n      slt\n        /* \"#utility.yul\":9045:9097   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":9093:9094   */\n      0x00\n        /* \"#utility.yul\":9090:9091   */\n      dup1\n        /* \"#utility.yul\":9083:9095   */\n      revert\n        /* \"#utility.yul\":9045:9097   */\n    tag_515:\n      pop\n        /* \"#utility.yul\":9116:9132   */\n      mload\n      swap2\n        /* \"#utility.yul\":8954:9138   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9805:9933   */\n    tag_184:\n        /* \"#utility.yul\":9845:9848   */\n      0x00\n        /* \"#utility.yul\":9876:9877   */\n      dup3\n        /* \"#utility.yul\":9872:9878   */\n      not\n        /* \"#utility.yul\":9869:9870   */\n      dup3\n        /* \"#utility.yul\":9866:9879   */\n      gt\n        /* \"#utility.yul\":9863:9902   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":9882:9900   */\n      tag_520\n      tag_433\n      jump\t// in\n    tag_520:\n      pop\n        /* \"#utility.yul\":9918:9927   */\n      add\n      swap1\n        /* \"#utility.yul\":9805:9933   */\n      jump\t// out\n        /* \"#utility.yul\":9938:10063   */\n    tag_213:\n        /* \"#utility.yul\":9978:9982   */\n      0x00\n        /* \"#utility.yul\":10006:10007   */\n      dup3\n        /* \"#utility.yul\":10003:10004   */\n      dup3\n        /* \"#utility.yul\":10000:10008   */\n      lt\n        /* \"#utility.yul\":9997:10031   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":10011:10029   */\n      tag_523\n      tag_433\n      jump\t// in\n    tag_523:\n      pop\n        /* \"#utility.yul\":10048:10057   */\n      sub\n      swap1\n        /* \"#utility.yul\":9938:10063   */\n      jump\t// out\n        /* \"#utility.yul\":10068:10358   */\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10276:10308   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":10258:10309   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10340:10342   */\n      0x20\n        /* \"#utility.yul\":10325:10343   */\n      dup3\n      add\n        /* \"#utility.yul\":10318:10352   */\n      mstore\n        /* \"#utility.yul\":10246:10248   */\n      0x40\n        /* \"#utility.yul\":10231:10249   */\n      add\n      swap1\n        /* \"#utility.yul\":10068:10358   */\n      jump\t// out\n        /* \"#utility.yul\":10363:10608   */\n    tag_249:\n        /* \"#utility.yul\":10430:10436   */\n      0x00\n        /* \"#utility.yul\":10483:10485   */\n      0x20\n        /* \"#utility.yul\":10471:10480   */\n      dup3\n        /* \"#utility.yul\":10462:10469   */\n      dup5\n        /* \"#utility.yul\":10458:10481   */\n      sub\n        /* \"#utility.yul\":10454:10486   */\n      slt\n        /* \"#utility.yul\":10451:10503   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":10499:10500   */\n      0x00\n        /* \"#utility.yul\":10496:10497   */\n      dup1\n        /* \"#utility.yul\":10489:10501   */\n      revert\n        /* \"#utility.yul\":10451:10503   */\n    tag_526:\n        /* \"#utility.yul\":10531:10540   */\n      dup2\n        /* \"#utility.yul\":10525:10541   */\n      mload\n        /* \"#utility.yul\":10550:10578   */\n      tag_476\n        /* \"#utility.yul\":10572:10577   */\n      dup2\n        /* \"#utility.yul\":10550:10578   */\n      tag_432\n      jump\t// in\n        /* \"#utility.yul\":10613:10781   */\n    tag_321:\n        /* \"#utility.yul\":10653:10660   */\n      0x00\n        /* \"#utility.yul\":10719:10720   */\n      dup2\n        /* \"#utility.yul\":10715:10716   */\n      0x00\n        /* \"#utility.yul\":10711:10717   */\n      not\n        /* \"#utility.yul\":10707:10721   */\n      div\n        /* \"#utility.yul\":10704:10705   */\n      dup4\n        /* \"#utility.yul\":10701:10722   */\n      gt\n        /* \"#utility.yul\":10696:10697   */\n      dup3\n        /* \"#utility.yul\":10689:10698   */\n      iszero\n        /* \"#utility.yul\":10682:10699   */\n      iszero\n        /* \"#utility.yul\":10678:10723   */\n      and\n        /* \"#utility.yul\":10675:10746   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":10726:10744   */\n      tag_530\n      tag_433\n      jump\t// in\n    tag_530:\n      pop\n        /* \"#utility.yul\":10766:10775   */\n      mul\n      swap1\n        /* \"#utility.yul\":10613:10781   */\n      jump\t// out\n        /* \"#utility.yul\":10786:11003   */\n    tag_323:\n        /* \"#utility.yul\":10826:10827   */\n      0x00\n        /* \"#utility.yul\":10852:10853   */\n      dup3\n        /* \"#utility.yul\":10842:10974   */\n      tag_532\n      jumpi\n        /* \"#utility.yul\":10896:10906   */\n      0x4e487b71\n        /* \"#utility.yul\":10891:10894   */\n      0xe0\n        /* \"#utility.yul\":10887:10907   */\n      shl\n        /* \"#utility.yul\":10884:10885   */\n      0x00\n        /* \"#utility.yul\":10877:10908   */\n      mstore\n        /* \"#utility.yul\":10931:10935   */\n      0x12\n        /* \"#utility.yul\":10928:10929   */\n      0x04\n        /* \"#utility.yul\":10921:10936   */\n      mstore\n        /* \"#utility.yul\":10959:10963   */\n      0x24\n        /* \"#utility.yul\":10956:10957   */\n      0x00\n        /* \"#utility.yul\":10949:10964   */\n      revert\n        /* \"#utility.yul\":10842:10974   */\n    tag_532:\n      pop\n        /* \"#utility.yul\":10988:10997   */\n      div\n      swap1\n        /* \"#utility.yul\":10786:11003   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207465eacca55e6772d8ddf5c1debd21b04d008be344114d1ebf132565ed53ac2a64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_152": {
									"entryPoint": null,
									"id": 152,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1959": {
									"entryPoint": null,
									"id": 1959,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_2097": {
									"entryPoint": null,
									"id": 2097,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_2002": {
									"entryPoint": null,
									"id": 2002,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:691:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:3"
															},
															"nodeType": "YulIf",
															"src": "105:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:3"
															},
															"nodeType": "YulIf",
															"src": "204:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:3",
														"type": ""
													}
												],
												"src": "14:290:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "364:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "374:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "388:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "391:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "384:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "405:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "435:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "441:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "431:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "409:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "482:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "484:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "498:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "506:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "494:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "494:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "484:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "462:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "455:26:3"
															},
															"nodeType": "YulIf",
															"src": "452:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "572:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "593:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "600:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "605:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "596:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "596:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "586:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "586:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "586:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "637:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "640:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "630:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "630:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "630:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "665:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "668:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "658:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "658:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "658:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "528:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "559:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "548:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "548:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "525:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:38:3"
															},
															"nodeType": "YulIf",
															"src": "522:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "344:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "353:6:3",
														"type": ""
													}
												],
												"src": "309:380:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x50134FD4EA6547846EDE4C4BF46A334B7E87CCD OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xD166DF9DFB917C3B960673E2F420F928D45C9BE1 OR SWAP1 SSTORE PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x7 PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH7 0x714C53784FCA49 PUSH1 0xC9 SHL PUSH1 0xC0 SWAP1 DUP2 MSTORE PUSH3 0x72 SWAP2 PUSH1 0x4 SWAP2 SWAP1 PUSH3 0x1D0 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP1 DUP3 MSTORE PUSH7 0xE298A6F09F9491 PUSH1 0xC8 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xA3 SWAP2 PUSH1 0x5 SWAP2 PUSH3 0x1D0 JUMP JUMPDEST POP PUSH2 0x1F40 PUSH1 0x6 SSTORE PUSH2 0x2710 PUSH1 0x80 MSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0xEAEC17F25A8219FCD659B38C577DFFDAE25539BE OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP3 AND PUSH20 0xA888A7A2DC73EFDB5705106A216F068E939A2693 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0xE SSTORE PUSH1 0x64 PUSH1 0xF SSTORE PUSH7 0xD801472258000 PUSH1 0x10 SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x11 SSTORE PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH3 0x2064 CODESIZE DUP2 SWAP1 SUB SWAP1 DUP2 SWAP1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x158 SWAP2 PUSH3 0x276 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER SWAP1 DUP2 OR DUP4 SSTORE DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP6 MSTORE DUP2 DUP6 KECCAK256 DUP1 SLOAD DUP3 AND DUP5 OR SWAP1 SSTORE SWAP5 DUP7 AND DUP5 MSTORE SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP4 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x2E4 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1DE SWAP1 PUSH3 0x2A8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x202 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x24D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x21D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x24D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x24D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x24D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x230 JUMP JUMPDEST POP PUSH3 0x25B SWAP3 SWAP2 POP PUSH3 0x25F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x25B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x260 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2BD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1D64 PUSH3 0x300 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1724 ADD MSTORE PUSH2 0x1D64 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89476069 GT PUSH2 0x90 JUMPI DUP1 PUSH4 0x89476069 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x8CD0ACC3 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x985C51F9 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x99049F71 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xB6A5D7DE EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xDBBA0F01 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xDD1599FA EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF0B37C04 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xF8FF9AC9 EQ PUSH2 0x3B3 JUMPI PUSH2 0x10E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0xCBA52F9 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x1A40785C EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x24F8958A EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x43602017 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x4B4138C9 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x5F1D9FBC EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x79CBA1C4 EQ PUSH2 0x246 JUMPI PUSH2 0x10E JUMP JUMPDEST CALLDATASIZE PUSH2 0x10E JUMPI PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x15B PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x19E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1A44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x6EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x7BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x7DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0xA7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1B JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0xFB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0xFC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x13F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x10B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B54 JUMP JUMPDEST PUSH2 0x10F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x386 PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1B96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x140C JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x3D3 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FF SWAP1 PUSH2 0x1BDA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x44C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x421 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x55C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x492 JUMPI PUSH2 0x492 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4B0 JUMPI PUSH2 0x4B0 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4C4 JUMPI PUSH2 0x4C4 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4E7 JUMPI PUSH2 0x4E7 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x52F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x534 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP DUP1 PUSH2 0x554 DUP2 PUSH2 0x1C56 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x46C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x11 SLOAD DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x5B4 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST LT ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST LT ISZERO PUSH2 0x6C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E63726561736520616C6C6F77616E63652E2E2E4B454B PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6D8 CALLER PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0x1456 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 SELFBALANCE SWAP1 PUSH2 0x719 SWAP1 DUP3 SWAP1 ADDRESS SWAP1 PUSH2 0x1577 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 PUSH1 0x0 ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x784 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x7C7 CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP2 PUSH2 0x10B7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE DUP2 KECCAK256 SWAP1 SELFBALANCE SWAP1 DUP1 PUSH2 0x810 DUP4 PUSH2 0x170C JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 POP DUP3 DUP3 SELFBALANCE PUSH2 0x827 DUP2 ADDRESS DUP7 PUSH2 0x1577 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x866 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x883 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x8C3 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x1577 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x933 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x940 JUMPI PUSH1 0x0 SWAP5 POP PUSH2 0x9B5 JUMP JUMPDEST DUP7 DUP11 PUSH1 0x0 ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 DUP10 ADD DUP1 SLOAD DUP8 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x973 SWAP1 DUP5 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 DUP11 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x98F SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC DUP10 ADD DUP1 SLOAD DUP5 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x9AB SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP6 POP POP JUMPDEST PUSH1 0x1 DUP6 ISZERO ISZERO EQ PUSH2 0x9C7 JUMPI PUSH2 0x9C7 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP9 DUP2 MSTORE ADDRESS SWAP1 PUSH32 0x4611F1757844FDC2D4237A951583CA101C93F843BDC2D91A0E3FCF1D7A64CD2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA11 CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F40 DUP5 GT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x11 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x10 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 SLOAD DUP5 AND DUP4 MSTORE DUP2 DUP4 KECCAK256 SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xACA SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0B SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xB19 DUP4 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP5 POP SWAP3 POP DUP4 SWAP2 POP DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xB52 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST SWAP1 POP PUSH2 0xBA1 DUP2 DUP11 PUSH1 0x1 PUSH2 0x1577 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP11 AND SUB PUSH2 0xD2E JUMPI DUP3 DUP9 PUSH1 0x0 ADD PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBDC SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC DUP8 ADD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xBF8 SWAP1 DUP5 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 DUP9 ADD DUP1 SLOAD DUP7 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC14 SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE DUP8 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC30 SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xC6B SWAP3 SWAP2 AND SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCAE SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xCE5 SWAP3 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD28 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST POP PUSH2 0xF24 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xD52 JUMPI POP PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0xE73 JUMPI DUP3 DUP9 PUSH1 0x0 ADD PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xD DUP8 ADD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xD8A SWAP1 DUP5 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 DUP9 ADD DUP1 SLOAD DUP7 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xDA6 SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE DUP8 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xDC2 SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xDFB SWAP3 SWAP1 SWAP2 AND SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE3E SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xCE5 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CB7 JUMP JUMPDEST DUP6 DUP9 PUSH1 0x0 ADD PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE8A SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 DUP9 ADD DUP1 SLOAD DUP8 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xEA6 SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xEDF SWAP3 SWAP1 SWAP2 AND SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF22 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 ADDRESS SWAP1 PUSH32 0x37238854FE57FBF51F09946F854FC3916FE83938D6521F09BD05463839F1304 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7A CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0xF83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ PUSH2 0xF98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFA3 DUP4 PUSH2 0x10B7 JUMP JUMPDEST PUSH2 0xFAC DUP5 PUSH2 0x13D9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x3D3 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0xFD4 CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0xFDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 SLOAD SWAP1 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 SUB PUSH2 0x1037 JUMPI POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP SWAP2 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP16 AND SUB PUSH2 0x1075 JUMPI POP POP POP PUSH1 0x9 DUP4 ADD SLOAD PUSH1 0xD DUP5 ADD SLOAD PUSH1 0xC DUP6 ADD SLOAD PUSH1 0xA DUP7 ADD SLOAD PUSH1 0xE DUP8 ADD SLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP SWAP2 PUSH2 0x1099 JUMP JUMPDEST POP POP POP PUSH1 0x11 DUP4 ADD SLOAD PUSH1 0x15 DUP5 ADD SLOAD PUSH1 0x14 DUP6 ADD SLOAD PUSH1 0x12 DUP7 ADD SLOAD PUSH1 0x16 DUP8 ADD SLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP SWAP2 JUMPDEST PUSH1 0xD SLOAD PUSH1 0xE SLOAD SWAP1 SWAP16 SWAP1 SWAP15 POP SWAP5 SWAP13 POP SWAP3 SWAP11 POP SWAP1 SWAP9 POP SWAP7 POP SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x10C0 CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x10C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FB CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x1104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND PUSH2 0x1121 JUMPI PUSH2 0x1121 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x3 SLOAD DUP5 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP2 AND SUB PUSH2 0x11AE JUMPI DUP5 SWAP3 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x118B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x134C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP2 AND SUB PUSH2 0x1347 JUMPI DUP5 SWAP3 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0xF SLOAD DUP9 PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST SWAP1 POP PUSH2 0x11EF DUP2 DUP9 PUSH2 0x1CA0 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 DUP1 PUSH2 0x11FD DUP4 PUSH2 0x170C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12A8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH1 0x1 DUP4 ISZERO ISZERO EQ PUSH2 0x131A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 ISZERO ISZERO EQ PUSH2 0x1329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x1338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP7 POP POP POP POP POP POP POP PUSH2 0x134C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0x1356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x10 DUP2 ADD DUP1 SLOAD DUP5 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP6 MSTORE DUP1 DUP6 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x13CB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x13B7 JUMPI JUMPDEST POP POP POP POP POP SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E2 CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x13EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x141D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x28 PUSH1 0x11 SLOAD PUSH2 0x142C SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP7 AND SUB PUSH2 0x1535 JUMPI DUP4 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1485 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x149E SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1520 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST POP PUSH2 0x152D DUP7 DUP4 PUSH1 0x1 PUSH2 0x1793 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x156E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x854D5541413D4951151 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x64 ADD PUSH2 0x6B7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1582 CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x158B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE DUP2 KECCAK256 SWAP1 DUP1 DUP1 PUSH2 0x15BE DUP10 PUSH2 0x170C JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP9 ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x15E6 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x1601 JUMPI POP PUSH1 0x4 DUP6 ADD DUP3 SWAP1 SSTORE PUSH1 0xC DUP5 ADD DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x1 DUP9 ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x1620 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x162F JUMPI POP PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1643 JUMPI POP PUSH1 0x5 DUP6 ADD DUP4 SWAP1 SSTORE PUSH1 0x1 PUSH2 0x16B2 JUMP JUMPDEST DUP8 ISZERO DUP1 ISZERO PUSH2 0x1659 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x166C JUMPI POP PUSH1 0x1 DUP1 DUP7 ADD DUP5 SWAP1 SSTORE PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x1 DUP9 ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x1686 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x16A0 JUMPI POP PUSH1 0x1 DUP1 DUP7 ADD DUP4 SWAP1 SSTORE PUSH1 0x9 DUP6 ADD DUP3 SWAP1 SSTORE PUSH2 0x16B2 JUMP JUMPDEST POP PUSH1 0x5 DUP6 ADD DUP3 SWAP1 SSTORE PUSH1 0xD DUP5 ADD DUP2 SWAP1 SSTORE PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP9 ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x16C5 JUMPI POP DUP4 PUSH1 0xE SLOAD LT JUMPDEST ISZERO PUSH2 0x16E7 JUMPI DUP4 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16DC SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x16FF SWAP1 POP JUMP JUMPDEST DUP4 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16F9 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 GT PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x6 SLOAD DUP7 PUSH2 0x1751 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x175B SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1769 DUP3 DUP8 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1777 DUP3 DUP5 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 POP DUP7 DUP2 EQ PUSH2 0x1788 JUMPI PUSH2 0x1788 PUSH2 0x1C2A JUMP JUMPDEST SWAP7 SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0xB DUP4 MSTORE DUP2 DUP5 KECCAK256 NUMBER DUP1 DUP7 MSTORE SWAP1 DUP5 MSTORE SWAP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x10 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP7 MSTORE SWAP4 SWAP1 SWAP5 KECCAK256 SWAP1 SWAP3 ADD SSTORE SWAP1 DUP3 ISZERO ISZERO SWAP1 SUB PUSH2 0x1809 JUMPI DUP3 DUP2 PUSH1 0x10 ADD PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17FE SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1826 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 PUSH1 0x10 ADD PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1820 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1859 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x183D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x186B JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x18BF JUMPI PUSH2 0x18BF PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x18E0 JUMPI PUSH2 0x18E0 PUSH2 0x1881 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1925 PUSH2 0x1920 DUP4 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0x1897 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1944 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1968 JUMPI DUP1 CALLDATALOAD PUSH2 0x195B DUP2 PUSH2 0x18EA JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1948 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x199D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x19C1 PUSH2 0x1920 DUP4 PUSH2 0x18C7 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x19E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x19FE JUMPI DUP6 CALLDATALOAD DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x19E5 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A21 DUP6 DUP3 DUP7 ADD PUSH2 0x18FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A75 DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1A9A DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1ACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1ADA DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1AEA DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x1B01 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B39 DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B49 DUP2 PUSH2 0x18EA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1B74 DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1B8B DUP2 PUSH2 0x18EA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BCE JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1BB2 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1BEE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C0E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C68 JUMPI PUSH2 0x1C68 PUSH2 0x1C40 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C9B JUMPI PUSH2 0x1C9B PUSH2 0x1C40 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1CB2 JUMPI PUSH2 0x1CB2 PUSH2 0x1C40 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A75 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D07 JUMPI PUSH2 0x1D07 PUSH2 0x1C40 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D29 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x65EACCA55E6772D8DDF5C1DEBD21B04D008BE34411 0x4D 0x1E 0xBF SGT 0x25 PUSH6 0xED53AC2A6473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "148:98:0:-:0;;;-1:-1:-1;;;;;;148:98:0;;;203:42;148:98;;;;252:96;;;;;;305:42;252:96;;;355:37;96:14282;355:37;;96:14282;355:37;;;-1:-1:-1;;;355:37:0;;;;;;;;;;:::i;:::-;-1:-1:-1;398:39:0;;;;;;;;;;;;;-1:-1:-1;;;398:39:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;485:4:0;444:45;;541:5;495:51;;577:89;;;-1:-1:-1;;;;;;577:89:0;;;623:42;577:89;;;;672:90;;;;;719:42;672:90;;;;;;768:73;;;;;;;;;577:89;1382:28;;;;1416:29;;1475:3;1451:27;;1508:16;1484:40;;1563:25;1530:58;;1595:30;;;-1:-1:-1;;1595:30:0;;;1859:150;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1944:12;;1967:10;;630:5:1;:10;;-1:-1:-1;;;;;;630:10:1;;;164::2;630::1;;;;;650:18;;-1:-1:-1;650:18:1;;;;;;;;:25;;-1:-1:-1;;650:25:1;;;;;;;;-1:-1:-1;;;;;1944:12:0;;;685:26:1;;;;;:33;;;;;;;;1967:10:0;;;728:28:1;;;;;:35;;;;;;;;;;;1994:3:0::1;:8:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;96:14282;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;96:14282:0;;;-1:-1:-1;96:14282:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:3;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:3;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:3:o;309:380::-;388:1;384:12;;;;431;;;452:61;;506:4;498:6;494:17;484:27;;452:61;559:2;551:6;548:14;528:18;525:38;522:161;;605:10;600:3;596:20;593:1;586:31;640:4;637:1;630:15;668:4;665:1;658:15;522:161;;309:380;;;:::o;:::-;96:14282:0;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_169": {
									"entryPoint": null,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_186": {
									"entryPoint": null,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2097": {
									"entryPoint": null,
									"id": 2097,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@authorize_2016": {
									"entryPoint": 4279,
									"id": 2016,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bridgeKEK_277": {
									"entryPoint": 1380,
									"id": 277,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@bridgeKEK_bulk_374": {
									"entryPoint": 5132,
									"id": 374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@bridgeMaxAmount_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bridgeTransferOutBulk_1855": {
									"entryPoint": 1108,
									"id": 1855,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@depositTrace_1300": {
									"entryPoint": null,
									"id": 1300,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@depositTracer_1284": {
									"entryPoint": 4960,
									"id": 1284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deposit_456": {
									"entryPoint": 5206,
									"id": 456,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@iVF_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isAuthorized_2042": {
									"entryPoint": 5176,
									"id": 2042,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_21": {
									"entryPoint": 966,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMoV_1922": {
									"entryPoint": 1982,
									"id": 1922,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setShards_1910": {
									"entryPoint": 2568,
									"id": 1910,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@split_689": {
									"entryPoint": 5900,
									"id": 689,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@symbol_24": {
									"entryPoint": 4022,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@synced_930": {
									"entryPoint": 5495,
									"id": 930,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@tokenizeWETH_1107": {
									"entryPoint": 2012,
									"id": 1107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@traceDeposit_1253": {
									"entryPoint": 6035,
									"id": 1253,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferAuthorization_2085": {
									"entryPoint": 3951,
									"id": 2085,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_1782": {
									"entryPoint": 4336,
									"id": 1782,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@unauthorize_2030": {
									"entryPoint": 5081,
									"id": 2030,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vaultDebt_626": {
									"entryPoint": 4035,
									"id": 626,
									"parameterSlots": 1,
									"returnSlots": 7
								},
								"@withdrawToken_1584": {
									"entryPoint": 2683,
									"id": 1584,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1184": {
									"entryPoint": 1775,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 6399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 6744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_address_payablet_uint256t_boolt_uint256t_uint256": {
									"entryPoint": 6838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_address_payable": {
									"entryPoint": 6996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_address_payable_t_uint256__to_t_address_payable_t_address_payable_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed": {
									"entryPoint": 7351,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a87b07d1d03e49ac64b8ad82e4d6d78b30b240dba8fb49150f0870cf4e5a538__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f853ccd4088e0bae51721a102a5f5bd7f37b9a48d0c48436c8a2c858099ce3a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 6343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7232,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11756:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:3",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:3"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:3",
																"statements": []
															},
															"src": "294:140:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:3"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:3",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:3"
															},
															"nodeType": "YulIf",
															"src": "443:91:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:3",
														"type": ""
													}
												],
												"src": "14:597:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "665:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "677:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "658:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "658:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "705:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "708:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "698:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "698:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "729:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "732:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "722:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "722:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "722:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "616:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "793:230:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "803:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "819:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "813:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "813:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "803:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "831:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "853:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "869:4:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "875:2:3",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "865:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "865:13:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "884:2:3",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "880:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "880:7:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "861:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "861:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "849:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "835:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "964:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "966:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "966:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "966:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "907:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "919:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "904:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "904:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "943:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "955:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "940:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "901:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "901:62:3"
															},
															"nodeType": "YulIf",
															"src": "898:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1002:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1006:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "995:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "995:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "995:22:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "773:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "782:6:3",
														"type": ""
													}
												],
												"src": "748:275:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1097:114:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1141:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1143:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1143:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1143:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1113:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1121:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1110:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:30:3"
															},
															"nodeType": "YulIf",
															"src": "1107:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1172:33:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1188:1:3",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1191:6:3"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1184:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1184:14:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1200:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1180:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1180:25:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1172:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1077:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1088:4:3",
														"type": ""
													}
												],
												"src": "1028:183:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:86:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1325:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1334:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1337:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1327:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1327:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1327:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1284:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1295:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1310:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1315:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1306:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1306:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1319:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1302:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1302:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1291:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1291:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1281:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1281:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1274:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:50:3"
															},
															"nodeType": "YulIf",
															"src": "1271:70:3"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1250:5:3",
														"type": ""
													}
												],
												"src": "1216:131:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1416:673:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1465:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1474:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1477:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1467:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1467:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1467:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1444:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1452:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1440:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1440:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1459:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1436:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1436:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1429:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:35:3"
															},
															"nodeType": "YulIf",
															"src": "1426:55:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1490:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1513:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1500:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:20:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1494:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1529:14:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1539:4:3",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1533:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1552:71:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1619:2:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "1579:39:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1579:43:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1563:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:60:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1556:3:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1632:16:3",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1645:3:3"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1636:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1664:3:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1669:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1657:15:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1681:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1692:3:3"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1697:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1688:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:12:3"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1681:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1709:46:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1743:1:3",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1746:2:3"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1739:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1739:10:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1727:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1727:23:3"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1752:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1723:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:32:3"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1713:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1783:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1792:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1795:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1785:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1785:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1785:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1770:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1778:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1767:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:15:3"
															},
															"nodeType": "YulIf",
															"src": "1764:35:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1808:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:3"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1831:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1819:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:15:3"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1812:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1899:161:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1913:30:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1939:3:3"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "1926:12:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1926:17:3"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "1917:5:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "1981:5:3"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "1956:24:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1956:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1956:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2007:3:3"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "2012:5:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2000:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2000:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2000:18:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2031:19:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2042:3:3"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2047:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2038:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2038:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2031:3:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1854:3:3"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1859:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1851:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:15:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1867:23:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1869:19:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1880:3:3"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1885:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1876:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1876:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1869:3:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1847:3:3",
																"statements": []
															},
															"src": "1843:217:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2069:14:3",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2078:5:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2069:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1390:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1398:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1406:5:3",
														"type": ""
													}
												],
												"src": "1352:737:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2231:1003:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2277:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2286:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2289:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2279:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2279:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2279:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2252:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2261:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2248:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2248:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2273:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2244:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2244:32:3"
															},
															"nodeType": "YulIf",
															"src": "2241:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2302:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2329:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2316:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:23:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2306:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2348:28:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2358:18:3",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2352:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2403:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2412:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2415:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2405:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2405:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2405:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2391:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2399:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2388:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2388:14:3"
															},
															"nodeType": "YulIf",
															"src": "2385:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2428:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2442:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2453:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2438:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2438:22:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2432:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2508:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2520:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2510:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2510:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2510:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2487:2:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2491:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2483:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2483:13:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2498:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2479:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2479:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2472:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:35:3"
															},
															"nodeType": "YulIf",
															"src": "2469:55:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2533:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2556:2:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2543:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:16:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2537:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2568:14:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2578:4:3",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2572:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2591:71:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2658:2:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "2618:39:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2618:43:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2602:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2602:60:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2595:3:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2671:16:3",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2684:3:3"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "2675:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2703:3:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2708:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2696:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2696:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2696:15:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2720:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2731:3:3"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2736:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2727:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2727:12:3"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2748:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2770:2:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2778:1:3",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2781:2:3"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2774:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2774:10:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2766:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2766:19:3"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2787:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2762:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:28:3"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2752:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2822:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2831:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2834:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2824:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2824:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2824:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2805:6:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2813:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2802:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:19:3"
															},
															"nodeType": "YulIf",
															"src": "2799:39:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2847:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2862:2:3"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2866:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:11:3"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2851:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2934:86:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2955:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2973:3:3"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "2960:12:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2960:17:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2948:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2948:30:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:30:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2991:19:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3002:3:3"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "3007:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2998:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2998:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2991:3:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2889:3:3"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2894:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2886:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2886:15:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2902:23:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2904:19:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2915:3:3"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "2920:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2911:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2911:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2904:3:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2882:3:3",
																"statements": []
															},
															"src": "2878:142:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3029:15:3",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "3039:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3053:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3086:9:3"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "3097:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3069:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:32:3"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3057:8:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3132:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3116:8:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3126:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3113:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:16:3"
															},
															"nodeType": "YulIf",
															"src": "3110:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3155:73:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3198:9:3"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3209:8:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3194:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3194:24:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3220:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3165:28:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:63:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3155:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2189:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2200:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2212:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2220:6:3",
														"type": ""
													}
												],
												"src": "2094:1140:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3334:92:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3344:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3356:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3367:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3352:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3344:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3386:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3411:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3404:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3404:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3397:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3397:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3379:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3379:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3379:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3303:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3314:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3325:4:3",
														"type": ""
													}
												],
												"src": "3239:187:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3501:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3547:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3556:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3549:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3549:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3549:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3522:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3531:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3518:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3518:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3543:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3514:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3514:32:3"
															},
															"nodeType": "YulIf",
															"src": "3511:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3572:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3595:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3582:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3582:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3467:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3478:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3490:6:3",
														"type": ""
													}
												],
												"src": "3431:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3717:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3727:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3739:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3735:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3727:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3769:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3784:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3800:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3805:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3796:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3796:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3809:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3792:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3792:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3780:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3780:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3762:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3762:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3686:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3697:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3708:4:3",
														"type": ""
													}
												],
												"src": "3616:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3902:177:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3948:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3957:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3960:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3950:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3950:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3950:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3923:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3932:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3919:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3919:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3944:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3915:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3915:32:3"
															},
															"nodeType": "YulIf",
															"src": "3912:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3973:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3999:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3986:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3986:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3977:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4043:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4018:24:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4018:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4018:31:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4058:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4068:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4058:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3868:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3879:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3891:6:3",
														"type": ""
													}
												],
												"src": "3824:255:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4171:228:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4217:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4226:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4229:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4219:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4219:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4219:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4192:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4201:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4188:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4188:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4213:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4184:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:32:3"
															},
															"nodeType": "YulIf",
															"src": "4181:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4242:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4268:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4255:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4255:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4246:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4312:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4287:24:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4287:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4287:31:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4327:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4337:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4327:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4351:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4378:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4389:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4374:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4374:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4361:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4361:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4351:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4129:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4140:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4152:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4160:6:3",
														"type": ""
													}
												],
												"src": "4084:315:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4505:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4515:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4527:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4538:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4523:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4523:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4515:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4557:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4568:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4550:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4550:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4550:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4474:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4485:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4496:4:3",
														"type": ""
													}
												],
												"src": "4404:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4628:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4682:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4691:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4694:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4684:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4684:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4684:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4651:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4672:5:3"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4665:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4665:13:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4658:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4658:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4648:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4648:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4641:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4641:40:3"
															},
															"nodeType": "YulIf",
															"src": "4638:60:3"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4617:5:3",
														"type": ""
													}
												],
												"src": "4586:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4877:578:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4924:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4933:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4936:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4926:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4926:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4926:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4898:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4907:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4894:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:3:3",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4890:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4890:33:3"
															},
															"nodeType": "YulIf",
															"src": "4887:53:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4949:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4975:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4962:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4962:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4953:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5019:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4994:24:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4994:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4994:31:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5034:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5044:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5034:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5058:47:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5090:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5101:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5086:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5073:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5073:32:3"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5062:7:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5139:7:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5114:24:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5114:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5114:33:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5156:17:3",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5166:7:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5182:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5209:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5220:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5205:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5205:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5192:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5192:32:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5233:47:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5265:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5276:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5261:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5261:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5248:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5248:32:3"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "5237:7:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "5311:7:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5289:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5289:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5289:30:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5328:17:3",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "5338:7:3"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5328:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5354:43:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5381:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5392:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5377:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5377:19:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5364:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5364:33:3"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5354:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5406:43:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5433:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5444:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5429:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5429:19:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5416:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:33:3"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "5406:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_address_payablet_uint256t_boolt_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4803:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4814:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4826:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4834:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4842:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4850:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4858:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4866:6:3",
														"type": ""
													}
												],
												"src": "4709:746:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5530:177:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5576:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5585:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5588:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5578:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5578:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5578:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5551:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5560:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5547:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5543:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:32:3"
															},
															"nodeType": "YulIf",
															"src": "5540:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5601:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5627:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5614:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5614:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5605:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5671:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5646:24:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5646:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5646:31:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5686:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5696:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5686:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5496:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5507:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5519:6:3",
														"type": ""
													}
												],
												"src": "5460:247:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5799:301:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5845:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5854:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5857:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5847:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5847:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5847:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5820:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5829:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5816:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5816:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5841:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5812:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5812:32:3"
															},
															"nodeType": "YulIf",
															"src": "5809:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5870:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5896:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5883:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5883:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5874:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5940:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5915:24:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5915:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5915:31:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5955:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5965:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5979:47:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6011:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6022:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6007:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6007:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5994:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:32:3"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5983:7:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "6060:7:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "6035:24:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6035:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6035:33:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6077:17:3",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "6087:7:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6077:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5757:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5768:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5780:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5788:6:3",
														"type": ""
													}
												],
												"src": "5712:388:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6374:338:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6384:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6396:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6407:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6392:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6384:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6427:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6438:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6420:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6420:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6420:25:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6465:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6476:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6461:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6461:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6481:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6454:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6454:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6454:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6508:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6519:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6504:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6504:18:3"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6524:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6497:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6497:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6551:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6562:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6547:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6547:18:3"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6567:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6540:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6540:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6540:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6594:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6605:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6590:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6590:19:3"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6611:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6583:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6583:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6583:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6638:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6649:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:19:3"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "6655:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6627:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6627:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6627:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6682:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6693:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6678:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6678:19:3"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "6699:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6671:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6671:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6671:35:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6295:9:3",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "6306:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6314:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6322:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6330:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6338:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6346:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6354:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6365:4:3",
														"type": ""
													}
												],
												"src": "6105:607:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6829:352:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6875:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6884:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6887:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6877:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6877:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6877:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6850:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6859:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6846:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6846:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6871:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6842:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6842:32:3"
															},
															"nodeType": "YulIf",
															"src": "6839:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6900:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6926:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6913:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6913:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6904:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6970:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "6945:24:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6945:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6945:31:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6985:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6995:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6985:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7009:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7036:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7047:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7032:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7032:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7019:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7019:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7009:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7060:47:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7092:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7103:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7088:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7088:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7075:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7075:32:3"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "7064:7:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "7141:7:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "7116:24:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7116:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7116:33:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7158:17:3",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "7168:7:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7158:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6779:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6790:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6802:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6810:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6818:6:3",
														"type": ""
													}
												],
												"src": "6717:464:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7337:481:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7347:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7357:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7351:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7368:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7386:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7397:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7382:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7382:18:3"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7372:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7416:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7427:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7409:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7409:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7409:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7439:17:3",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "7450:6:3"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "7443:3:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7465:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7485:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7479:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7479:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7469:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7508:6:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7516:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7501:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7501:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7501:22:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7532:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7543:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7554:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7539:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7539:18:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7532:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7566:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7584:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7592:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7580:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7580:15:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7570:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7604:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7613:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7608:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7672:120:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7693:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7704:6:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7698:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7698:13:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7686:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7686:26:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7686:26:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7725:19:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7736:3:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7741:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7732:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7732:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7725:3:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7757:25:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7771:6:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7779:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7767:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7767:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7757:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7634:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7637:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7631:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7631:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7645:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7647:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7656:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7659:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7652:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7652:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7647:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7627:3:3",
																"statements": []
															},
															"src": "7623:169:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7801:11:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7809:3:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7801:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7306:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7317:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7328:4:3",
														"type": ""
													}
												],
												"src": "7186:632:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7878:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7888:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7902:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7905:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7898:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7898:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7888:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7919:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7949:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7955:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7945:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7945:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7923:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7996:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7998:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8012:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8020:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8008:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8008:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7998:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7976:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7969:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7969:26:3"
															},
															"nodeType": "YulIf",
															"src": "7966:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8086:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8107:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8114:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8119:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8110:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8110:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8100:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8100:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8100:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8151:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8154:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8144:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8144:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8144:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8179:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8182:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8172:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8172:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8172:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8042:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8065:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8073:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8062:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8062:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8039:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8039:38:3"
															},
															"nodeType": "YulIf",
															"src": "8036:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7858:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7867:6:3",
														"type": ""
													}
												],
												"src": "7823:380:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8240:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8257:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8264:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8269:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8260:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8260:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8250:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8250:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8250:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8297:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8300:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8290:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8290:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8321:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8324:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8314:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8314:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8314:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8208:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8372:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8389:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8396:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8401:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8392:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8392:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8382:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8382:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8382:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8429:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8432:4:3",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8422:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8422:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8422:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8453:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8456:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8446:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8446:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8446:15:3"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "8340:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8663:14:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8665:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8672:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8665:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8647:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8655:3:3",
														"type": ""
													}
												],
												"src": "8472:205:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8714:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8731:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8738:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8743:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8734:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8734:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8724:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8724:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8724:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8771:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8774:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8764:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8764:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8764:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8795:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8798:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8788:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8788:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8788:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8682:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8861:88:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8892:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8894:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8894:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8894:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8877:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8888:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8884:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8884:6:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8874:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8874:17:3"
															},
															"nodeType": "YulIf",
															"src": "8871:43:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8923:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8934:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8941:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8930:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8930:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8923:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8843:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8853:3:3",
														"type": ""
													}
												],
												"src": "8814:135:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9035:103:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9081:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9090:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9093:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9083:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9083:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9083:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9056:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9065:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9052:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9052:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9077:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9048:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9048:32:3"
															},
															"nodeType": "YulIf",
															"src": "9045:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9106:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9122:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9116:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9116:16:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9106:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9001:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9012:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9024:6:3",
														"type": ""
													}
												],
												"src": "8954:184:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9272:175:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9282:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9294:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9305:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9290:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9290:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9282:4:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9317:29:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9335:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9340:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9331:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9331:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9344:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9327:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9327:19:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9321:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9362:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9377:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9385:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9373:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9373:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9355:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9355:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9355:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9409:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9420:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9405:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9405:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9429:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9437:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9425:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9425:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9398:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9398:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9398:43:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9233:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9244:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9252:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9263:4:3",
														"type": ""
													}
												],
												"src": "9143:304:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9626:174:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9643:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9654:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9636:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9636:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9636:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9677:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9688:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9673:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9673:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9693:2:3",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9666:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9666:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9666:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9716:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9727:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9712:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9712:18:3"
																	},
																	{
																		"hexValue": "496e63726561736520616c6c6f77616e63652e2e2e4b454b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9732:26:3",
																		"type": "",
																		"value": "Increase allowance...KEK"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9705:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9705:54:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9705:54:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9768:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9780:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9791:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9776:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9776:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9768:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a87b07d1d03e49ac64b8ad82e4d6d78b30b240dba8fb49150f0870cf4e5a538__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9603:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9617:4:3",
														"type": ""
													}
												],
												"src": "9452:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9853:80:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9880:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9882:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9882:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9882:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9869:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9876:1:3"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9872:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9872:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9866:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9866:13:3"
															},
															"nodeType": "YulIf",
															"src": "9863:39:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9911:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9922:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9925:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9918:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9918:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9911:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9836:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9839:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9845:3:3",
														"type": ""
													}
												],
												"src": "9805:128:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9987:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10009:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10011:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10011:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10011:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10003:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10006:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10000:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10000:8:3"
															},
															"nodeType": "YulIf",
															"src": "9997:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10040:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10052:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10055:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10048:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10048:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10040:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9969:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9972:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9978:4:3",
														"type": ""
													}
												],
												"src": "9938:125:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10213:145:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10223:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10235:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10246:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10231:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10231:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10223:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10265:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10280:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10296:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10301:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10292:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10292:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10305:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10276:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10276:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10258:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10258:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10258:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10329:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10340:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10325:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10325:18:3"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10345:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10318:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10318:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10318:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10174:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10185:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10193:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10204:4:3",
														"type": ""
													}
												],
												"src": "10068:290:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10441:167:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10487:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10496:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10499:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10489:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10489:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10489:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10462:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10471:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10458:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10483:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10454:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10454:32:3"
															},
															"nodeType": "YulIf",
															"src": "10451:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10512:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10531:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10525:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10525:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10516:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10572:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "10550:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10550:28:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10550:28:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10587:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10597:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10587:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10407:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10418:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10430:6:3",
														"type": ""
													}
												],
												"src": "10363:245:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10665:116:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10724:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10726:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10726:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10726:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10696:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10689:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10689:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10682:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10682:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10704:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10715:1:3",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10711:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10711:6:3"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10719:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10707:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10707:14:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10701:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10701:21:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10678:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10678:45:3"
															},
															"nodeType": "YulIf",
															"src": "10675:71:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10755:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10770:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10773:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10766:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10766:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10755:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10644:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10647:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10653:7:3",
														"type": ""
													}
												],
												"src": "10613:168:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10832:171:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10863:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10884:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10891:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10896:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "10887:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10887:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10877:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10877:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10877:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10928:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10931:4:3",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10921:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10921:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10921:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10956:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10959:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10949:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10949:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10949:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10852:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10845:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10845:9:3"
															},
															"nodeType": "YulIf",
															"src": "10842:132:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10983:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10992:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10995:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10988:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10988:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10983:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10817:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10820:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10826:1:3",
														"type": ""
													}
												],
												"src": "10786:217:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11197:218:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11207:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11219:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11230:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11215:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11215:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11207:4:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11242:29:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11260:3:3",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11265:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11256:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11256:11:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11269:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11252:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11252:19:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11246:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11287:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11302:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11310:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11298:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11298:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11280:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11280:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11280:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11334:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11345:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11330:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11330:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11354:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11362:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11350:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11350:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11323:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11323:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11323:43:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11386:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11397:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11382:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11382:18:3"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11402:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11375:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11375:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11375:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address_payable_t_uint256__to_t_address_payable_t_address_payable_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11150:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11161:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11169:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11177:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11188:4:3",
														"type": ""
													}
												],
												"src": "11008:407:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11594:160:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11611:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11622:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11604:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11604:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11604:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11645:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11656:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11641:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11641:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11661:2:3",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11634:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11634:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11634:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11684:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11695:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11680:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11680:18:3"
																	},
																	{
																		"hexValue": "21535550504f52544544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11700:12:3",
																		"type": "",
																		"value": "!SUPPORTED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11673:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11673:40:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11673:40:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11722:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11734:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11745:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11730:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11730:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11722:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f853ccd4088e0bae51721a102a5f5bd7f37b9a48d0c48436c8a2c858099ce3a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11571:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11585:4:3",
														"type": ""
													}
												],
												"src": "11420:334:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_payablet_address_payablet_uint256t_boolt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_bool(value_2)\n        value3 := value_2\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address_payable(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_2a87b07d1d03e49ac64b8ad82e4d6d78b30b240dba8fb49150f0870cf4e5a538__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Increase allowance...KEK\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_payable_t_address_payable_t_uint256__to_t_address_payable_t_address_payable_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_f853ccd4088e0bae51721a102a5f5bd7f37b9a48d0c48436c8a2c858099ce3a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"!SUPPORTED\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"30": [
									{
										"length": 32,
										"start": 5924
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89476069 GT PUSH2 0x90 JUMPI DUP1 PUSH4 0x89476069 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x8CD0ACC3 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x985C51F9 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x99049F71 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xB6A5D7DE EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xDBBA0F01 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xDD1599FA EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xF0B37C04 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xF8FF9AC9 EQ PUSH2 0x3B3 JUMPI PUSH2 0x10E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0xCBA52F9 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x1A40785C EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x24F8958A EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x43602017 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x4B4138C9 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x5F1D9FBC EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x79CBA1C4 EQ PUSH2 0x246 JUMPI PUSH2 0x10E JUMP JUMPDEST CALLDATASIZE PUSH2 0x10E JUMPI PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0x1973 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST PUSH2 0x15B PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x19E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1A44 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x6EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x7BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x7DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0xA08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0xA7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1B JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH2 0xFB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x238 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F1 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0xFC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x13F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x10B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B54 JUMP JUMPDEST PUSH2 0x10F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x386 PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1B96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10C PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x13D9 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0x140C JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x3D3 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FF SWAP1 PUSH2 0x1BDA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x44C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x421 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x55C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x492 JUMPI PUSH2 0x492 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4B0 JUMPI PUSH2 0x4B0 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4C4 JUMPI PUSH2 0x4C4 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4E7 JUMPI PUSH2 0x4E7 PUSH2 0x1C14 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x52F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x534 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP DUP1 PUSH2 0x554 DUP2 PUSH2 0x1C56 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x46C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x11 SLOAD DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x5B4 SWAP1 CALLER SWAP1 PUSH1 0x4 ADD PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST LT ISZERO PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x672 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST LT ISZERO PUSH2 0x6C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E63726561736520616C6C6F77616E63652E2E2E4B454B PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6D8 CALLER PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH2 0x1456 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x6E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 SELFBALANCE SWAP1 PUSH2 0x719 SWAP1 DUP3 SWAP1 ADDRESS SWAP1 PUSH2 0x1577 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 PUSH1 0x0 ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x784 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x7C7 CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP2 PUSH2 0x10B7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE DUP2 KECCAK256 SWAP1 SELFBALANCE SWAP1 DUP1 PUSH2 0x810 DUP4 PUSH2 0x170C JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 POP DUP3 DUP3 SELFBALANCE PUSH2 0x827 DUP2 ADDRESS DUP7 PUSH2 0x1577 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x866 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x883 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH2 0x8C3 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x1577 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x933 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x940 JUMPI PUSH1 0x0 SWAP5 POP PUSH2 0x9B5 JUMP JUMPDEST DUP7 DUP11 PUSH1 0x0 ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 DUP10 ADD DUP1 SLOAD DUP8 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x973 SWAP1 DUP5 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 DUP11 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x98F SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC DUP10 ADD DUP1 SLOAD DUP5 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x9AB SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP6 POP POP JUMPDEST PUSH1 0x1 DUP6 ISZERO ISZERO EQ PUSH2 0x9C7 JUMPI PUSH2 0x9C7 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP9 DUP2 MSTORE ADDRESS SWAP1 PUSH32 0x4611F1757844FDC2D4237A951583CA101C93F843BDC2D91A0E3FCF1D7A64CD2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA11 CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F40 DUP5 GT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x11 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x12 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x10 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 SLOAD DUP5 AND DUP4 MSTORE DUP2 DUP4 KECCAK256 SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xACA SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB0B SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xB19 DUP4 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP5 POP SWAP3 POP DUP4 SWAP2 POP DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xB52 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST SWAP1 POP PUSH2 0xBA1 DUP2 DUP11 PUSH1 0x1 PUSH2 0x1577 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP11 AND SUB PUSH2 0xD2E JUMPI DUP3 DUP9 PUSH1 0x0 ADD PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBDC SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xC DUP8 ADD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xBF8 SWAP1 DUP5 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 DUP9 ADD DUP1 SLOAD DUP7 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC14 SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE DUP8 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xC30 SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xC6B SWAP3 SWAP2 AND SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCAE SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xCE5 SWAP3 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD28 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST POP PUSH2 0xF24 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xD52 JUMPI POP PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ JUMPDEST ISZERO PUSH2 0xE73 JUMPI DUP3 DUP9 PUSH1 0x0 ADD PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xD DUP8 ADD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xD8A SWAP1 DUP5 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 DUP9 ADD DUP1 SLOAD DUP7 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xDA6 SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xE DUP8 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xDC2 SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xDFB SWAP3 SWAP1 SWAP2 AND SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE3E SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xCE5 SWAP3 SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CB7 JUMP JUMPDEST DUP6 DUP9 PUSH1 0x0 ADD PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE8A SWAP2 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 DUP9 ADD DUP1 SLOAD DUP8 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xEA6 SWAP1 DUP5 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH2 0xEDF SWAP3 SWAP1 SWAP2 AND SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF22 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 ADDRESS SWAP1 PUSH32 0x37238854FE57FBF51F09946F854FC3916FE83938D6521F09BD05463839F1304 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF7A CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0xF83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ PUSH2 0xF98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFA3 DUP4 PUSH2 0x10B7 JUMP JUMPDEST PUSH2 0xFAC DUP5 PUSH2 0x13D9 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x3D3 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0xFD4 CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0xFDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 SLOAD SWAP1 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 SUB PUSH2 0x1037 JUMPI POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP SWAP2 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP16 AND SUB PUSH2 0x1075 JUMPI POP POP POP PUSH1 0x9 DUP4 ADD SLOAD PUSH1 0xD DUP5 ADD SLOAD PUSH1 0xC DUP6 ADD SLOAD PUSH1 0xA DUP7 ADD SLOAD PUSH1 0xE DUP8 ADD SLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP SWAP2 PUSH2 0x1099 JUMP JUMPDEST POP POP POP PUSH1 0x11 DUP4 ADD SLOAD PUSH1 0x15 DUP5 ADD SLOAD PUSH1 0x14 DUP6 ADD SLOAD PUSH1 0x12 DUP7 ADD SLOAD PUSH1 0x16 DUP8 ADD SLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP SWAP2 JUMPDEST PUSH1 0xD SLOAD PUSH1 0xE SLOAD SWAP1 SWAP16 SWAP1 SWAP15 POP SWAP5 SWAP13 POP SWAP3 SWAP11 POP SWAP1 SWAP9 POP SWAP7 POP SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x10C0 CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x10C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FB CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x1104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND PUSH2 0x1121 JUMPI PUSH2 0x1121 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x3 SLOAD DUP5 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP2 AND SUB PUSH2 0x11AE JUMPI DUP5 SWAP3 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x118B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x134C JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP2 AND SUB PUSH2 0x1347 JUMPI DUP5 SWAP3 POP PUSH1 0x0 PUSH2 0x2710 PUSH1 0xF SLOAD DUP9 PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST SWAP1 POP PUSH2 0x11EF DUP2 DUP9 PUSH2 0x1CA0 JUMP JUMPDEST SWAP7 POP PUSH1 0x0 DUP1 PUSH2 0x11FD DUP4 PUSH2 0x170C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP11 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1254 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12A8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1301 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 POP POP PUSH1 0x1 DUP4 ISZERO ISZERO EQ PUSH2 0x131A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 ISZERO ISZERO EQ PUSH2 0x1329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x1338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP7 POP POP POP POP POP POP POP PUSH2 0x134C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH2 0x1356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x10 DUP2 ADD DUP1 SLOAD DUP5 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP6 MSTORE DUP1 DUP6 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x13CB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x13B7 JUMPI JUMPDEST POP POP POP POP POP SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E2 CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x13EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x141D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x28 PUSH1 0x11 SLOAD PUSH2 0x142C SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP7 AND SUB PUSH2 0x1535 JUMPI DUP4 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1485 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x149E SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1520 SWAP2 SWAP1 PUSH2 0x1CD0 JUMP JUMPDEST POP PUSH2 0x152D DUP7 DUP4 PUSH1 0x1 PUSH2 0x1793 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x156E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x854D5541413D4951151 PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x64 ADD PUSH2 0x6B7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1582 CALLER PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x158B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE DUP2 KECCAK256 SWAP1 DUP1 DUP1 PUSH2 0x15BE DUP10 PUSH2 0x170C JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP9 ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x15E6 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x1601 JUMPI POP PUSH1 0x4 DUP6 ADD DUP3 SWAP1 SSTORE PUSH1 0xC DUP5 ADD DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x1 DUP9 ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x1620 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP2 AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x162F JUMPI POP PUSH1 0x12 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1643 JUMPI POP PUSH1 0x5 DUP6 ADD DUP4 SWAP1 SSTORE PUSH1 0x1 PUSH2 0x16B2 JUMP JUMPDEST DUP8 ISZERO DUP1 ISZERO PUSH2 0x1659 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x166C JUMPI POP PUSH1 0x1 DUP1 DUP7 ADD DUP5 SWAP1 SSTORE PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x1 DUP9 ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x1686 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ADDRESS EQ JUMPDEST ISZERO PUSH2 0x16A0 JUMPI POP PUSH1 0x1 DUP1 DUP7 ADD DUP4 SWAP1 SSTORE PUSH1 0x9 DUP6 ADD DUP3 SWAP1 SSTORE PUSH2 0x16B2 JUMP JUMPDEST POP PUSH1 0x5 DUP6 ADD DUP3 SWAP1 SSTORE PUSH1 0xD DUP5 ADD DUP2 SWAP1 SSTORE PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP9 ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x16C5 JUMPI POP DUP4 PUSH1 0xE SLOAD LT JUMPDEST ISZERO PUSH2 0x16E7 JUMPI DUP4 PUSH1 0xE PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16DC SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x16FF SWAP1 POP JUMP JUMPDEST DUP4 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16F9 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 GT PUSH2 0x1720 JUMPI PUSH2 0x1720 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x6 SLOAD DUP7 PUSH2 0x1751 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x175B SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1769 DUP3 DUP8 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1777 DUP3 DUP5 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 POP DUP7 DUP2 EQ PUSH2 0x1788 JUMPI PUSH2 0x1788 PUSH2 0x1C2A JUMP JUMPDEST SWAP7 SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0xB DUP4 MSTORE DUP2 DUP5 KECCAK256 NUMBER DUP1 DUP7 MSTORE SWAP1 DUP5 MSTORE SWAP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x10 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP7 MSTORE SWAP4 SWAP1 SWAP5 KECCAK256 SWAP1 SWAP3 ADD SSTORE SWAP1 DUP3 ISZERO ISZERO SWAP1 SUB PUSH2 0x1809 JUMPI DUP3 DUP2 PUSH1 0x10 ADD PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17FE SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1826 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 PUSH1 0x10 ADD PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1820 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1859 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x183D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x186B JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x18BF JUMPI PUSH2 0x18BF PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x18E0 JUMPI PUSH2 0x18E0 PUSH2 0x1881 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1925 PUSH2 0x1920 DUP4 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0x1897 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1944 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1968 JUMPI DUP1 CALLDATALOAD PUSH2 0x195B DUP2 PUSH2 0x18EA JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1948 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x199D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x19C1 PUSH2 0x1920 DUP4 PUSH2 0x18C7 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x19E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x19FE JUMPI DUP6 CALLDATALOAD DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x19E5 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A21 DUP6 DUP3 DUP7 ADD PUSH2 0x18FF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A75 DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1A9A DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1ACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1ADA DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1AEA DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x1B01 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B39 DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B49 DUP2 PUSH2 0x18EA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1B74 DUP2 PUSH2 0x18EA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1B8B DUP2 PUSH2 0x18EA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BCE JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1BB2 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1BEE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C0E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C68 JUMPI PUSH2 0x1C68 PUSH2 0x1C40 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C9B JUMPI PUSH2 0x1C9B PUSH2 0x1C40 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1CB2 JUMPI PUSH2 0x1CB2 PUSH2 0x1C40 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1A75 DUP2 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D07 JUMPI PUSH2 0x1D07 PUSH2 0x1C40 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D29 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x65EACCA55E6772D8DDF5C1DEBD21B04D008BE34411 0x4D 0x1E 0xBF SGT 0x25 PUSH6 0xED53AC2A6473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "96:14282:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2090:4;;2068:9;2060:35;;2052:44;;;;;;96:14282;;2185:4;;2163:9;2155:35;;2147:44;;;;;355:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13383:470;;;;;;:::i;:::-;;:::i;:::-;;;3404:14:3;;3397:22;3379:41;;3367:2;3352:18;13383:470:0;3239:187:3;2204:601:0;;;;;;:::i;:::-;;:::i;553:18::-;;;;;;;;;;-1:-1:-1;553:18:0;;;;-1:-1:-1;;;;;553:18:0;;;;;;;;;;:::i;8868:477::-;;;;;;;;;;;;;:::i;14288:88::-;;;;;;;;;;-1:-1:-1;14288:88:0;;;;;:::i;:::-;;:::i;7744:1118::-;;;;;;;;;;;;;:::i;10128:184::-;;;;;;;;;;-1:-1:-1;10128:184:0;;;;;:::i;:::-;-1:-1:-1;;;;;10266:26:0;;;;10236:7;10266:26;;;:14;:26;;;;;;;;:39;;;;;;;;;10128:184;;;;4550:25:3;;;4538:2;4523:18;10128:184:0;4404:177:3;13859:423:0;;;;;;;;;;-1:-1:-1;13859:423:0;;;;;:::i;:::-;;:::i;10318:1734::-;;;;;;;;;;-1:-1:-1;10318:1734:0;;;;;:::i;:::-;;:::i;1106:358:1:-;;;;;;;;;;-1:-1:-1;1106:358:1;;;;;:::i;:::-;;:::i;398:39:0:-;;;;;;;;;;;;;:::i;1530:58::-;;;;;;;;;;;;;;;;4109:1470;;;;;;;;;;-1:-1:-1;4109:1470:0;;;;;:::i;:::-;;:::i;:::-;;;;6420:25:3;;;6476:2;6461:18;;6454:34;;;;6504:18;;;6497:34;;;;6562:2;6547:18;;6540:34;;;;6605:3;6590:19;;6583:35;6649:3;6634:19;;6627:35;6693:3;6678:19;;6671:35;6407:3;6392:19;4109:1470:0;6105:607:3;776:101:1;;;;;;;;;;-1:-1:-1;776:101:1;;;;;:::i;:::-;;:::i;12058:1319:0:-;;;;;;;;;;-1:-1:-1;12058:1319:0;;;;;:::i;:::-;;:::i;9853:269::-;;;;;;;;;;-1:-1:-1;9853:269:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;883:104:1:-;;;;;;;;;;-1:-1:-1;883:104:1;;;;;:::i;:::-;;:::i;2811:622:0:-;;;;;;:::i;:::-;;:::i;355:37::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13383:470::-;13526:4;457:26:1;164:10:2;457:12:1;:26::i;:::-;449:35;;;;;;13542:9:0::1;13574::::0;13569:257:::1;13593:10;:17;13589:1;:21;13569:257;;;13672:1;-1:-1:-1::0;;;;;13638:36:0::1;13646:10;13657:1;13646:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;13638:36:0::1;::::0;13631:44:::1;;;;:::i;:::-;13690:9;13713:10;13724:1;13713:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;13705:27:0::1;13740:7;13748:1;13740:10;;;;;;;;:::i;:::-;;;;;;;13705:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;13689:66:0;;-1:-1:-1;;13785:4:0::1;13777:12:::0;::::1;;;13769:21;;;::::0;::::1;;13811:4:::0;-1:-1:-1;13612:3:0;::::1;::::0;::::1;:::i;:::-;;;;13569:257;;;-1:-1:-1::0;13842:4:0;13383:470;-1:-1:-1;;;13383:470:0:o;2204:601::-;2268:4;2322;;2300:9;2292:35;;2284:44;;;;;;2376:15;;2354:9;2346:46;;2338:55;;;;;;2439:3;;2432:35;;-1:-1:-1;;;2432:35:0;;2480:9;;-1:-1:-1;;;;;2439:3:0;;2432:21;;:35;;164:10:2;;2432:35:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2424:66;;2403:97;;;;;;2546:3;;2539:50;;-1:-1:-1;;;2539:50:0;;164:10:2;2539:50:0;;;9355:34:3;2583:4:0;9405:18:3;;;9398:43;2618:9:0;;-1:-1:-1;;;;;2546:3:0;;2539:21;;9290:18:3;;2539:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2531:97;;2510:168;;;;-1:-1:-1;;;2510:168:0;;9654:2:3;2510:168:0;;;9636:21:3;9693:2;9673:18;;;9666:30;-1:-1:-1;;;9712:18:3;;;9705:54;9776:18;;2510:168:0;;;;;;;;;2688:12;2703:37;164:10:2;2725:3:0;;-1:-1:-1;;;;;2725:3:0;2730:9;2703:7;:37::i;:::-;2688:52;-1:-1:-1;2769:4:0;2758:15;;;;2750:24;;;;;;2791:7;2204:601;-1:-1:-1;;2204:601:0:o;8868:477::-;8966:10;;-1:-1:-1;;;;;8966:10:0;8924:18;8945:33;;;:12;:33;;;;;;9020:21;;9060:43;;9020:21;;9090:4;;9060:6;:43::i;:::-;:51;;9107:4;9060:51;9052:60;;;;;;9164:13;9122:4;:14;;:30;;;:56;;;;;;;:::i;:::-;;;;-1:-1:-1;;9228:1:0;9188:29;;;:42;;;9248:10;;9240:43;;-1:-1:-1;;;;;9248:10:0;;;;9240:43;;;;;9269:13;;9240:43;9228:1;9240:43;9269:13;9248:10;9240:43;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9298:40:0;;4550:25:3;;;9317:4:0;;9298:40;;4538:2:3;4523:18;9298:40:0;;;;;;;8914:431;;8868:477::o;14288:88::-;457:26:1;164:10:2;457:12:1;:26::i;:::-;449:35;;;;;;14354:15:0::1;14364:4;14354:9;:15::i;:::-;14288:88:::0;:::o;7744:1118::-;7844:10;;-1:-1:-1;;;;;7844:10:0;;;7802:18;7823:33;;;:12;:33;;;;;;7908:12;;;;;7887:35;;;;;7964:21;;7802:18;8029:20;7964:21;8029:5;:20::i;:::-;7996:53;;-1:-1:-1;7996:53:0;-1:-1:-1;8059:13:0;;-1:-1:-1;7996:53:0;;8166:21;8205:37;8166:21;8229:4;8059:13;8205:6;:37::i;:::-;:45;;8246:4;8205:45;8197:54;;;;;;8287:4;;8280:37;;-1:-1:-1;;;8280:37:0;;8261:16;;-1:-1:-1;;;;;8287:4:0;;8280:22;;:37;;8311:4;;8280:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8352:4;;8261:56;;-1:-1:-1;8335:28:0;;8261:56;;-1:-1:-1;;;;;8352:4:0;;8335:6;:28::i;:::-;:36;;8367:4;8335:36;8327:45;;;;;;8392:7;;;;;;;;;-1:-1:-1;;;;;8392:7:0;-1:-1:-1;;;;;8386:22:0;;8416:13;8386:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8382:383;;8749:5;8738:16;;8382:383;;;8488:4;8447;:14;;:29;;;:46;;;;;;;:::i;:::-;;;;-1:-1:-1;;8507:31:0;;;:48;;8550:4;;8507:31;;;:48;;8550:4;;8507:48;:::i;:::-;;;;-1:-1:-1;;8569:29:0;;;:46;;8610:4;;8569:29;:14;;:46;;8610:4;;8569:46;:::i;:::-;;;;-1:-1:-1;;8629:31:0;;;:48;;8672:4;;8629:31;;;:48;;8672:4;;8629:48;:::i;:::-;;;;-1:-1:-1;8702:4:0;;-1:-1:-1;;8382:383:0;8793:4;8781:16;;;;8774:24;;;;:::i;:::-;8813:42;;4550:25:3;;;8834:4:0;;8813:42;;4538:2:3;4523:18;8813:42:0;;;;;;;7792:1070;;;;;;;;;;7744:1118::o;13859:423::-;457:26:1;164:10:2;457:12:1;:26::i;:::-;449:35;;;;;;14108:4:0::1;14093:2;14085:28;;14077:37;;;::::0;::::1;;14124:22;:27:::0;;;;14161:15:::1;:25:::0;;;;14196:8:::1;:15:::0;;-1:-1:-1;;14196:15:0::1;::::0;::::1;;::::0;;;::::1;::::0;;14221:4:::1;:12:::0;14243:4:::1;:12:::0;;-1:-1:-1;;;;;;14243:12:0;;::::1;-1:-1:-1::0;;;;;14243:12:0;;::::1;;::::0;;;-1:-1:-1;14265:10:0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;13859:423::o;10318:1734::-;10432:10;;-1:-1:-1;;;;;10432:10:0;;;10390:18;10411:33;;;:12;:33;;;;;;10496:12;;;;10475:35;;;;;10567:38;;-1:-1:-1;;;10567:38:0;;10411:33;;10475:35;;10390:18;10567:23;;;;;:38;;10599:4;;10567:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10520:95;;10628:12;10642;10658:22;10664:15;10658:5;:22::i;:::-;10762:38;;-1:-1:-1;;;10762:38:0;;10625:55;;-1:-1:-1;10625:55:0;-1:-1:-1;10625:55:0;;-1:-1:-1;10625:55:0;;10690:12;;-1:-1:-1;;;;;10762:23:0;;;;;:38;;10794:4;;10762:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10748:52;;10818:24;10825:3;10830:5;10837:4;10818:6;:24::i;:::-;:32;;10846:4;10818:32;10810:41;;;;;;10891:4;;-1:-1:-1;;;;;10891:4:0;;;10865:31;;;;10861:1109;;10953:4;10912;:14;;:29;;;:46;;;;;;;:::i;:::-;;;;-1:-1:-1;;10972:31:0;;;:48;;11015:4;;10972:31;;;:48;;11015:4;;10972:48;:::i;:::-;;;;-1:-1:-1;;11034:31:0;;;:48;;11077:4;;11034:31;:14;;:48;;11077:4;;11034:48;:::i;:::-;;;;-1:-1:-1;;11096:33:0;;;:50;;11141:4;;11096:33;;;:50;;11141:4;;11096:50;:::i;:::-;;;;-1:-1:-1;;11167:4:0;;11190:10;;11160:48;;-1:-1:-1;;;11160:48:0;;-1:-1:-1;;;;;11167:4:0;;;;11160:21;;:48;;11190:10;;;11203:4;;11160:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11229:4:0;;11252:12;;11222:50;;-1:-1:-1;;;11222:50:0;;-1:-1:-1;;;;;11229:4:0;;;;11222:21;;:50;;11252:12;;;11267:4;;11222:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10861:1109;;;11319:3;;-1:-1:-1;;;;;11293:30:0;;;11319:3;;11293:30;:50;;;;-1:-1:-1;11327:8:0;;;;:16;;:8;:16;11293:50;11289:681;;;11401:4;11359;:14;;:30;;;:47;;;;;;;:::i;:::-;;;;-1:-1:-1;;11420:32:0;;;:49;;11464:4;;11420:32;;;:49;;11464:4;;11420:49;:::i;:::-;;;;-1:-1:-1;;11483:31:0;;;:48;;11526:4;;11483:31;:14;;:48;;11526:4;;11483:48;:::i;:::-;;;;-1:-1:-1;;11545:33:0;;;:50;;11590:4;;11545:33;;;:50;;11590:4;;11545:50;:::i;:::-;;;;-1:-1:-1;;11640:10:0;;11609:49;;-1:-1:-1;;;11609:49:0;;-1:-1:-1;;;;;11609:22:0;;;;;;:49;;11640:10;;;;11653:4;;11609:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11703:12:0;;11672:51;;-1:-1:-1;;;11672:51:0;;-1:-1:-1;;;;;11672:22:0;;;;;;:51;;11703:12;;;;11718:4;;11672:51;;;:::i;11289:681::-;11796:15;11754:4;:14;;:30;;;:58;;;;;;;:::i;:::-;;;;-1:-1:-1;;11826:31:0;;;:59;;11869:15;;11826:31;:14;;:59;;11869:15;;11826:59;:::i;:::-;;;;-1:-1:-1;;11930:10:0;;11899:60;;-1:-1:-1;;;11899:60:0;;-1:-1:-1;;;;;11899:22:0;;;;;;:60;;11930:10;;;;11943:15;;11899:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11289:681;11984:61;;4550:25:3;;;-1:-1:-1;;;;;11984:61:0;;;12006:4;;11984:61;;4538:2:3;4523:18;11984:61:0;;;;;;;10380:1672;;;;;;;;10318:1734;:::o;1106:358:1:-;1238:4;457:26;164:10:2;457:12:1;:26::i;:::-;449:35;;;;;;-1:-1:-1;;;;;1266:24:1;::::1;164:10:2::0;1266:24:1::1;1258:33;;;::::0;::::1;;1301:16;1335:26;1353:6;1335:9;:26::i;:::-;1371:30;1391:8;1371:11;:30::i;:::-;-1:-1:-1::0;1425:4:1::1;::::0;1106:358;-1:-1:-1;;;1106:358:1:o;398:39:0:-;;;;;;;:::i;4109:1470::-;4253:7;;;;;;;457:26:1;164:10:2;457:12:1;:26::i;:::-;449:35;;;;;;-1:-1:-1;;;;;4432:28:0;;::::1;4411:18;4432:28:::0;;;:12:::1;:28;::::0;;;;4617:10:::1;::::0;4432:28;;4411:18;;;;;;;;;;4617:10;;;::::1;4591:37:::0;;4587:911:::1;;-1:-1:-1::0;;;4652:29:0::1;::::0;::::1;::::0;4703:30:::1;::::0;::::1;::::0;4755:29:::1;::::0;::::1;::::0;4807:30:::1;::::0;::::1;::::0;4860:31:::1;::::0;::::1;::::0;4652:29;;-1:-1:-1;4703:30:0;;-1:-1:-1;4755:29:0;4587:911:::1;;;4938:12;::::0;-1:-1:-1;;;;;4938:12:0;;::::1;4912:39:::0;;::::1;::::0;4908:590:::1;;-1:-1:-1::0;;;4975:31:0;;;;5028:32;;;;5082:31;;;;5136:32;;;;5191:33;;;;4975:31;;-1:-1:-1;5028:32:0;;-1:-1:-1;5082:31:0;4908:590:::1;;;-1:-1:-1::0;;;5263:26:0;;;;5311:27;;;;5360:26;;;;5409:27;;;;5459:28;;;;5263:26;;-1:-1:-1;5311:27:0;;-1:-1:-1;5360:26:0;4908:590:::1;5515:8;::::0;5525:9:::1;::::0;5515:8;;5525:9;;-1:-1:-1;5536:5:0;;-1:-1:-1;5543:5:0;;-1:-1:-1;5550:5:0;;-1:-1:-1;5543:5:0;-1:-1:-1;5536:5:0;-1:-1:-1;4109:1470:0;-1:-1:-1;;;4109:1470:0:o;776:101:1:-;457:26;164:10:2;457:12:1;:26::i;:::-;449:35;;;;;;-1:-1:-1;;;;;844:19:1::1;;::::0;;;866:4:::1;844:19;::::0;;;;;;;:26;;-1:-1:-1;;844:26:1::1;::::0;;::::1;::::0;;776:101::o;12058:1319:0:-;12208:4;457:26:1;164:10:2;457:12:1;:26::i;:::-;449:35;;;;;;12254:10:0::1;::::0;-1:-1:-1;;;;;12254:10:0;;::::1;::::0;12282:31;::::1;12275:39;;;;:::i;:::-;12404:10;::::0;12346:6;;12324:19:::1;::::0;-1:-1:-1;;;;;12396:38:0;;::::1;12404:10:::0;::::1;12396:38:::0;12392:929:::1;;12472:8;12450:31;;12496:9;12519:11;-1:-1:-1::0;;;;;12511:25:0::1;12544:11;12511:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;12495:65:0;;-1:-1:-1;;12590:4:0::1;12582:12:::0;::::1;;;12574:21;;;::::0;::::1;;12619:4;12609:14;;12436:198;12392:929;;;12652:12;::::0;-1:-1:-1;;;;;12644:40:0;;::::1;12652:12:::0;::::1;12644:40:::0;12640:681:::1;;12722:8;12700:31;;12745:12;12804:5;12787:4;;12769:6;12761:31;;;;:::i;:::-;12760:50;;;;:::i;:::-;12745:65:::0;-1:-1:-1;12824:14:0::1;12745:65:::0;12824:14;::::1;:::i;:::-;;;12855:12;12869::::0;12885:11:::1;12891:4;12885:5;:11::i;:::-;12852:44;;;;;12911:13;12938:11;-1:-1:-1::0;;;;;12930:25:0::1;12963:6;12930:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;13016:10:0::1;::::0;13008:41:::1;::::0;12910:64;;-1:-1:-1;12989:13:0::1;::::0;-1:-1:-1;;;;;13016:10:0;;::::1;::::0;13040:4;;12989:13;13008:41;12989:13;13008:41;13040:4;13016:10;13008:41:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;13091:12:0::1;::::0;13083:43:::1;::::0;12988:61;;-1:-1:-1;13064:13:0::1;::::0;-1:-1:-1;;;;;13091:12:0;;::::1;::::0;13117:4;;13064:13;13083:43;13064:13;13083:43;13117:4;13091:12;13083:43:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;13063:63:0;;-1:-1:-1;;13160:4:0::1;13148:16:::0;::::1;;;13140:25;;;::::0;::::1;;13199:4;13187:16:::0;::::1;;;13179:25;;;::::0;::::1;;13238:4;13226:16:::0;::::1;;;13218:25;;;::::0;::::1;;13267:4;13257:14;;12686:596;;;;;;12640:681;;;13302:8;::::0;::::1;12640:681;13338:7;13330:16;;;::::0;::::1;;13363:7:::0;12058:1319;-1:-1:-1;;;;;;12058:1319:0:o;9853:269::-;-1:-1:-1;;;;;9994:33:0;;9973:18;9994:33;;;:12;:33;;;;;;;;;10065:11;;;10099:16;;;;;;;;;;;;;;;;;9941;;9994:33;;10065:11;;10099:16;10065:11;;10099:16;;;10065:11;10099:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9853:269;;;:::o;883:104:1:-;457:26;164:10:2;457:12:1;:26::i;:::-;449:35;;;;;;-1:-1:-1;;;;;953:19:1::1;975:5;953:19:::0;;;:14:::1;:19;::::0;;;;:27;;-1:-1:-1;;953:27:1::1;::::0;;883:104::o;2811:622:0:-;2880:4;2934;;2912:9;2904:35;;2896:44;;;;;;3016:2;2989:15;;2981:38;;;;:::i;:::-;2966:9;2958:62;;2950:71;;;;;993:107:1;-1:-1:-1;;;;;1074:19:1;1051:4;1074:19;;;:14;:19;;;;;;;;;993:107::o;3439:664:0:-;3665:3;;3553:4;;3589:6;;3553:4;;-1:-1:-1;;;;;3665:3:0;;;3639:30;;;;3635:438;;3698:6;3685:9;;:19;;;;;;;:::i;:::-;;;;;;;;3738:9;3718:8;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;3769:3:0;;3762:138;;-1:-1:-1;;;3762:138:0;;-1:-1:-1;;;;;11298:15:3;;;3762:138:0;;;11280:34:3;3856:4:0;11330:18:3;;;11323:43;11382:18;;;11375:34;;;3769:3:0;;;;3762:24;;11215:18:3;;3762:138:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3914:40;3927:9;3938;3949:4;3914:12;:40::i;:::-;-1:-1:-1;3978:4:0;3635:438;;;-1:-1:-1;4042:20:0;;-1:-1:-1;;;4042:20:0;;11622:2:3;4042:20:0;;;11604:21:3;11661:2;11641:18;;;11634:30;-1:-1:-1;;;11680:18:3;;;11673:40;4023:5:0;;11730:18:3;;4042:20:0;11420:334:3;3635:438:0;4089:7;3439:664;-1:-1:-1;;;;;3439:664:0:o;6213:1525::-;6340:4;457:26:1;164:10:2;457:12:1;:26::i;:::-;449:35;;;;;;6398:10:0::1;::::0;-1:-1:-1;;;;;6398:10:0;;::::1;6356:18;6377:33:::0;;;:12:::1;:33;::::0;;;;;6462:12:::1;::::0;;;::::1;6441:35:::0;;;;;6356:18;;6533:10:::1;6539:3:::0;6533:5:::1;:10::i;:::-;6486:57:::0;;-1:-1:-1;6486:57:0;-1:-1:-1;6486:57:0;-1:-1:-1;6553:9:0::1;6597:4;6584:17:::0;::::1;;;:52:::0;::::1;;;-1:-1:-1::0;6631:4:0::1;::::0;-1:-1:-1;;;;;6605:31:0;;::::1;6631:4:::0;::::1;6605:31;6584:52;6580:990;;;-1:-1:-1::0;6652:29:0::1;::::0;::::1;:46:::0;;;6712:31;;;:48;;;6781:4:::1;6580:990;;;6832:4;6819:17:::0;::::1;;;:63:::0;::::1;;;-1:-1:-1::0;6878:3:0::1;::::0;-1:-1:-1;;;;;6852:30:0;;::::1;6878:3:::0;::::1;6852:30;6819:63;:96;;;;-1:-1:-1::0;6898:8:0::1;::::0;::::1;;:17;6819:96;6802:768;;;-1:-1:-1::0;6940:30:0::1;::::0;::::1;:46:::0;;;7007:4:::1;6802:768;;;7032:18:::0;::::1;::::0;::::1;:53;;-1:-1:-1::0;;;;;;7054:31:0;::::1;7080:4;7054:31;7032:53;7028:542;;;-1:-1:-1::0;7101:29:0::1;::::0;;::::1;:45:::0;;;7028:542:::1;;;7205:4;7192:17:::0;::::1;;;:52:::0;::::1;;;-1:-1:-1::0;;;;;;7213:31:0;::::1;7239:4;7213:31;7192:52;7188:382;;;-1:-1:-1::0;7260:29:0::1;::::0;;::::1;:46:::0;;;7320:31;;;:48;;;7188:382:::1;;;-1:-1:-1::0;7424:30:0::1;::::0;::::1;:47:::0;;;7485:32;;;:49;;;7555:4:::1;7188:382;7596:4;7583:17:::0;::::1;;;:37:::0;::::1;;;;7616:4;7604:9;;:16;7583:37;7579:132;;;7649:4;7636:9;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;7579:132:0::1;::::0;-1:-1:-1;7579:132:0::1;;7696:4;7684:8;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7579:132:0::1;7727:4:::0;6213:1525;-1:-1:-1;;;;;;;;;6213:1525:0:o;5585:622::-;5678:7;5699;5720;5788:1;5767:9;5759:31;5752:39;;;;:::i;:::-;5801:26;5881:17;5843:22;;5831:9;:34;;;;:::i;:::-;5830:68;;;;:::i;:::-;5801:97;-1:-1:-1;5908:28:0;5940:30;5801:97;5940:9;:30;:::i;:::-;5908:63;-1:-1:-1;5981:27:0;6011:41;5908:63;6011:18;:41;:::i;:::-;5981:71;;6109:9;6077:19;6069:50;6062:58;;;;:::i;:::-;6138:19;6159:18;;-1:-1:-1;6159:18:0;-1:-1:-1;5585:622:0;-1:-1:-1;;5585:622:0:o;9351:496::-;-1:-1:-1;;;;;9496:33:0;;9475:18;9496:33;;;:12;:33;;;;;;;;164:10:2;9539:28:0;;:14;:28;;;;;9568:12;9539:42;;;;;;;;;:54;;;9603:11;;;:43;;;;;;;;;;;;;;;;;;;9496:33;9660:16;;;;;9656:185;;9736:9;9692:4;:11;;:32;;;:54;;;;;;;:::i;:::-;;;;-1:-1:-1;9656:185:0;;-1:-1:-1;9656:185:0;;9820:9;9777:4;:11;;:31;;;:53;;;;;;;:::i;:::-;;;;-1:-1:-1;;9656:185:0;9465:382;9351:496;;;:::o;14:597:3:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:3;574:15;-1:-1:-1;;570:29:3;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:3:o;616:127::-;677:10;672:3;668:20;665:1;658:31;708:4;705:1;698:15;732:4;729:1;722:15;748:275;819:2;813:9;884:2;865:13;;-1:-1:-1;;861:27:3;849:40;;-1:-1:-1;;;;;904:34:3;;940:22;;;901:62;898:88;;;966:18;;:::i;:::-;1002:2;995:22;748:275;;-1:-1:-1;748:275:3:o;1028:183::-;1088:4;-1:-1:-1;;;;;1113:6:3;1110:30;1107:56;;;1143:18;;:::i;:::-;-1:-1:-1;1188:1:3;1184:14;1200:4;1180:25;;1028:183::o;1216:131::-;-1:-1:-1;;;;;1291:31:3;;1281:42;;1271:70;;1337:1;1334;1327:12;1352:737;1406:5;1459:3;1452:4;1444:6;1440:17;1436:27;1426:55;;1477:1;1474;1467:12;1426:55;1513:6;1500:20;1539:4;1563:60;1579:43;1619:2;1579:43;:::i;:::-;1563:60;:::i;:::-;1657:15;;;1743:1;1739:10;;;;1727:23;;1723:32;;;1688:12;;;;1767:15;;;1764:35;;;1795:1;1792;1785:12;1764:35;1831:2;1823:6;1819:15;1843:217;1859:6;1854:3;1851:15;1843:217;;;1939:3;1926:17;1956:31;1981:5;1956:31;:::i;:::-;2000:18;;2038:12;;;;1876;;1843:217;;;-1:-1:-1;2078:5:3;1352:737;-1:-1:-1;;;;;;1352:737:3:o;2094:1140::-;2212:6;2220;2273:2;2261:9;2252:7;2248:23;2244:32;2241:52;;;2289:1;2286;2279:12;2241:52;2329:9;2316:23;-1:-1:-1;;;;;2399:2:3;2391:6;2388:14;2385:34;;;2415:1;2412;2405:12;2385:34;2453:6;2442:9;2438:22;2428:32;;2498:7;2491:4;2487:2;2483:13;2479:27;2469:55;;2520:1;2517;2510:12;2469:55;2556:2;2543:16;2578:4;2602:60;2618:43;2658:2;2618:43;:::i;2602:60::-;2696:15;;;2778:1;2774:10;;;;2766:19;;2762:28;;;2727:12;;;;2802:19;;;2799:39;;;2834:1;2831;2824:12;2799:39;2858:11;;;;2878:142;2894:6;2889:3;2886:15;2878:142;;;2960:17;;2948:30;;2911:12;;;;2998;;;;2878:142;;;3039:5;-1:-1:-1;;3082:18:3;;3069:32;;-1:-1:-1;;3113:16:3;;;3110:36;;;3142:1;3139;3132:12;3110:36;;3165:63;3220:7;3209:8;3198:9;3194:24;3165:63;:::i;:::-;3155:73;;;2094:1140;;;;;:::o;3431:180::-;3490:6;3543:2;3531:9;3522:7;3518:23;3514:32;3511:52;;;3559:1;3556;3549:12;3511:52;-1:-1:-1;3582:23:3;;3431:180;-1:-1:-1;3431:180:3:o;3616:203::-;-1:-1:-1;;;;;3780:32:3;;;;3762:51;;3750:2;3735:18;;3616:203::o;3824:255::-;3891:6;3944:2;3932:9;3923:7;3919:23;3915:32;3912:52;;;3960:1;3957;3950:12;3912:52;3999:9;3986:23;4018:31;4043:5;4018:31;:::i;:::-;4068:5;3824:255;-1:-1:-1;;;3824:255:3:o;4084:315::-;4152:6;4160;4213:2;4201:9;4192:7;4188:23;4184:32;4181:52;;;4229:1;4226;4219:12;4181:52;4268:9;4255:23;4287:31;4312:5;4287:31;:::i;:::-;4337:5;4389:2;4374:18;;;;4361:32;;-1:-1:-1;;;4084:315:3:o;4586:118::-;4672:5;4665:13;4658:21;4651:5;4648:32;4638:60;;4694:1;4691;4684:12;4709:746;4826:6;4834;4842;4850;4858;4866;4919:3;4907:9;4898:7;4894:23;4890:33;4887:53;;;4936:1;4933;4926:12;4887:53;4975:9;4962:23;4994:31;5019:5;4994:31;:::i;:::-;5044:5;-1:-1:-1;5101:2:3;5086:18;;5073:32;5114:33;5073:32;5114:33;:::i;:::-;5166:7;-1:-1:-1;5220:2:3;5205:18;;5192:32;;-1:-1:-1;5276:2:3;5261:18;;5248:32;5289:30;5248:32;5289:30;:::i;:::-;4709:746;;;;-1:-1:-1;4709:746:3;;5392:3;5377:19;;5364:33;;5444:3;5429:19;;;5416:33;;-1:-1:-1;4709:746:3;-1:-1:-1;;4709:746:3:o;5712:388::-;5780:6;5788;5841:2;5829:9;5820:7;5816:23;5812:32;5809:52;;;5857:1;5854;5847:12;5809:52;5896:9;5883:23;5915:31;5940:5;5915:31;:::i;:::-;5965:5;-1:-1:-1;6022:2:3;6007:18;;5994:32;6035:33;5994:32;6035:33;:::i;:::-;6087:7;6077:17;;;5712:388;;;;;:::o;6717:464::-;6802:6;6810;6818;6871:2;6859:9;6850:7;6846:23;6842:32;6839:52;;;6887:1;6884;6877:12;6839:52;6926:9;6913:23;6945:31;6970:5;6945:31;:::i;:::-;6995:5;-1:-1:-1;7047:2:3;7032:18;;7019:32;;-1:-1:-1;7103:2:3;7088:18;;7075:32;7116:33;7075:32;7116:33;:::i;:::-;7168:7;7158:17;;;6717:464;;;;;:::o;7186:632::-;7357:2;7409:21;;;7479:13;;7382:18;;;7501:22;;;7328:4;;7357:2;7580:15;;;;7554:2;7539:18;;;7328:4;7623:169;7637:6;7634:1;7631:13;7623:169;;;7698:13;;7686:26;;7767:15;;;;7732:12;;;;7659:1;7652:9;7623:169;;;-1:-1:-1;7809:3:3;;7186:632;-1:-1:-1;;;;;;7186:632:3:o;7823:380::-;7902:1;7898:12;;;;7945;;;7966:61;;8020:4;8012:6;8008:17;7998:27;;7966:61;8073:2;8065:6;8062:14;8042:18;8039:38;8036:161;;8119:10;8114:3;8110:20;8107:1;8100:31;8154:4;8151:1;8144:15;8182:4;8179:1;8172:15;8036:161;;7823:380;;;:::o;8208:127::-;8269:10;8264:3;8260:20;8257:1;8250:31;8300:4;8297:1;8290:15;8324:4;8321:1;8314:15;8340:127;8401:10;8396:3;8392:20;8389:1;8382:31;8432:4;8429:1;8422:15;8456:4;8453:1;8446:15;8682:127;8743:10;8738:3;8734:20;8731:1;8724:31;8774:4;8771:1;8764:15;8798:4;8795:1;8788:15;8814:135;8853:3;8874:17;;;8871:43;;8894:18;;:::i;:::-;-1:-1:-1;8941:1:3;8930:13;;8814:135::o;8954:184::-;9024:6;9077:2;9065:9;9056:7;9052:23;9048:32;9045:52;;;9093:1;9090;9083:12;9045:52;-1:-1:-1;9116:16:3;;8954:184;-1:-1:-1;8954:184:3:o;9805:128::-;9845:3;9876:1;9872:6;9869:1;9866:13;9863:39;;;9882:18;;:::i;:::-;-1:-1:-1;9918:9:3;;9805:128::o;9938:125::-;9978:4;10006:1;10003;10000:8;9997:34;;;10011:18;;:::i;:::-;-1:-1:-1;10048:9:3;;9938:125::o;10068:290::-;-1:-1:-1;;;;;10276:32:3;;;;10258:51;;10340:2;10325:18;;10318:34;10246:2;10231:18;;10068:290::o;10363:245::-;10430:6;10483:2;10471:9;10462:7;10458:23;10454:32;10451:52;;;10499:1;10496;10489:12;10451:52;10531:9;10525:16;10550:28;10572:5;10550:28;:::i;10613:168::-;10653:7;10719:1;10715;10711:6;10707:14;10704:1;10701:21;10696:1;10689:9;10682:17;10678:45;10675:71;;;10726:18;;:::i;:::-;-1:-1:-1;10766:9:3;;10613:168::o;10786:217::-;10826:1;10852;10842:132;;10896:10;10891:3;10887:20;10884:1;10877:31;10931:4;10928:1;10921:15;10959:4;10956:1;10949:15;10842:132;-1:-1:-1;10988:9:3;;10786:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1504800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "2414",
								"authorize(address)": "26962",
								"bridgeKEK(uint256)": "infinite",
								"bridgeKEK_bulk(uint256)": "infinite",
								"bridgeMaxAmount()": "2361",
								"bridgeTransferOutBulk(uint256[],address[])": "infinite",
								"depositTrace(address,uint256)": "2785",
								"depositTracer(address)": "infinite",
								"iVF()": "2428",
								"name()": "infinite",
								"setMoV(address)": "infinite",
								"setShards(address,address,uint256,bool,uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"tokenizeWETH()": "infinite",
								"transfer(address,uint256,address)": "infinite",
								"transferAuthorization(address,address)": "infinite",
								"unauthorize(address)": "27010",
								"vaultDebt(address)": "22079",
								"withdraw()": "infinite",
								"withdrawToken(address)": "infinite"
							},
							"internal": {
								"deposit(address,address,uint256)": "infinite",
								"split(uint256)": "infinite",
								"synced(uint256,address,bool)": "infinite",
								"traceDeposit(address,uint256,bool)": "93104"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 148,
									"end": 246,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 148,
									"end": 246,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 148,
									"end": 246,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 148,
									"end": 246,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 148,
									"end": 246,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 148,
									"end": 246,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 203,
									"end": 245,
									"name": "PUSH",
									"source": 0,
									"value": "50134FD4EA6547846EDE4C4BF46A334B7E87CCD"
								},
								{
									"begin": 148,
									"end": 246,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 148,
									"end": 246,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 148,
									"end": 246,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 148,
									"end": 246,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 252,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 252,
									"end": 348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 252,
									"end": 348,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 252,
									"end": 348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 252,
									"end": 348,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 252,
									"end": 348,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 305,
									"end": 347,
									"name": "PUSH",
									"source": 0,
									"value": "D166DF9DFB917C3B960673E2F420F928D45C9BE1"
								},
								{
									"begin": 252,
									"end": 348,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 252,
									"end": 348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 252,
									"end": 348,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 355,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 355,
									"end": 392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 355,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 355,
									"end": 392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 355,
									"end": 392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 355,
									"end": 392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "714C53784FCA49"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 355,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 355,
									"end": 392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 355,
									"end": 392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 355,
									"end": 392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 355,
									"end": 392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 355,
									"end": 392,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 355,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 355,
									"end": 392,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 355,
									"end": 392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 355,
									"end": 392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 355,
									"end": 392,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 355,
									"end": 392,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 355,
									"end": 392,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 398,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 398,
									"end": 437,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 398,
									"end": 437,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E298A6F09F9491"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 398,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 398,
									"end": 437,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 398,
									"end": 437,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 398,
									"end": 437,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 398,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 398,
									"end": 437,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 398,
									"end": 437,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 398,
									"end": 437,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 485,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "1F40"
								},
								{
									"begin": 444,
									"end": 489,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 444,
									"end": 489,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 541,
									"end": 546,
									"name": "PUSH",
									"source": 0,
									"value": "2710"
								},
								{
									"begin": 495,
									"end": 546,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 495,
									"end": 546,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 577,
									"end": 666,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 577,
									"end": 666,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 577,
									"end": 666,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 577,
									"end": 666,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 577,
									"end": 666,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 577,
									"end": 666,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 623,
									"end": 665,
									"name": "PUSH",
									"source": 0,
									"value": "EAEC17F25A8219FCD659B38C577DFFDAE25539BE"
								},
								{
									"begin": 577,
									"end": 666,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 577,
									"end": 666,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 577,
									"end": 666,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 577,
									"end": 666,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 672,
									"end": 762,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 672,
									"end": 762,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 672,
									"end": 762,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 672,
									"end": 762,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 672,
									"end": 762,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 719,
									"end": 761,
									"name": "PUSH",
									"source": 0,
									"value": "A888A7A2DC73EFDB5705106A216F068E939A2693"
								},
								{
									"begin": 672,
									"end": 762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 672,
									"end": 762,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 672,
									"end": 762,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 672,
									"end": 762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 672,
									"end": 762,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 672,
									"end": 762,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 768,
									"end": 841,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 768,
									"end": 841,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 768,
									"end": 841,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 768,
									"end": 841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 768,
									"end": 841,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 768,
									"end": 841,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 768,
									"end": 841,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 768,
									"end": 841,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 768,
									"end": 841,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 577,
									"end": 666,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1382,
									"end": 1410,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 1382,
									"end": 1410,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1382,
									"end": 1410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1382,
									"end": 1410,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1416,
									"end": 1445,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 1416,
									"end": 1445,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1475,
									"end": 1478,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 1451,
									"end": 1478,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 1451,
									"end": 1478,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1508,
									"end": 1524,
									"name": "PUSH",
									"source": 0,
									"value": "D801472258000"
								},
								{
									"begin": 1484,
									"end": 1524,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1484,
									"end": 1524,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1563,
									"end": 1588,
									"name": "PUSH",
									"source": 0,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 1530,
									"end": 1588,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1530,
									"end": 1588,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1595,
									"end": 1625,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1595,
									"end": 1625,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1595,
									"end": 1625,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1595,
									"end": 1625,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1595,
									"end": 1625,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1595,
									"end": 1625,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1859,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1944,
									"end": 1956,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1944,
									"end": 1956,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1967,
									"end": 1977,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1967,
									"end": 1977,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 630,
									"end": 635,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 640,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 630,
									"end": 640,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 630,
									"end": 640,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 630,
									"end": 640,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 630,
									"end": 640,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 164,
									"end": 174,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 630,
									"end": 640,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 630,
									"end": 640,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 630,
									"end": 640,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 630,
									"end": 640,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 630,
									"end": 640,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 650,
									"end": 668,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 650,
									"end": 668,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 650,
									"end": 668,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 650,
									"end": 668,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 650,
									"end": 668,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 650,
									"end": 668,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 650,
									"end": 668,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 650,
									"end": 668,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 650,
									"end": 668,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 650,
									"end": 668,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 650,
									"end": 675,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 650,
									"end": 675,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 650,
									"end": 675,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 650,
									"end": 675,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 650,
									"end": 675,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 650,
									"end": 675,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 650,
									"end": 675,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 650,
									"end": 675,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 650,
									"end": 675,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 650,
									"end": 675,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1944,
									"end": 1956,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 1944,
									"end": 1956,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 1944,
									"end": 1956,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 685,
									"end": 711,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 685,
									"end": 711,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 685,
									"end": 711,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 685,
									"end": 711,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 685,
									"end": 711,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 685,
									"end": 718,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 685,
									"end": 718,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 685,
									"end": 718,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 685,
									"end": 718,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 685,
									"end": 718,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 685,
									"end": 718,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 685,
									"end": 718,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 685,
									"end": 718,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1967,
									"end": 1977,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 1967,
									"end": 1977,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1967,
									"end": 1977,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 728,
									"end": 756,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 728,
									"end": 756,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 728,
									"end": 756,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 728,
									"end": 756,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 728,
									"end": 756,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 728,
									"end": 763,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 728,
									"end": 763,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 728,
									"end": 763,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 728,
									"end": 763,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 728,
									"end": 763,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 728,
									"end": 763,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 728,
									"end": 763,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 728,
									"end": 763,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 728,
									"end": 763,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 728,
									"end": 763,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 728,
									"end": 763,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 1997,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1994,
									"end": 2002,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 309,
									"end": 689,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 309,
									"end": 689,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 388,
									"end": 389,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 384,
									"end": 396,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 384,
									"end": 396,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 384,
									"end": 396,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 431,
									"end": 443,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 431,
									"end": 443,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 431,
									"end": 443,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 452,
									"end": 513,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 452,
									"end": 513,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 506,
									"end": 510,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 498,
									"end": 504,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 494,
									"end": 511,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 484,
									"end": 511,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 484,
									"end": 511,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 452,
									"end": 513,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 452,
									"end": 513,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 559,
									"end": 561,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 551,
									"end": 557,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 548,
									"end": 562,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 528,
									"end": 546,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 525,
									"end": 563,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 522,
									"end": 683,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 522,
									"end": 683,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 605,
									"end": 615,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 600,
									"end": 603,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 596,
									"end": 616,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 593,
									"end": 594,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 586,
									"end": 617,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 640,
									"end": 644,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 630,
									"end": 645,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 668,
									"end": 672,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 665,
									"end": 666,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 658,
									"end": 673,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 522,
									"end": 683,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 522,
									"end": 683,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 522,
									"end": 683,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 309,
									"end": 689,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 309,
									"end": 689,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 309,
									"end": 689,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 309,
									"end": 689,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 309,
									"end": 689,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 309,
									"end": 689,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 14378,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207465eacca55e6772d8ddf5c1debd21b04d008be344114d1ebf132565ed53ac2a64736f6c634300080d0033",
									".code": [
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "89476069"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "89476069"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "8CD0ACC3"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "985C51F9"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "99049F71"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "B6A5D7DE"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "DBBA0F01"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "DD1599FA"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "F0B37C04"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "F8FF9AC9"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "CBA52F9"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "1A40785C"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "24F8958A"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "43602017"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "4B4138C9"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "5F1D9FBC"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH",
											"source": 0,
											"value": "79CBA1C4"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2090,
											"end": 2094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2095,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2052,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2096,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2052,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 96,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2189,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2185,
											"end": 2189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2190,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2147,
											"end": 2191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2147,
											"end": 2191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3418,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3419,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3379,
											"end": 3420,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3367,
											"end": 3369,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3352,
											"end": 3370,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3239,
											"end": 3426,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 553,
											"end": 571,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 553,
											"end": 571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 553,
											"end": 571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 553,
											"end": 571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 553,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 553,
											"end": 571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 553,
											"end": 571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 553,
											"end": 571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 553,
											"end": 571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 553,
											"end": 571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 553,
											"end": 571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10236,
											"end": 10243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10280,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10292,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10305,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10305,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10305,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10266,
											"end": 10305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4575,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4541,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10128,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4404,
											"end": 4581,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 398,
											"end": 437,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 398,
											"end": 437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 398,
											"end": 437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 398,
											"end": 437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 398,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 398,
											"end": 437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1530,
											"end": 1588,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6476,
											"end": 6478,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6461,
											"end": 6479,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6454,
											"end": 6488,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 6454,
											"end": 6488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6454,
											"end": 6488,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 6454,
											"end": 6488,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6504,
											"end": 6522,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6504,
											"end": 6522,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6504,
											"end": 6522,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6531,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6531,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6497,
											"end": 6531,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6564,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6547,
											"end": 6565,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6565,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6540,
											"end": 6574,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6608,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6590,
											"end": 6609,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6590,
											"end": 6609,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6583,
											"end": 6618,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6652,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 6634,
											"end": 6653,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6634,
											"end": 6653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6627,
											"end": 6662,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6696,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 6678,
											"end": 6697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6678,
											"end": 6697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6671,
											"end": 6706,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6410,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6392,
											"end": 6411,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6105,
											"end": 6712,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 776,
											"end": 877,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 776,
											"end": 877,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 776,
											"end": 877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 776,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 776,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 776,
											"end": 877,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 776,
											"end": 877,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 776,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 776,
											"end": 877,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 776,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 883,
											"end": 987,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 883,
											"end": 987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 883,
											"end": 987,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 883,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 883,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 883,
											"end": 987,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 883,
											"end": 987,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 883,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 883,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 883,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 392,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13526,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 457,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13542,
											"end": 13551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13574,
											"end": 13583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13826,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13569,
											"end": 13826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13593,
											"end": 13603,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13593,
											"end": 13610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13589,
											"end": 13610,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 13569,
											"end": 13826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13672,
											"end": 13673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13638,
											"end": 13674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13656,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13658,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13646,
											"end": 13659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13638,
											"end": 13674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13638,
											"end": 13674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 13631,
											"end": 13675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13631,
											"end": 13675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 13631,
											"end": 13675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 13631,
											"end": 13675,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13631,
											"end": 13675,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 13631,
											"end": 13675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13690,
											"end": 13699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13713,
											"end": 13723,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13713,
											"end": 13726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13705,
											"end": 13732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 13747,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 13750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 13705,
											"end": 13755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13689,
											"end": 13755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13689,
											"end": 13755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13785,
											"end": 13789,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13777,
											"end": 13789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13789,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13789,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13789,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 13769,
											"end": 13790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13769,
											"end": 13790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13790,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13790,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 13769,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13811,
											"end": 13815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13612,
											"end": 13615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13612,
											"end": 13615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 13612,
											"end": 13615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13612,
											"end": 13615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 13612,
											"end": 13615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13612,
											"end": 13615,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 13612,
											"end": 13615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13612,
											"end": 13615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13612,
											"end": 13615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13612,
											"end": 13615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13569,
											"end": 13826,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13569,
											"end": 13826,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 13569,
											"end": 13826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13383,
											"end": 13853,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2268,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2326,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2322,
											"end": 2326,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2309,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2327,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2284,
											"end": 2328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2328,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2328,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2284,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2391,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2376,
											"end": 2391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2363,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2346,
											"end": 2392,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2346,
											"end": 2392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2338,
											"end": 2393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2393,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2338,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2442,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2439,
											"end": 2442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2439,
											"end": 2442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2439,
											"end": 2442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2432,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 164,
											"end": 174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2432,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2490,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2424,
											"end": 2490,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2403,
											"end": 2500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2500,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2403,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9355,
											"end": 9389,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2583,
											"end": 2587,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9405,
											"end": 9423,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9405,
											"end": 9423,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9405,
											"end": 9423,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9398,
											"end": 9441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2560,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 2539,
											"end": 2560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9290,
											"end": 9308,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 9290,
											"end": 9308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2539,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2531,
											"end": 2628,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2531,
											"end": 2628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9636,
											"end": 9657,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9693,
											"end": 9695,
											"name": "PUSH",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 9673,
											"end": 9691,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9673,
											"end": 9691,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9673,
											"end": 9691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9666,
											"end": 9696,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E63726561736520616C6C6F77616E63652E2E2E4B454B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9712,
											"end": 9730,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 9712,
											"end": 9730,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9712,
											"end": 9730,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9705,
											"end": 9759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2510,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2725,
											"end": 2728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2725,
											"end": 2728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2739,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2703,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2703,
											"end": 2740,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2703,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2703,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2758,
											"end": 2773,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2750,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2798,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2204,
											"end": 2805,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8966,
											"end": 8976,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8966,
											"end": 8976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8966,
											"end": 8976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8924,
											"end": 8942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8945,
											"end": 8978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8957,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 8945,
											"end": 8978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8945,
											"end": 8978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8945,
											"end": 8978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8978,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9060,
											"end": 9103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9060,
											"end": 9103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9094,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9060,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 9060,
											"end": 9103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9060,
											"end": 9103,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9060,
											"end": 9103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9060,
											"end": 9111,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9060,
											"end": 9111,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9107,
											"end": 9111,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9060,
											"end": 9111,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9052,
											"end": 9112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 9052,
											"end": 9112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9052,
											"end": 9112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9052,
											"end": 9112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9052,
											"end": 9112,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9052,
											"end": 9112,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 9052,
											"end": 9112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9122,
											"end": 9136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9152,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9122,
											"end": 9152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9178,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9228,
											"end": 9229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9230,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9258,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9248,
											"end": 9258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9248,
											"end": 9258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9269,
											"end": 9282,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9269,
											"end": 9282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9269,
											"end": 9282,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9248,
											"end": 9258,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 9240,
											"end": 9283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9298,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9298,
											"end": 9338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9317,
											"end": 9321,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9317,
											"end": 9321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9298,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65"
										},
										{
											"begin": 9298,
											"end": 9338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4541,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9298,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9298,
											"end": 9338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9298,
											"end": 9338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9298,
											"end": 9338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9298,
											"end": 9338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9298,
											"end": 9338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9298,
											"end": 9338,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 8914,
											"end": 9345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8914,
											"end": 9345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8868,
											"end": 9345,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 457,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14354,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 14364,
											"end": 14368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14354,
											"end": 14363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 14354,
											"end": 14369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14354,
											"end": 14369,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 14354,
											"end": 14369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14288,
											"end": 14376,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7854,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7844,
											"end": 7854,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7844,
											"end": 7854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7844,
											"end": 7854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7802,
											"end": 7820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7835,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 7823,
											"end": 7856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7823,
											"end": 7856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7823,
											"end": 7856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7856,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7908,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7908,
											"end": 7920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7908,
											"end": 7920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7908,
											"end": 7920,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7908,
											"end": 7920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7964,
											"end": 7985,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 7964,
											"end": 7985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7802,
											"end": 7820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8029,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 7964,
											"end": 7985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8029,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 8029,
											"end": 8049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8029,
											"end": 8049,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 8029,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7996,
											"end": 8049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7996,
											"end": 8049,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7996,
											"end": 8049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7996,
											"end": 8049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7996,
											"end": 8049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8166,
											"end": 8187,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 8166,
											"end": 8187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8229,
											"end": 8233,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8072,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8205,
											"end": 8242,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8205,
											"end": 8242,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 8205,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8250,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8250,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8246,
											"end": 8250,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8205,
											"end": 8250,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 8197,
											"end": 8251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8197,
											"end": 8251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8251,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 8197,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8291,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8287,
											"end": 8291,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8261,
											"end": 8277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8287,
											"end": 8291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8302,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8280,
											"end": 8302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8311,
											"end": 8315,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8311,
											"end": 8315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8280,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8352,
											"end": 8356,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8261,
											"end": 8317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8261,
											"end": 8317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8335,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 8335,
											"end": 8363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8261,
											"end": 8317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8261,
											"end": 8317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8352,
											"end": 8356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8356,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8335,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8335,
											"end": 8363,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8335,
											"end": 8363,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 8335,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8335,
											"end": 8371,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8327,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8392,
											"end": 8399,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8392,
											"end": 8399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8392,
											"end": 8399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8392,
											"end": 8399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8392,
											"end": 8399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8392,
											"end": 8399,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8392,
											"end": 8399,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8392,
											"end": 8399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8392,
											"end": 8399,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8392,
											"end": 8399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8386,
											"end": 8408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8408,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 8416,
											"end": 8429,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8386,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8382,
											"end": 8765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8738,
											"end": 8754,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8382,
											"end": 8765,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8765,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8382,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8488,
											"end": 8492,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8451,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8447,
											"end": 8461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8476,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8447,
											"end": 8476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8447,
											"end": 8493,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8507,
											"end": 8538,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8507,
											"end": 8538,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8550,
											"end": 8554,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8550,
											"end": 8554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 8507,
											"end": 8555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8550,
											"end": 8554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8550,
											"end": 8554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8507,
											"end": 8555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8507,
											"end": 8555,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 8507,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8507,
											"end": 8555,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8569,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8569,
											"end": 8598,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8614,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8569,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8569,
											"end": 8615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8614,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8610,
											"end": 8614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8569,
											"end": 8615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8569,
											"end": 8615,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8569,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8615,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8569,
											"end": 8615,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8629,
											"end": 8660,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 8629,
											"end": 8660,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8677,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8672,
											"end": 8676,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8672,
											"end": 8676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8629,
											"end": 8660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8629,
											"end": 8677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8672,
											"end": 8676,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8672,
											"end": 8676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8629,
											"end": 8677,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8629,
											"end": 8677,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8629,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8677,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8702,
											"end": 8706,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8702,
											"end": 8706,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8382,
											"end": 8765,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8382,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 8797,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8781,
											"end": 8797,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8781,
											"end": 8797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8781,
											"end": 8797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8781,
											"end": 8797,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8774,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 8774,
											"end": 8798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8774,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 8774,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8774,
											"end": 8798,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8774,
											"end": 8798,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 8774,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8813,
											"end": 8855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4575,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8834,
											"end": 8838,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8834,
											"end": 8838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8855,
											"name": "PUSH",
											"source": 0,
											"value": "4611F1757844FDC2D4237A951583CA101C93F843BDC2D91A0E3FCF1D7A64CD2"
										},
										{
											"begin": 8813,
											"end": 8855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4541,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8813,
											"end": 8855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8813,
											"end": 8855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8855,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7792,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7744,
											"end": 8862,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 457,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14112,
											"name": "PUSH",
											"source": 0,
											"value": "1F40"
										},
										{
											"begin": 14093,
											"end": 14095,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14113,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14085,
											"end": 14113,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 14077,
											"end": 14114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14077,
											"end": 14114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14114,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14077,
											"end": 14114,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 14077,
											"end": 14114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14124,
											"end": 14146,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14124,
											"end": 14151,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14124,
											"end": 14151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14124,
											"end": 14151,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14124,
											"end": 14151,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14161,
											"end": 14176,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14161,
											"end": 14186,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14161,
											"end": 14186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14161,
											"end": 14186,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14161,
											"end": 14186,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14204,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14211,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14221,
											"end": 14225,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14221,
											"end": 14233,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14247,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8"
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14275,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13859,
											"end": 14282,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10432,
											"end": 10442,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10432,
											"end": 10442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10432,
											"end": 10442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10432,
											"end": 10442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10432,
											"end": 10442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10411,
											"end": 10444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10411,
											"end": 10444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10411,
											"end": 10423,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 10411,
											"end": 10444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10411,
											"end": 10444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10411,
											"end": 10444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10411,
											"end": 10444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10411,
											"end": 10444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10411,
											"end": 10444,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10496,
											"end": 10508,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10496,
											"end": 10508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10496,
											"end": 10508,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10496,
											"end": 10508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10510,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10510,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10510,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10411,
											"end": 10444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10411,
											"end": 10444,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10475,
											"end": 10510,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10590,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10590,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 10567,
											"end": 10590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10599,
											"end": 10603,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10599,
											"end": 10603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 10567,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10520,
											"end": 10615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10520,
											"end": 10615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10642,
											"end": 10654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 10664,
											"end": 10679,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10658,
											"end": 10680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10658,
											"end": 10680,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 10658,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10680,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10625,
											"end": 10680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10625,
											"end": 10680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10690,
											"end": 10702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10690,
											"end": 10702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10762,
											"end": 10785,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10785,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 10762,
											"end": 10785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10794,
											"end": 10798,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10794,
											"end": 10798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 10762,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10748,
											"end": 10800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10748,
											"end": 10800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10818,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 10825,
											"end": 10828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10830,
											"end": 10835,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 10837,
											"end": 10841,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10818,
											"end": 10842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10818,
											"end": 10842,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 10818,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10818,
											"end": 10850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10818,
											"end": 10850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10846,
											"end": 10850,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10818,
											"end": 10850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 10810,
											"end": 10851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10851,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10851,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 10810,
											"end": 10851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10895,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10891,
											"end": 10895,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10891,
											"end": 10895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10865,
											"end": 10896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10865,
											"end": 10896,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 10865,
											"end": 10896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10865,
											"end": 10896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 10861,
											"end": 11970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 10957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10916,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10912,
											"end": 10926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10912,
											"end": 10941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10912,
											"end": 10958,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10972,
											"end": 11003,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 10972,
											"end": 11003,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 11003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 11020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 11020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 11003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 11003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10972,
											"end": 11003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 10972,
											"end": 11020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11019,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11015,
											"end": 11019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 10972,
											"end": 11020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10972,
											"end": 11020,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 10972,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 11020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 11020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 11020,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11034,
											"end": 11065,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11034,
											"end": 11065,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11034,
											"end": 11065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11077,
											"end": 11081,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11077,
											"end": 11081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11034,
											"end": 11065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11034,
											"end": 11048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11034,
											"end": 11048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11077,
											"end": 11081,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11077,
											"end": 11081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11034,
											"end": 11082,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11096,
											"end": 11129,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 11096,
											"end": 11129,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11141,
											"end": 11145,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11141,
											"end": 11145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 11096,
											"end": 11146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11141,
											"end": 11145,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11141,
											"end": 11145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 11096,
											"end": 11146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11096,
											"end": 11146,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 11096,
											"end": 11146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11146,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11167,
											"end": 11171,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11167,
											"end": 11171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11190,
											"end": 11200,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11190,
											"end": 11200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11167,
											"end": 11171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11167,
											"end": 11171,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11167,
											"end": 11171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11167,
											"end": 11171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11181,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11160,
											"end": 11181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11190,
											"end": 11200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11190,
											"end": 11200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11190,
											"end": 11200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11203,
											"end": 11207,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 11203,
											"end": 11207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 11160,
											"end": 11208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11229,
											"end": 11233,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11229,
											"end": 11233,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11252,
											"end": 11264,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11252,
											"end": 11264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11229,
											"end": 11233,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11229,
											"end": 11233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11229,
											"end": 11233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11229,
											"end": 11233,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11243,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11222,
											"end": 11243,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11252,
											"end": 11264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11252,
											"end": 11264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11252,
											"end": 11264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11271,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 10861,
											"end": 11970,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 11970,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 10861,
											"end": 11970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11319,
											"end": 11322,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11319,
											"end": 11322,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11293,
											"end": 11323,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11319,
											"end": 11322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11319,
											"end": 11322,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11343,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 11293,
											"end": 11343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11327,
											"end": 11335,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11327,
											"end": 11335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11327,
											"end": 11335,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11327,
											"end": 11335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11327,
											"end": 11343,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11327,
											"end": 11343,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11327,
											"end": 11335,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11327,
											"end": 11343,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11293,
											"end": 11343,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 11293,
											"end": 11343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11970,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 11289,
											"end": 11970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11401,
											"end": 11405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11363,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11359,
											"end": 11373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11359,
											"end": 11389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11420,
											"end": 11452,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 11420,
											"end": 11452,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11420,
											"end": 11452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11420,
											"end": 11469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11420,
											"end": 11469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11464,
											"end": 11468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11464,
											"end": 11468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11420,
											"end": 11452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11420,
											"end": 11452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11420,
											"end": 11452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11420,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 11420,
											"end": 11469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11464,
											"end": 11468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11464,
											"end": 11468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11420,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 11420,
											"end": 11469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11420,
											"end": 11469,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 11420,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11420,
											"end": 11469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11420,
											"end": 11469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11420,
											"end": 11469,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11483,
											"end": 11514,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11483,
											"end": 11514,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11483,
											"end": 11514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11483,
											"end": 11531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11483,
											"end": 11531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11526,
											"end": 11530,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11526,
											"end": 11530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11483,
											"end": 11514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11483,
											"end": 11497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11483,
											"end": 11497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11483,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 11483,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11526,
											"end": 11530,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11526,
											"end": 11530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11483,
											"end": 11531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 11483,
											"end": 11531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11483,
											"end": 11531,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 11483,
											"end": 11531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11483,
											"end": 11531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11483,
											"end": 11531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11483,
											"end": 11531,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11545,
											"end": 11578,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 11545,
											"end": 11578,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11590,
											"end": 11594,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11590,
											"end": 11594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11545,
											"end": 11578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 11545,
											"end": 11595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11590,
											"end": 11594,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11590,
											"end": 11594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 11545,
											"end": 11595,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11545,
											"end": 11595,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 11545,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11595,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11640,
											"end": 11650,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11640,
											"end": 11650,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11609,
											"end": 11631,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11631,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11631,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11609,
											"end": 11631,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11640,
											"end": 11650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11640,
											"end": 11650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11640,
											"end": 11650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11640,
											"end": 11650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 11609,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11703,
											"end": 11715,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11703,
											"end": 11715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11672,
											"end": 11723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11672,
											"end": 11723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11672,
											"end": 11723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11672,
											"end": 11723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11672,
											"end": 11694,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 11672,
											"end": 11694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11672,
											"end": 11694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11672,
											"end": 11694,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11672,
											"end": 11694,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11672,
											"end": 11694,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11672,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 11672,
											"end": 11723,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11718,
											"end": 11722,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11718,
											"end": 11722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11672,
											"end": 11723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11672,
											"end": 11723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11672,
											"end": 11723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 11672,
											"end": 11723,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11289,
											"end": 11970,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 11289,
											"end": 11970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11796,
											"end": 11811,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11758,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11754,
											"end": 11768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11784,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11754,
											"end": 11784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11754,
											"end": 11812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11826,
											"end": 11857,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11826,
											"end": 11857,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11826,
											"end": 11857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11826,
											"end": 11885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11826,
											"end": 11885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11884,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11826,
											"end": 11857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11826,
											"end": 11840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11826,
											"end": 11840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11826,
											"end": 11885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 11826,
											"end": 11885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11884,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11826,
											"end": 11885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 11826,
											"end": 11885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11826,
											"end": 11885,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 11826,
											"end": 11885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11826,
											"end": 11885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11826,
											"end": 11885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11826,
											"end": 11885,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11930,
											"end": 11940,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11930,
											"end": 11940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11899,
											"end": 11921,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11921,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 11899,
											"end": 11921,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11930,
											"end": 11940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11943,
											"end": 11958,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 11943,
											"end": 11958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11899,
											"end": 11959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11289,
											"end": 11970,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 11289,
											"end": 11970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4575,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4550,
											"end": 4575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12006,
											"end": 12010,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12006,
											"end": 12010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "37238854FE57FBF51F09946F854FC3916FE83938D6521F09BD05463839F1304"
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4541,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 12045,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 12052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 12052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 12052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 12052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 12052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 12052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 12052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 12052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 12052,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 457,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1266,
											"end": 1290,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1290,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1258,
											"end": 1291,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1291,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1291,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1258,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 1335,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1391,
											"end": 1399,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1371,
											"end": 1401,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1371,
											"end": 1401,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1371,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1425,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1425,
											"end": 1429,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1106,
											"end": 1464,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 398,
											"end": 437,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 398,
											"end": 437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 398,
											"end": 437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 398,
											"end": 437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 398,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 398,
											"end": 437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 457,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 457,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4444,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4627,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4617,
											"end": 4627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4432,
											"end": 4460,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4617,
											"end": 4627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4591,
											"end": 4628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4591,
											"end": 4628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4587,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 4587,
											"end": 5498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4652,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4652,
											"end": 4681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4733,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4703,
											"end": 4733,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4733,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4755,
											"end": 4784,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4755,
											"end": 4784,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4755,
											"end": 4784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4755,
											"end": 4784,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4807,
											"end": 4837,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4807,
											"end": 4837,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4807,
											"end": 4837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4807,
											"end": 4837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4860,
											"end": 4891,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4860,
											"end": 4891,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4681,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4652,
											"end": 4681,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4703,
											"end": 4733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4703,
											"end": 4733,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4755,
											"end": 4784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4587,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 4587,
											"end": 5498,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4587,
											"end": 5498,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 4587,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4938,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4938,
											"end": 4950,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4938,
											"end": 4950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4938,
											"end": 4950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4938,
											"end": 4950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4951,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 4908,
											"end": 5498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4975,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4975,
											"end": 5006,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4975,
											"end": 5006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4975,
											"end": 5006,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5060,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 5028,
											"end": 5060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5060,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 5082,
											"end": 5113,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5136,
											"end": 5168,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5136,
											"end": 5168,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5136,
											"end": 5168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5136,
											"end": 5168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5191,
											"end": 5224,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 5191,
											"end": 5224,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5191,
											"end": 5224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5191,
											"end": 5224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4975,
											"end": 5006,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4975,
											"end": 5006,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5028,
											"end": 5060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5060,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5082,
											"end": 5113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 4908,
											"end": 5498,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 5498,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 4908,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5263,
											"end": 5289,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5263,
											"end": 5289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5338,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5311,
											"end": 5338,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5386,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5360,
											"end": 5386,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5436,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5409,
											"end": 5436,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5487,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5459,
											"end": 5487,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5459,
											"end": 5487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5289,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5289,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5311,
											"end": 5338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5311,
											"end": 5338,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5360,
											"end": 5386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4908,
											"end": 5498,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 4908,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "SWAP16",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "SWAP15",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5536,
											"end": 5541,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5541,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5543,
											"end": 5548,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5543,
											"end": 5548,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5550,
											"end": 5555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5550,
											"end": 5555,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5543,
											"end": 5548,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5536,
											"end": 5541,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4109,
											"end": 5579,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 776,
											"end": 877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 457,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 457,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 844,
											"end": 863,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 844,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 866,
											"end": 870,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 844,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 844,
											"end": 863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 844,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 863,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 844,
											"end": 870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 870,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 844,
											"end": 870,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 844,
											"end": 870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 870,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 844,
											"end": 870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 844,
											"end": 870,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 776,
											"end": 877,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12208,
											"end": 12212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 457,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12254,
											"end": 12264,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12254,
											"end": 12264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12254,
											"end": 12264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12254,
											"end": 12264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12254,
											"end": 12264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12254,
											"end": 12264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12282,
											"end": 12313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 12275,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12404,
											"end": 12414,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12404,
											"end": 12414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12346,
											"end": 12352,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12346,
											"end": 12352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12324,
											"end": 12343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12324,
											"end": 12343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12404,
											"end": 12414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12404,
											"end": 12414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12396,
											"end": 12434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12392,
											"end": 13321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 12392,
											"end": 13321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12472,
											"end": 12480,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12481,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12519,
											"end": 12530,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12544,
											"end": 12555,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 12511,
											"end": 12560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12495,
											"end": 12560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12590,
											"end": 12594,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12582,
											"end": 12594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12582,
											"end": 12594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12582,
											"end": 12594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12582,
											"end": 12594,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12574,
											"end": 12595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 12574,
											"end": 12595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12574,
											"end": 12595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12574,
											"end": 12595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12574,
											"end": 12595,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12574,
											"end": 12595,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 12574,
											"end": 12595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12609,
											"end": 12623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12609,
											"end": 12623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12392,
											"end": 13321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 12392,
											"end": 13321,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12392,
											"end": 13321,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 12392,
											"end": 13321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12664,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12652,
											"end": 12664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12644,
											"end": 12684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12644,
											"end": 12684,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 12644,
											"end": 12684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12664,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12644,
											"end": 12684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12640,
											"end": 13321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 12640,
											"end": 13321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12722,
											"end": 12730,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12804,
											"end": 12809,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 12787,
											"end": 12791,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 12787,
											"end": 12791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12769,
											"end": 12775,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 12761,
											"end": 12792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 12761,
											"end": 12792,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12761,
											"end": 12792,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 12761,
											"end": 12792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12760,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 12760,
											"end": 12810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12760,
											"end": 12810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12760,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 12760,
											"end": 12810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12760,
											"end": 12810,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 12760,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12824,
											"end": 12838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 12745,
											"end": 12810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12838,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 12824,
											"end": 12838,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12824,
											"end": 12838,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 12824,
											"end": 12838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12838,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 12824,
											"end": 12838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12869,
											"end": 12881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12885,
											"end": 12896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 12891,
											"end": 12895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12885,
											"end": 12890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 12885,
											"end": 12896,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12885,
											"end": 12896,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 12885,
											"end": 12896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12896,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12896,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12911,
											"end": 12924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12938,
											"end": 12949,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12930,
											"end": 12955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12963,
											"end": 12969,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 12930,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13016,
											"end": 13026,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13016,
											"end": 13026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 12974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12910,
											"end": 12974,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12989,
											"end": 13002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12989,
											"end": 13002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13016,
											"end": 13026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13016,
											"end": 13026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13016,
											"end": 13026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13016,
											"end": 13026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13040,
											"end": 13044,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13040,
											"end": 13044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12989,
											"end": 13002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12989,
											"end": 13002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13040,
											"end": 13044,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13016,
											"end": 13026,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 13008,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13091,
											"end": 13103,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13091,
											"end": 13103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12988,
											"end": 13049,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13064,
											"end": 13077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13064,
											"end": 13077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13091,
											"end": 13103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13091,
											"end": 13103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13091,
											"end": 13103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13091,
											"end": 13103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13117,
											"end": 13121,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13117,
											"end": 13121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13064,
											"end": 13077,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13064,
											"end": 13077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13117,
											"end": 13121,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13091,
											"end": 13103,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13083,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13063,
											"end": 13126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13063,
											"end": 13126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13160,
											"end": 13164,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13148,
											"end": 13164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13148,
											"end": 13164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13148,
											"end": 13164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13148,
											"end": 13164,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13140,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 13140,
											"end": 13165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13140,
											"end": 13165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13140,
											"end": 13165,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13140,
											"end": 13165,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 13140,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13199,
											"end": 13203,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13187,
											"end": 13203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13187,
											"end": 13203,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13179,
											"end": 13204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 13179,
											"end": 13204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13179,
											"end": 13204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13179,
											"end": 13204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13179,
											"end": 13204,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13179,
											"end": 13204,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 13179,
											"end": 13204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13238,
											"end": 13242,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13226,
											"end": 13242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13242,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13242,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13242,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13218,
											"end": 13243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 13218,
											"end": 13243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13218,
											"end": 13243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13218,
											"end": 13243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13218,
											"end": 13243,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13218,
											"end": 13243,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 13218,
											"end": 13243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13267,
											"end": 13271,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13257,
											"end": 13271,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 13257,
											"end": 13271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12640,
											"end": 13321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 12640,
											"end": 13321,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12640,
											"end": 13321,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 12640,
											"end": 13321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13302,
											"end": 13310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13310,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12640,
											"end": 13321,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 12640,
											"end": 13321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13338,
											"end": 13345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13330,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 13330,
											"end": 13346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13330,
											"end": 13346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13330,
											"end": 13346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13330,
											"end": 13346,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13330,
											"end": 13346,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 13330,
											"end": 13346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13363,
											"end": 13370,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12058,
											"end": 13377,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9973,
											"end": 9991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10006,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9957,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9941,
											"end": 9957,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9994,
											"end": 10027,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10065,
											"end": 10076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9853,
											"end": 10122,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 883,
											"end": 987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 457,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 457,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 953,
											"end": 972,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 975,
											"end": 980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 953,
											"end": 972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 953,
											"end": 972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 953,
											"end": 967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 953,
											"end": 972,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 953,
											"end": 972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 953,
											"end": 972,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 953,
											"end": 972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 953,
											"end": 972,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 953,
											"end": 980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 953,
											"end": 980,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 953,
											"end": 980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 953,
											"end": 980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 953,
											"end": 980,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 883,
											"end": 987,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2811,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2938,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2934,
											"end": 2938,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 2921,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2939,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2904,
											"end": 2939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2896,
											"end": 2940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2940,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2896,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3016,
											"end": 3018,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2989,
											"end": 3004,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2989,
											"end": 3004,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 2981,
											"end": 3019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 2981,
											"end": 3019,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2981,
											"end": 3019,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 2981,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2966,
											"end": 2975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2958,
											"end": 3020,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2958,
											"end": 3020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2950,
											"end": 3021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 3021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 993,
											"end": 1100,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 993,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1100,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3439,
											"end": 4103,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3439,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3668,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3665,
											"end": 3668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3639,
											"end": 3669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3639,
											"end": 3669,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3639,
											"end": 3669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3639,
											"end": 3669,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3635,
											"end": 4073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3694,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 3685,
											"end": 3694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3726,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 3718,
											"end": 3726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3748,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3769,
											"end": 3772,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3769,
											"end": 3772,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11298,
											"end": 11313,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 11298,
											"end": 11313,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11298,
											"end": 11313,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11280,
											"end": 11314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 3860,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11330,
											"end": 11348,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 11330,
											"end": 11348,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11330,
											"end": 11348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11366,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11382,
											"end": 11400,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 11382,
											"end": 11400,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11382,
											"end": 11400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11375,
											"end": 11409,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11375,
											"end": 11409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11375,
											"end": 11409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3769,
											"end": 3772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 3762,
											"end": 3786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11215,
											"end": 11233,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 11215,
											"end": 11233,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 3927,
											"end": 3936,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3949,
											"end": 3953,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3914,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 3914,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3635,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 3635,
											"end": 4073,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 4073,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3635,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4042,
											"end": 4062,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4062,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4042,
											"end": 4062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11622,
											"end": 11624,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4062,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4042,
											"end": 4062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11604,
											"end": 11625,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11661,
											"end": 11663,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 11641,
											"end": 11659,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 11641,
											"end": 11659,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11641,
											"end": 11659,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11634,
											"end": 11664,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "854D5541413D4951151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11680,
											"end": 11698,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11673,
											"end": 11713,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4023,
											"end": 4028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4023,
											"end": 4028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11730,
											"end": 11748,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 11730,
											"end": 11748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11420,
											"end": 11754,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3635,
											"end": 4073,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 3635,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4096,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3439,
											"end": 4103,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3439,
											"end": 4103,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6213,
											"end": 7738,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 6213,
											"end": 7738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6340,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 457,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 457,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 449,
											"end": 484,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 449,
											"end": 484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6408,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6398,
											"end": 6408,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6398,
											"end": 6408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6398,
											"end": 6408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6377,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6377,
											"end": 6410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6377,
											"end": 6410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6377,
											"end": 6389,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 6377,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6377,
											"end": 6410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6377,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6377,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6377,
											"end": 6410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6377,
											"end": 6410,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6462,
											"end": 6474,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6462,
											"end": 6474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6462,
											"end": 6474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6462,
											"end": 6474,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6462,
											"end": 6474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 6539,
											"end": 6542,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6533,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6533,
											"end": 6543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6533,
											"end": 6543,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 6533,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6486,
											"end": 6543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6486,
											"end": 6543,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6486,
											"end": 6543,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6486,
											"end": 6543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6553,
											"end": 6562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6597,
											"end": 6601,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6584,
											"end": 6601,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6584,
											"end": 6601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6584,
											"end": 6601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6584,
											"end": 6601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6584,
											"end": 6636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6584,
											"end": 6636,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6584,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 6584,
											"end": 6636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6631,
											"end": 6635,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6631,
											"end": 6635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6605,
											"end": 6636,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 6635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6631,
											"end": 6635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6584,
											"end": 6636,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 6584,
											"end": 6636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 7570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 6580,
											"end": 7570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6652,
											"end": 6681,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6652,
											"end": 6681,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6652,
											"end": 6698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6743,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 6712,
											"end": 6743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6760,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6785,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6580,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 6580,
											"end": 7570,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 7570,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 6580,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6832,
											"end": 6836,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6819,
											"end": 6836,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6836,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 6819,
											"end": 6882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6878,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6878,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6852,
											"end": 6882,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6878,
											"end": 6881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6878,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6852,
											"end": 6882,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6882,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 6819,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 6819,
											"end": 6915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6898,
											"end": 6906,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6898,
											"end": 6906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6906,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6898,
											"end": 6906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6915,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6819,
											"end": 6915,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 6819,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 6802,
											"end": 7570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6940,
											"end": 6970,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6940,
											"end": 6970,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7007,
											"end": 7011,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6802,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 6802,
											"end": 7570,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7570,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 6802,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 7032,
											"end": 7085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7054,
											"end": 7085,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7054,
											"end": 7085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7080,
											"end": 7084,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7054,
											"end": 7085,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7085,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 7032,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7028,
											"end": 7570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7028,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 7028,
											"end": 7570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7101,
											"end": 7130,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7101,
											"end": 7130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7130,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7146,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7101,
											"end": 7146,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7028,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 7028,
											"end": 7570,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7028,
											"end": 7570,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 7028,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7209,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7192,
											"end": 7209,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7209,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 7192,
											"end": 7244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7213,
											"end": 7244,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7243,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7244,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7244,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 7192,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7188,
											"end": 7570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7188,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 7188,
											"end": 7570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7260,
											"end": 7289,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7260,
											"end": 7289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7289,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7260,
											"end": 7306,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7320,
											"end": 7351,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7320,
											"end": 7368,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7188,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 7188,
											"end": 7570,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7188,
											"end": 7570,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 7188,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7424,
											"end": 7454,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7424,
											"end": 7454,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7471,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7485,
											"end": 7517,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 7485,
											"end": 7517,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7485,
											"end": 7517,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7485,
											"end": 7534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7485,
											"end": 7534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7485,
											"end": 7534,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7555,
											"end": 7559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7188,
											"end": 7570,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 7188,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7600,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7583,
											"end": 7600,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7583,
											"end": 7600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7583,
											"end": 7600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7583,
											"end": 7600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7583,
											"end": 7620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7583,
											"end": 7620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7583,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 7583,
											"end": 7620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7583,
											"end": 7620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7620,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7604,
											"end": 7613,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 7604,
											"end": 7613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7604,
											"end": 7620,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7583,
											"end": 7620,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 7583,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7579,
											"end": 7711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7579,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 7579,
											"end": 7711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7645,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 7636,
											"end": 7645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7653,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7579,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 7579,
											"end": 7711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7579,
											"end": 7711,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7579,
											"end": 7711,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 7579,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7692,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 7684,
											"end": 7692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7579,
											"end": 7711,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 7579,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7727,
											"end": 7731,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 6213,
											"end": 7738,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6213,
											"end": 7738,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5585,
											"end": 6207,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5585,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5678,
											"end": 5685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5720,
											"end": 5727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5759,
											"end": 5790,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5752,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 5752,
											"end": 5791,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5752,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 5752,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5752,
											"end": 5791,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5752,
											"end": 5791,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 5752,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5801,
											"end": 5827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5843,
											"end": 5865,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5843,
											"end": 5865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5840,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 5831,
											"end": 5865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5831,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 5831,
											"end": 5865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5831,
											"end": 5865,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 5831,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5830,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 5830,
											"end": 5898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5830,
											"end": 5898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5830,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 5830,
											"end": 5898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5830,
											"end": 5898,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 5830,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5801,
											"end": 5898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5908,
											"end": 5936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 5801,
											"end": 5898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5949,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 5940,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5908,
											"end": 5971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5981,
											"end": 6008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 5908,
											"end": 5971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6011,
											"end": 6029,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 6011,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5981,
											"end": 6052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6077,
											"end": 6096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6069,
											"end": 6119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 6062,
											"end": 6120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6062,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 6062,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6062,
											"end": 6120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6062,
											"end": 6120,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 6062,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6138,
											"end": 6157,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6159,
											"end": 6177,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6159,
											"end": 6177,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5585,
											"end": 6207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5585,
											"end": 6207,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9351,
											"end": 9847,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 9351,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9475,
											"end": 9493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9508,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 164,
											"end": 174,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 9539,
											"end": 9567,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9553,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 9539,
											"end": 9567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9567,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9567,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9568,
											"end": 9580,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9581,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9581,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9581,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9581,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9593,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9539,
											"end": 9593,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9614,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9603,
											"end": 9614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9614,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9603,
											"end": 9646,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9676,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9656,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 9656,
											"end": 9841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9703,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9692,
											"end": 9703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9692,
											"end": 9724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9746,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9656,
											"end": 9841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 9656,
											"end": 9841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9656,
											"end": 9841,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9656,
											"end": 9841,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 9656,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9820,
											"end": 9829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9777,
											"end": 9781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9777,
											"end": 9788,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9777,
											"end": 9788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9777,
											"end": 9808,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9777,
											"end": 9808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9777,
											"end": 9808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9777,
											"end": 9830,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9656,
											"end": 9841,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 9656,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9465,
											"end": 9847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9351,
											"end": 9847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9351,
											"end": 9847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9351,
											"end": 9847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9351,
											"end": 9847,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "438"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "438"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 743,
											"name": "tag",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 616,
											"end": 743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 677,
											"end": 687,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 672,
											"end": 675,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 668,
											"end": 688,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 665,
											"end": 666,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 689,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 708,
											"end": 712,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 705,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 698,
											"end": 713,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 732,
											"end": 736,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 729,
											"end": 730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 737,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 748,
											"end": 1023,
											"name": "tag",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 748,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 819,
											"end": 821,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 822,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 884,
											"end": 886,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 865,
											"end": 878,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 865,
											"end": 878,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 888,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 849,
											"end": 889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 849,
											"end": 889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 904,
											"end": 938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 904,
											"end": 938,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 940,
											"end": 962,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 940,
											"end": 962,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 940,
											"end": 962,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 901,
											"end": 963,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 898,
											"end": 986,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 898,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 898,
											"end": 986,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "tag",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 966,
											"end": 984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1002,
											"end": 1004,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1017,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 748,
											"end": 1023,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 1023,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 748,
											"end": 1023,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1028,
											"end": 1211,
											"name": "tag",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 1028,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1088,
											"end": 1092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1113,
											"end": 1119,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1163,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 1107,
											"end": 1163,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "427"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "tag",
											"source": 3,
											"value": "446"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1188,
											"end": 1189,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1204,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1180,
											"end": 1205,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1205,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1028,
											"end": 1211,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1216,
											"end": 1347,
											"name": "tag",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 1216,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1281,
											"end": 1323,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1271,
											"end": 1341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 2089,
											"name": "tag",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 1352,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1406,
											"end": 1411,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1462,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1452,
											"end": 1456,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1444,
											"end": 1450,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1440,
											"end": 1457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1426,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 1426,
											"end": 1481,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1467,
											"end": 1479,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1426,
											"end": 1481,
											"name": "tag",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 1426,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1520,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1543,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1563,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 1579,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "452"
										},
										{
											"begin": 1619,
											"end": 1621,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 1579,
											"end": 1622,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1579,
											"end": 1622,
											"name": "tag",
											"source": 3,
											"value": "452"
										},
										{
											"begin": 1579,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 1563,
											"end": 1623,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1563,
											"end": 1623,
											"name": "tag",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 1563,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1672,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1743,
											"end": 1744,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1739,
											"end": 1749,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1749,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1749,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1739,
											"end": 1749,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1750,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1755,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1755,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1755,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1688,
											"end": 1700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1688,
											"end": 1700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1688,
											"end": 1700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1688,
											"end": 1700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1782,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1782,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1782,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1799,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "453"
										},
										{
											"begin": 1764,
											"end": 1799,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1793,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 1797,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1799,
											"name": "tag",
											"source": 3,
											"value": "453"
										},
										{
											"begin": 1764,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1833,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 2060,
											"name": "tag",
											"source": 3,
											"value": "454"
										},
										{
											"begin": 1843,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 1857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1866,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 2060,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "456"
										},
										{
											"begin": 1843,
											"end": 2060,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 1942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1943,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 1981,
											"end": 1986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 1956,
											"end": 1987,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1956,
											"end": 1987,
											"name": "tag",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 1956,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2050,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2050,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2050,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2050,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1888,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1876,
											"end": 1888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "454"
										},
										{
											"begin": 1843,
											"end": 2060,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 2060,
											"name": "tag",
											"source": 3,
											"value": "456"
										},
										{
											"begin": 1843,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 2089,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 2089,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2094,
											"end": 3234,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2094,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2273,
											"end": 2275,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2270,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2259,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2276,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2293,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "459"
										},
										{
											"begin": 2241,
											"end": 2293,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2287,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2279,
											"end": 2291,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2241,
											"end": 2293,
											"name": "tag",
											"source": 3,
											"value": "459"
										},
										{
											"begin": 2241,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2399,
											"end": 2401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2402,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2385,
											"end": 2419,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2385,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "460"
										},
										{
											"begin": 2385,
											"end": 2419,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2416,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2413,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2417,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2385,
											"end": 2419,
											"name": "tag",
											"source": 3,
											"value": "460"
										},
										{
											"begin": 2385,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2438,
											"end": 2460,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2428,
											"end": 2460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2428,
											"end": 2460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2498,
											"end": 2505,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2495,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2487,
											"end": 2489,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2483,
											"end": 2496,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2506,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "461"
										},
										{
											"begin": 2469,
											"end": 2524,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2520,
											"end": 2521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2522,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2524,
											"name": "tag",
											"source": 3,
											"value": "461"
										},
										{
											"begin": 2469,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2559,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2582,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 2618,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "452"
										},
										{
											"begin": 2658,
											"end": 2660,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 2618,
											"end": 2661,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2602,
											"end": 2662,
											"name": "tag",
											"source": 3,
											"value": "462"
										},
										{
											"begin": 2602,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2785,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2762,
											"end": 2790,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2762,
											"end": 2790,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2762,
											"end": 2790,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2739,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2727,
											"end": 2739,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2821,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2821,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2821,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2838,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "464"
										},
										{
											"begin": 2799,
											"end": 2838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "464"
										},
										{
											"begin": 2799,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2869,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2869,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2858,
											"end": 2869,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "tag",
											"source": 3,
											"value": "465"
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2894,
											"end": 2900,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2889,
											"end": 2892,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2901,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "467"
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 2977,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 2977,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2948,
											"end": 2978,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2948,
											"end": 2978,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3010,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3010,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2998,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "465"
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "tag",
											"source": 3,
											"value": "467"
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3039,
											"end": 3044,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3082,
											"end": 3100,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3100,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3101,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3101,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 3110,
											"end": 3146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3142,
											"end": 3143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3146,
											"name": "tag",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 3110,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 3220,
											"end": 3227,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3209,
											"end": 3217,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3198,
											"end": 3207,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "431"
										},
										{
											"begin": 3165,
											"end": 3228,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3165,
											"end": 3228,
											"name": "tag",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 3165,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3228,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 3234,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 3234,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2094,
											"end": 3234,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3431,
											"end": 3611,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3431,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3496,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3545,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3531,
											"end": 3540,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3522,
											"end": 3529,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3541,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3514,
											"end": 3546,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3563,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 3511,
											"end": 3563,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3556,
											"end": 3557,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3549,
											"end": 3561,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3563,
											"name": "tag",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 3511,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3605,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3582,
											"end": 3605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3431,
											"end": 3611,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3616,
											"end": 3819,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3616,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3780,
											"end": 3812,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3780,
											"end": 3812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3780,
											"end": 3812,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3780,
											"end": 3812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3813,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3813,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3753,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3735,
											"end": 3753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3819,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3824,
											"end": 4079,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3824,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3946,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3932,
											"end": 3941,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3923,
											"end": 3930,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3942,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3915,
											"end": 3947,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3912,
											"end": 3964,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3912,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 3912,
											"end": 3964,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3960,
											"end": 3961,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3962,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3912,
											"end": 3964,
											"name": "tag",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 3912,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4009,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 4043,
											"end": 4048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4018,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 4018,
											"end": 4049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4018,
											"end": 4049,
											"name": "tag",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 4018,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3824,
											"end": 4079,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3824,
											"end": 4079,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4084,
											"end": 4399,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4084,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4152,
											"end": 4158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4166,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4201,
											"end": 4210,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4199,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4184,
											"end": 4216,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4181,
											"end": 4233,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4181,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 4181,
											"end": 4233,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4229,
											"end": 4230,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4231,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4181,
											"end": 4233,
											"name": "tag",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 4181,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4277,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4255,
											"end": 4278,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4287,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 4312,
											"end": 4317,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4287,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 4287,
											"end": 4318,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4287,
											"end": 4318,
											"name": "tag",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 4287,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4391,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4084,
											"end": 4399,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4586,
											"end": 4704,
											"name": "tag",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 4586,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4672,
											"end": 4677,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4665,
											"end": 4678,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4658,
											"end": 4679,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4638,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 4638,
											"end": 4698,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4694,
											"end": 4695,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4691,
											"end": 4692,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4684,
											"end": 4696,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5455,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4709,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4826,
											"end": 4832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 4848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4858,
											"end": 4864,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4872,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 4907,
											"end": 4916,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4898,
											"end": 4905,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 4894,
											"end": 4917,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4923,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4887,
											"end": 4940,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4887,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 4887,
											"end": 4940,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 4937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4887,
											"end": 4940,
											"name": "tag",
											"source": 3,
											"value": "484"
										},
										{
											"begin": 4887,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4975,
											"end": 4984,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4962,
											"end": 4985,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "485"
										},
										{
											"begin": 5019,
											"end": 5024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "tag",
											"source": 3,
											"value": "485"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5049,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5101,
											"end": 5103,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5086,
											"end": 5104,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5086,
											"end": 5104,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5105,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5114,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 5073,
											"end": 5105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5114,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 5114,
											"end": 5147,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5114,
											"end": 5147,
											"name": "tag",
											"source": 3,
											"value": "486"
										},
										{
											"begin": 5114,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5166,
											"end": 5173,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5220,
											"end": 5222,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5223,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5223,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5224,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5224,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5261,
											"end": 5279,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5261,
											"end": 5279,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5248,
											"end": 5280,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5289,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 5248,
											"end": 5280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5289,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 5289,
											"end": 5319,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5289,
											"end": 5319,
											"name": "tag",
											"source": 3,
											"value": "487"
										},
										{
											"begin": 5289,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5455,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5455,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5455,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5455,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4709,
											"end": 5455,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4709,
											"end": 5455,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 5392,
											"end": 5395,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5377,
											"end": 5396,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5377,
											"end": 5396,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5364,
											"end": 5397,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5364,
											"end": 5397,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5444,
											"end": 5447,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 5429,
											"end": 5448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5429,
											"end": 5448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5429,
											"end": 5448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4709,
											"end": 5455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4709,
											"end": 5455,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5712,
											"end": 6100,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5712,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5841,
											"end": 5843,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5838,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5820,
											"end": 5827,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5816,
											"end": 5839,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5812,
											"end": 5844,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5809,
											"end": 5861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5809,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "492"
										},
										{
											"begin": 5809,
											"end": 5861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5857,
											"end": 5858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5854,
											"end": 5855,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5847,
											"end": 5859,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5809,
											"end": 5861,
											"name": "tag",
											"source": 3,
											"value": "492"
										},
										{
											"begin": 5809,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5896,
											"end": 5905,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5883,
											"end": 5906,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "493"
										},
										{
											"begin": 5940,
											"end": 5945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 5915,
											"end": 5946,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5915,
											"end": 5946,
											"name": "tag",
											"source": 3,
											"value": "493"
										},
										{
											"begin": 5915,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5965,
											"end": 5970,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6022,
											"end": 6024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6007,
											"end": 6025,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6007,
											"end": 6025,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5994,
											"end": 6026,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "494"
										},
										{
											"begin": 5994,
											"end": 6026,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6035,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 6035,
											"end": 6068,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6035,
											"end": 6068,
											"name": "tag",
											"source": 3,
											"value": "494"
										},
										{
											"begin": 6035,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6087,
											"end": 6094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6077,
											"end": 6094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6077,
											"end": 6094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6077,
											"end": 6094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 6100,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 6100,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 6100,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 6100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 6100,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5712,
											"end": 6100,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6717,
											"end": 7181,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 6717,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6802,
											"end": 6808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6816,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6871,
											"end": 6873,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6859,
											"end": 6868,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6850,
											"end": 6857,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6846,
											"end": 6869,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6842,
											"end": 6874,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6839,
											"end": 6891,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6839,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "497"
										},
										{
											"begin": 6839,
											"end": 6891,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6885,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6839,
											"end": 6891,
											"name": "tag",
											"source": 3,
											"value": "497"
										},
										{
											"begin": 6839,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 6935,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6913,
											"end": 6936,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6945,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "498"
										},
										{
											"begin": 6970,
											"end": 6975,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6945,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 6945,
											"end": 6976,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6945,
											"end": 6976,
											"name": "tag",
											"source": 3,
											"value": "498"
										},
										{
											"begin": 6945,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6995,
											"end": 7000,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7047,
											"end": 7049,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7051,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7051,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7103,
											"end": 7105,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7075,
											"end": 7107,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 7116,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "499"
										},
										{
											"begin": 7075,
											"end": 7107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7116,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "430"
										},
										{
											"begin": 7116,
											"end": 7149,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7116,
											"end": 7149,
											"name": "tag",
											"source": 3,
											"value": "499"
										},
										{
											"begin": 7116,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7168,
											"end": 7175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7175,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7158,
											"end": 7175,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6717,
											"end": 7181,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6717,
											"end": 7181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6717,
											"end": 7181,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6717,
											"end": 7181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6717,
											"end": 7181,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6717,
											"end": 7181,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7186,
											"end": 7818,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 7186,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7357,
											"end": 7359,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7409,
											"end": 7430,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7409,
											"end": 7430,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7409,
											"end": 7430,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7492,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7479,
											"end": 7492,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7400,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7400,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7382,
											"end": 7400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7501,
											"end": 7523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7501,
											"end": 7523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7501,
											"end": 7523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7357,
											"end": 7359,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7595,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7595,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7595,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7580,
											"end": 7595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7554,
											"end": 7556,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7539,
											"end": 7557,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7539,
											"end": 7557,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7539,
											"end": 7557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7623,
											"end": 7792,
											"name": "tag",
											"source": 3,
											"value": "501"
										},
										{
											"begin": 7623,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7635,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7631,
											"end": 7644,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7623,
											"end": 7792,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7623,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "503"
										},
										{
											"begin": 7623,
											"end": 7792,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7698,
											"end": 7711,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7698,
											"end": 7711,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7686,
											"end": 7712,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7686,
											"end": 7712,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7767,
											"end": 7782,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7767,
											"end": 7782,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7767,
											"end": 7782,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7767,
											"end": 7782,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7732,
											"end": 7744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7732,
											"end": 7744,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7732,
											"end": 7744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7732,
											"end": 7744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7659,
											"end": 7660,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7652,
											"end": 7661,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7623,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "501"
										},
										{
											"begin": 7623,
											"end": 7792,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7623,
											"end": 7792,
											"name": "tag",
											"source": 3,
											"value": "503"
										},
										{
											"begin": 7623,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7809,
											"end": 7812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7809,
											"end": 7812,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 7186,
											"end": 7818,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7186,
											"end": 7818,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7823,
											"end": 8203,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 7823,
											"end": 8203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7902,
											"end": 7903,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7898,
											"end": 7910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7898,
											"end": 7910,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7898,
											"end": 7910,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 7898,
											"end": 7910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7945,
											"end": 7957,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7945,
											"end": 7957,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7945,
											"end": 7957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7966,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "505"
										},
										{
											"begin": 7966,
											"end": 8027,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8020,
											"end": 8024,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 8012,
											"end": 8018,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8008,
											"end": 8025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7998,
											"end": 8025,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7998,
											"end": 8025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7966,
											"end": 8027,
											"name": "tag",
											"source": 3,
											"value": "505"
										},
										{
											"begin": 7966,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8073,
											"end": 8075,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8065,
											"end": 8071,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8062,
											"end": 8076,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8042,
											"end": 8060,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8039,
											"end": 8077,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8036,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "506"
										},
										{
											"begin": 8036,
											"end": 8197,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8119,
											"end": 8129,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 8114,
											"end": 8117,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 8107,
											"end": 8108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8100,
											"end": 8131,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8158,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 8151,
											"end": 8152,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8144,
											"end": 8159,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8182,
											"end": 8186,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8179,
											"end": 8180,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8187,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8036,
											"end": 8197,
											"name": "tag",
											"source": 3,
											"value": "506"
										},
										{
											"begin": 8036,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8036,
											"end": 8197,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 8203,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 8203,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 8203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 8203,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8208,
											"end": 8335,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 8208,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8269,
											"end": 8279,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 8264,
											"end": 8267,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 8260,
											"end": 8280,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 8257,
											"end": 8258,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8250,
											"end": 8281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8300,
											"end": 8304,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 8297,
											"end": 8298,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8290,
											"end": 8305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8324,
											"end": 8328,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8321,
											"end": 8322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8314,
											"end": 8329,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8340,
											"end": 8467,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 8340,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8401,
											"end": 8411,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 8396,
											"end": 8399,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 8392,
											"end": 8412,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 8389,
											"end": 8390,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8382,
											"end": 8413,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8432,
											"end": 8436,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8429,
											"end": 8430,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8422,
											"end": 8437,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8456,
											"end": 8460,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8453,
											"end": 8454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8446,
											"end": 8461,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8682,
											"end": 8809,
											"name": "tag",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 8682,
											"end": 8809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8743,
											"end": 8753,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 8738,
											"end": 8741,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 8734,
											"end": 8754,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 8731,
											"end": 8732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8755,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8774,
											"end": 8778,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8771,
											"end": 8772,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8764,
											"end": 8779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8798,
											"end": 8802,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8788,
											"end": 8803,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8949,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 8814,
											"end": 8949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8853,
											"end": 8856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8874,
											"end": 8891,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8874,
											"end": 8891,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8874,
											"end": 8891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8871,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 8871,
											"end": 8914,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "tag",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 8894,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8941,
											"end": 8942,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8930,
											"end": 8943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8930,
											"end": 8943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8814,
											"end": 8949,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8954,
											"end": 9138,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 8954,
											"end": 9138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9024,
											"end": 9030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9077,
											"end": 9079,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9065,
											"end": 9074,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9056,
											"end": 9063,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9052,
											"end": 9075,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9048,
											"end": 9080,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 9045,
											"end": 9097,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9045,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 9045,
											"end": 9097,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9093,
											"end": 9094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9083,
											"end": 9095,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9045,
											"end": 9097,
											"name": "tag",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 9045,
											"end": 9097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9116,
											"end": 9132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9116,
											"end": 9132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8954,
											"end": 9138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8954,
											"end": 9138,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9805,
											"end": 9933,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 9805,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9845,
											"end": 9848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9876,
											"end": 9877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9872,
											"end": 9878,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9869,
											"end": 9870,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9866,
											"end": 9879,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9902,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9863,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "520"
										},
										{
											"begin": 9863,
											"end": 9902,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9882,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "520"
										},
										{
											"begin": 9882,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 9882,
											"end": 9900,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9882,
											"end": 9900,
											"name": "tag",
											"source": 3,
											"value": "520"
										},
										{
											"begin": 9882,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9918,
											"end": 9927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9918,
											"end": 9927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9805,
											"end": 9933,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9938,
											"end": 10063,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 9938,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9982,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10007,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10003,
											"end": 10004,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10000,
											"end": 10008,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9997,
											"end": 10031,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9997,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "523"
										},
										{
											"begin": 9997,
											"end": 10031,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10011,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "523"
										},
										{
											"begin": 10011,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 10011,
											"end": 10029,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10011,
											"end": 10029,
											"name": "tag",
											"source": 3,
											"value": "523"
										},
										{
											"begin": 10011,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10048,
											"end": 10057,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10057,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9938,
											"end": 10063,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10068,
											"end": 10358,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 10068,
											"end": 10358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10276,
											"end": 10308,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10276,
											"end": 10308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10276,
											"end": 10308,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10276,
											"end": 10308,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10258,
											"end": 10309,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10258,
											"end": 10309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10340,
											"end": 10342,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10325,
											"end": 10343,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10325,
											"end": 10343,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10318,
											"end": 10352,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10246,
											"end": 10248,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10231,
											"end": 10249,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10249,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10068,
											"end": 10358,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10363,
											"end": 10608,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 10363,
											"end": 10608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10430,
											"end": 10436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10483,
											"end": 10485,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10471,
											"end": 10480,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10458,
											"end": 10481,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10451,
											"end": 10503,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10451,
											"end": 10503,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "526"
										},
										{
											"begin": 10451,
											"end": 10503,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10499,
											"end": 10500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10496,
											"end": 10497,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10489,
											"end": 10501,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10451,
											"end": 10503,
											"name": "tag",
											"source": 3,
											"value": "526"
										},
										{
											"begin": 10451,
											"end": 10503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10531,
											"end": 10540,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10525,
											"end": 10541,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10550,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 10572,
											"end": 10577,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10550,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 10550,
											"end": 10578,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10613,
											"end": 10781,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 10613,
											"end": 10781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10653,
											"end": 10660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10719,
											"end": 10720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10715,
											"end": 10716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10711,
											"end": 10717,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 10707,
											"end": 10721,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10704,
											"end": 10705,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10701,
											"end": 10722,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10689,
											"end": 10698,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10682,
											"end": 10699,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10678,
											"end": 10723,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10675,
											"end": 10746,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10675,
											"end": 10746,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "530"
										},
										{
											"begin": 10675,
											"end": 10746,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10726,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "530"
										},
										{
											"begin": 10726,
											"end": 10744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 10726,
											"end": 10744,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10726,
											"end": 10744,
											"name": "tag",
											"source": 3,
											"value": "530"
										},
										{
											"begin": 10726,
											"end": 10744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10766,
											"end": 10775,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10766,
											"end": 10775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10781,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10786,
											"end": 11003,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 10786,
											"end": 11003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10826,
											"end": 10827,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10852,
											"end": 10853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10842,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "532"
										},
										{
											"begin": 10842,
											"end": 10974,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10896,
											"end": 10906,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 10891,
											"end": 10894,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 10887,
											"end": 10907,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 10884,
											"end": 10885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10877,
											"end": 10908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10931,
											"end": 10935,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 10928,
											"end": 10929,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10921,
											"end": 10936,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 10956,
											"end": 10957,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10949,
											"end": 10964,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10842,
											"end": 10974,
											"name": "tag",
											"source": 3,
											"value": "532"
										},
										{
											"begin": 10842,
											"end": 10974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10988,
											"end": 10997,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10988,
											"end": 10997,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10786,
											"end": 11003,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"authorize(address)": "b6a5d7de",
							"bridgeKEK(uint256)": "1a40785c",
							"bridgeKEK_bulk(uint256)": "f8ff9ac9",
							"bridgeMaxAmount()": "985c51f9",
							"bridgeTransferOutBulk(uint256[],address[])": "0cba52f9",
							"depositTrace(address,uint256)": "5f1d9fbc",
							"depositTracer(address)": "dd1599fa",
							"iVF()": "24f8958a",
							"name()": "06fdde03",
							"setMoV(address)": "43602017",
							"setShards(address,address,uint256,bool,uint256,uint256)": "79cba1c4",
							"symbol()": "95d89b41",
							"tokenizeWETH()": "4b4138c9",
							"transfer(address,uint256,address)": "dbba0f01",
							"transferAuthorization(address,address)": "8cd0acc3",
							"unauthorize(address)": "f0b37c04",
							"vaultDebt(address)": "99049f71",
							"withdraw()": "3ccfd60b",
							"withdrawToken(address)": "89476069"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"VF\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"TokenizeWETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"WithdrawToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountKEK\",\"type\":\"uint256\"}],\"name\":\"bridgeKEK\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountKEK\",\"type\":\"uint256\"}],\"name\":\"bridgeKEK_bulk\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgeMaxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"bridgeTransferOutBulk\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"depositTrace\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositor\",\"type\":\"address\"}],\"name\":\"depositTracer\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iVF\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"iMov\",\"type\":\"address\"}],\"name\":\"setMoV\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"iKEK\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"iWKEK\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_m\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"tFee\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"txFEE\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bMaxAmt\",\"type\":\"uint256\"}],\"name\":\"setShards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenizeWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"}],\"name\":\"transferAuthorization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"vaultDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/p2p/bridge/ChainB.sol\":\"iVault_ChainB\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":40},\"remappings\":[]},\"sources\":{\"contracts/p2p/bridge/ChainB.sol\":{\"keccak256\":\"0xf85da4afea7dc46293c4a5ed1e572150eddd787f4d007cb24753822711dcc520\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://276e13a7b2d0d01c118a2483f4e9ade8b222578c0f2c9f55bd96d38667d17701\",\"dweb:/ipfs/QmUtLFiCwXd6Bt33UHjpC7dqUStDkm2YkYhsBYcJDZZdWd\"]},\"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":{\"keccak256\":\"0xe7455f8c5e51679a7ed6bc3b236c29ea9fa82320c0f915e12056a776ccd56077\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99b7cd12afef5b37cfaa98b489b555d1e72b255ec72fce747b827fdca62fc998\",\"dweb:/ipfs/QmPCpBn7B45pMEwcNXcH65PNGEsUtUbajGv5XEPFJtaqs6\"]},\"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":{\"keccak256\":\"0x6ff78371034088181adf958d2801fd4f1a17f76b0dbad1943782946e626bd639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17aa641b5df4fa64195a4e24ffc5c797f6e9e98cce01427fadee64480b74e422\",\"dweb:/ipfs/QmSbUnLFQK1UtqT6hLeB6X5x1cJc7XBjL1HvgDnn2z7R6g\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1930,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1934,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "authorizations",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 12,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "_development",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 18,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "_community",
								"offset": 0,
								"slot": "3",
								"type": "t_address_payable"
							},
							{
								"astId": 21,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 24,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "teamDonationMultiplier",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 32,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "iVF",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 38,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "KEK",
								"offset": 0,
								"slot": "8",
								"type": "t_address_payable"
							},
							{
								"astId": 44,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "WKEK",
								"offset": 0,
								"slot": "9",
								"type": "t_address_payable"
							},
							{
								"astId": 50,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "WageKEK",
								"offset": 0,
								"slot": "10",
								"type": "t_contract(IWRAP)2222"
							},
							{
								"astId": 56,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "depositRecords",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 61,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "vaultRecords",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_struct(Vault)89_storage)"
							},
							{
								"astId": 92,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "coinAD_V",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 95,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "tokenAD_V",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 98,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "bFee",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 101,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "tFEE",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 104,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "bridgeMaxAmount",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 107,
								"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
								"label": "tokenFee",
								"offset": 0,
								"slot": "18",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IWRAP)2222": {
								"encoding": "inplace",
								"label": "contract IWRAP",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Vault)89_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct iVault_ChainB.Vault)",
								"numberOfBytes": "32",
								"value": "t_struct(Vault)89_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(History)79_storage": {
								"encoding": "inplace",
								"label": "struct iVault_ChainB.History",
								"members": [
									{
										"astId": 64,
										"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
										"label": "blockNumbers",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_uint256)dyn_storage"
									},
									{
										"astId": 66,
										"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
										"label": "coinAmountOwed",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 68,
										"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
										"label": "coinAmountDrawn",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 70,
										"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
										"label": "coinAmountDeposited",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 72,
										"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
										"label": "wkekAmountOwed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 74,
										"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
										"label": "tokenAmountOwed",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 76,
										"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
										"label": "tokenAmountDrawn",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 78,
										"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
										"label": "tokenAmountDeposited",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "256"
							},
							"t_struct(Vault)89_storage": {
								"encoding": "inplace",
								"label": "struct iVault_ChainB.Vault",
								"members": [
									{
										"astId": 82,
										"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
										"label": "community",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(History)79_storage"
									},
									{
										"astId": 85,
										"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
										"label": "development",
										"offset": 0,
										"slot": "8",
										"type": "t_struct(History)79_storage"
									},
									{
										"astId": 88,
										"contract": "contracts/p2p/bridge/ChainB.sol:iVault_ChainB",
										"label": "member",
										"offset": 0,
										"slot": "16",
										"type": "t_struct(History)79_storage"
									}
								],
								"numberOfBytes": "768"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/p2p/bridge/auth/iAuth_ChainB.sol": {
				"iAuth": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "authorize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fromAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "toAddr",
									"type": "address"
								}
							],
							"name": "transferAuthorization",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "unauthorize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authorize(address)": "b6a5d7de",
							"transferAuthorization(address,address)": "8cd0acc3",
							"unauthorize(address)": "f0b37c04"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"}],\"name\":\"transferAuthorization\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":\"iAuth\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":40},\"remappings\":[]},\"sources\":{\"contracts/p2p/bridge/auth/iAuth_ChainB.sol\":{\"keccak256\":\"0xe7455f8c5e51679a7ed6bc3b236c29ea9fa82320c0f915e12056a776ccd56077\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99b7cd12afef5b37cfaa98b489b555d1e72b255ec72fce747b827fdca62fc998\",\"dweb:/ipfs/QmPCpBn7B45pMEwcNXcH65PNGEsUtUbajGv5XEPFJtaqs6\"]},\"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":{\"keccak256\":\"0x6ff78371034088181adf958d2801fd4f1a17f76b0dbad1943782946e626bd639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17aa641b5df4fa64195a4e24ffc5c797f6e9e98cce01427fadee64480b74e422\",\"dweb:/ipfs/QmSbUnLFQK1UtqT6hLeB6X5x1cJc7XBjL1HvgDnn2z7R6g\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1930,
								"contract": "contracts/p2p/bridge/auth/iAuth_ChainB.sol:iAuth",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1934,
								"contract": "contracts/p2p/bridge/auth/iAuth_ChainB.sol:iAuth",
								"label": "authorizations",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":40},\"remappings\":[]},\"sources\":{\"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":{\"keccak256\":\"0x6ff78371034088181adf958d2801fd4f1a17f76b0dbad1943782946e626bd639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17aa641b5df4fa64195a4e24ffc5c797f6e9e98cce01427fadee64480b74e422\",\"dweb:/ipfs/QmSbUnLFQK1UtqT6hLeB6X5x1cJc7XBjL1HvgDnn2z7R6g\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IKEK_VAULT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receiver",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "receiver",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "balanceOfToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "balanceOfVaults",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fromWallet",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "toWallet",
									"type": "uint256"
								}
							],
							"name": "batchVaultRange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								}
							],
							"name": "deployVaults",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVIP",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "indexOfWallet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "iWKEK",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "iKEK",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "iNum",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "tokenFee",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "tFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bMaxAmt",
									"type": "uint256"
								}
							],
							"name": "setVIP",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "walletOfIndex",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								}
							],
							"name": "withdrawFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "withdrawFundsFromVaultTo",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "withdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								}
							],
							"name": "withdrawTokenFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(uint256)": "9cc7f708",
							"balanceOfToken(uint256,address)": "865ed330",
							"balanceOfVaults(address,uint256,uint256)": "fcbb48b2",
							"batchVaultRange(address,uint256,uint256)": "a12b0b27",
							"deployVaults(uint256)": "284fce07",
							"getVIP()": "72d9a587",
							"indexOfWallet(address)": "975d9205",
							"setVIP(address,address,uint256,bool,uint256,uint256)": "8fd89d82",
							"walletOfIndex(uint256)": "f2a04e98",
							"withdraw()": "3ccfd60b",
							"withdrawFrom(uint256)": "e6dad824",
							"withdrawFundsFromVaultTo(uint256,uint256,address)": "e1b405fe",
							"withdrawToken(address)": "89476069",
							"withdrawTokenFrom(address,uint256)": "3ce7f411"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiver\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"receiver\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceOfToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"balanceOfVaults\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toWallet\",\"type\":\"uint256\"}],\"name\":\"batchVaultRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"deployVaults\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVIP\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"indexOfWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"iWKEK\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"iKEK\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"iNum\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"tokenFee\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bMaxAmt\",\"type\":\"uint256\"}],\"name\":\"setVIP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"walletOfIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"withdrawFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawFundsFromVaultTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"withdrawTokenFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":\"IKEK_VAULT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":40},\"remappings\":[]},\"sources\":{\"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":{\"keccak256\":\"0x6ff78371034088181adf958d2801fd4f1a17f76b0dbad1943782946e626bd639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17aa641b5df4fa64195a4e24ffc5c797f6e9e98cce01427fadee64480b74e422\",\"dweb:/ipfs/QmSbUnLFQK1UtqT6hLeB6X5x1cJc7XBjL1HvgDnn2z7R6g\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IRECEIVE_KEK": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountKEK",
									"type": "uint256"
								}
							],
							"name": "bridgeKEK",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountKEK",
									"type": "uint256"
								}
							],
							"name": "bridgeKEK_bulk",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_amount",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "_addresses",
									"type": "address[]"
								}
							],
							"name": "bridgeTransferOutBulk",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "iKEK",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "iWKEK",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_m",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "tFee",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "txFEE",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bMaxAmt",
									"type": "uint256"
								}
							],
							"name": "setShards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenizeWETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vault",
									"type": "address"
								}
							],
							"name": "vaultDebt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "withdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"bridgeKEK(uint256)": "1a40785c",
							"bridgeKEK_bulk(uint256)": "f8ff9ac9",
							"bridgeTransferOutBulk(uint256[],address[])": "0cba52f9",
							"setShards(address,address,uint256,bool,uint256,uint256)": "79cba1c4",
							"tokenizeWETH()": "4b4138c9",
							"transfer(address,uint256,address)": "dbba0f01",
							"vaultDebt(address)": "99049f71",
							"withdraw()": "3ccfd60b",
							"withdrawToken(address)": "89476069"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountKEK\",\"type\":\"uint256\"}],\"name\":\"bridgeKEK\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountKEK\",\"type\":\"uint256\"}],\"name\":\"bridgeKEK_bulk\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"name\":\"bridgeTransferOutBulk\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"iKEK\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"iWKEK\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_m\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"tFee\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"txFEE\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bMaxAmt\",\"type\":\"uint256\"}],\"name\":\"setShards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenizeWETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"vaultDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":\"IRECEIVE_KEK\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":40},\"remappings\":[]},\"sources\":{\"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":{\"keccak256\":\"0x6ff78371034088181adf958d2801fd4f1a17f76b0dbad1943782946e626bd639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17aa641b5df4fa64195a4e24ffc5c797f6e9e98cce01427fadee64480b74e422\",\"dweb:/ipfs/QmSbUnLFQK1UtqT6hLeB6X5x1cJc7XBjL1HvgDnn2z7R6g\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWRAP": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":\"IWRAP\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":40},\"remappings\":[]},\"sources\":{\"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":{\"keccak256\":\"0x6ff78371034088181adf958d2801fd4f1a17f76b0dbad1943782946e626bd639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17aa641b5df4fa64195a4e24ffc5c797f6e9e98cce01427fadee64480b74e422\",\"dweb:/ipfs/QmSbUnLFQK1UtqT6hLeB6X5x1cJc7XBjL1HvgDnn2z7R6g\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"_MSG": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":\"_MSG\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":40},\"remappings\":[]},\"sources\":{\"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol\":{\"keccak256\":\"0x6ff78371034088181adf958d2801fd4f1a17f76b0dbad1943782946e626bd639\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17aa641b5df4fa64195a4e24ffc5c797f6e9e98cce01427fadee64480b74e422\",\"dweb:/ipfs/QmSbUnLFQK1UtqT6hLeB6X5x1cJc7XBjL1HvgDnn2z7R6g\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/p2p/bridge/ChainB.sol": {
				"ast": {
					"absolutePath": "contracts/p2p/bridge/ChainB.sol",
					"exportedSymbols": {
						"IERC20": [
							2394
						],
						"IKEK_VAULT": [
							2209
						],
						"IRECEIVE_KEK": [
							2312
						],
						"IWRAP": [
							2222
						],
						"_MSG": [
							2098
						],
						"iAuth": [
							2086
						],
						"iVault_ChainB": [
							1923
						]
					},
					"id": 1924,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"absolutePath": "contracts/p2p/bridge/auth/iAuth_ChainB.sol",
							"file": "./auth/iAuth_ChainB.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1924,
							"sourceUnit": 2087,
							"src": "61:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "iAuth",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2086,
										"src": "122:5:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "122:5:0"
								},
								{
									"baseName": {
										"id": 5,
										"name": "IRECEIVE_KEK",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2312,
										"src": "129:12:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "129:12:0"
								}
							],
							"canonicalName": "iVault_ChainB",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1923,
							"linearizedBaseContracts": [
								1923,
								2312,
								2086,
								2098
							],
							"name": "iVault_ChainB",
							"nameLocation": "105:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "_development",
									"nameLocation": "172:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "148:98:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "148:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830353031333466643445413635343738343645644534433442663436413333344237653837634344",
												"id": 10,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "203:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x050134fd4EA6547846EdE4C4Bf46A334B7e87cCD"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 9,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "195:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 8,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "195:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "195:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "_community",
									"nameLocation": "276:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "252:96:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 13,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "252:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307864313636644639444642393137433342393630363733653246343230463932386434354339626531",
												"id": 16,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "305:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xd166dF9DFB917C3B960673e2F420F928d45C9be1"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 15,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "297:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 14,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "297:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "297:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 21,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "369:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "355:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 19,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "355:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "e298a6f09f9492",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "unicodeString",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "376:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1d78be0c422213bcecdab3cbfcde619a65e7f0b409d1c7b0da5a3fe96e152afd",
											"typeString": "literal_string hex\"e298a6f09f9492\""
										},
										"value": "â˜¦ðŸ”’"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 24,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "412:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "398:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 22,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "398:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "e298a6f09f9491",
										"id": 23,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "unicodeString",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "421:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b4446db24f88a6ff49e22b36eb1b001954ebf3f7476a7c5b7380baa1ea49088b",
											"typeString": "literal_string hex\"e298a6f09f9491\""
										},
										"value": "â˜¦ðŸ”‘"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "teamDonationMultiplier",
									"nameLocation": "460:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "444:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "444:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "38303030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "485:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8000_by_1",
											"typeString": "int_const 8000"
										},
										"value": "8000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 30,
									"mutability": "immutable",
									"name": "shareBasisDivisor",
									"nameLocation": "521:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "495:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "495:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "541:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "24f8958a",
									"id": 32,
									"mutability": "mutable",
									"name": "iVF",
									"nameLocation": "568:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "553:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 31,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "553:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "KEK",
									"nameLocation": "601:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "577:89:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 33,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "577:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307865414543313766323541383231394643643635394233386335373744464664616532353533394245",
												"id": 36,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "623:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xeAEC17f25A8219FCd659B38c577DFFdae25539BE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 35,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "615:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 34,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "615:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "615:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "WKEK",
									"nameLocation": "696:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "672:90:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 39,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "672:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307841383838613741326463373365666462353730353130366132313666303638653933394132363933",
												"id": 42,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "719:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xA888a7A2dc73efdb5705106a216f068e939A2693"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 41,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "711:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 40,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "711:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 43,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "711:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 50,
									"mutability": "mutable",
									"name": "WageKEK",
									"nameLocation": "782:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "768:73:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWRAP_$2222",
										"typeString": "contract IWRAP"
									},
									"typeName": {
										"id": 46,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 45,
											"name": "IWRAP",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2222,
											"src": "768:5:0"
										},
										"referencedDeclaration": 2222,
										"src": "768:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWRAP_$2222",
											"typeString": "contract IWRAP"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307841383838613741326463373365666462353730353130366132313666303638653933394132363933",
												"id": 48,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "798:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0xA888a7A2dc73efdb5705106a216f068e939A2693"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 47,
											"name": "IWRAP",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2222,
											"src": "792:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IWRAP_$2222_$",
												"typeString": "type(contract IWRAP)"
											}
										},
										"id": 49,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "792:49:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWRAP_$2222",
											"typeString": "contract IWRAP"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 56,
									"mutability": "mutable",
									"name": "depositRecords",
									"nameLocation": "904:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "848:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 55,
										"keyType": {
											"id": 51,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "856:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "848:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 54,
											"keyType": {
												"id": 52,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "875:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "867:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 53,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "886:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 61,
									"mutability": "mutable",
									"name": "vaultRecords",
									"nameLocation": "958:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "924:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$89_storage_$",
										"typeString": "mapping(address => struct iVault_ChainB.Vault)"
									},
									"typeName": {
										"id": 60,
										"keyType": {
											"id": 57,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "932:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "924:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$89_storage_$",
											"typeString": "mapping(address => struct iVault_ChainB.Vault)"
										},
										"valueType": {
											"id": 59,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 58,
												"name": "Vault",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "943:5:0"
											},
											"referencedDeclaration": 89,
											"src": "943:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
												"typeString": "struct iVault_ChainB.Vault"
											}
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "iVault_ChainB.History",
									"id": 79,
									"members": [
										{
											"constant": false,
											"id": 64,
											"mutability": "mutable",
											"name": "blockNumbers",
											"nameLocation": "1012:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1002:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 63,
												"nodeType": "ArrayTypeName",
												"src": "1002:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 66,
											"mutability": "mutable",
											"name": "coinAmountOwed",
											"nameLocation": "1042:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1034:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 65,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1034:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 68,
											"mutability": "mutable",
											"name": "coinAmountDrawn",
											"nameLocation": "1074:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1066:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 67,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1066:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 70,
											"mutability": "mutable",
											"name": "coinAmountDeposited",
											"nameLocation": "1107:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1099:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 69,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1099:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 72,
											"mutability": "mutable",
											"name": "wkekAmountOwed",
											"nameLocation": "1144:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1136:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 71,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1136:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 74,
											"mutability": "mutable",
											"name": "tokenAmountOwed",
											"nameLocation": "1176:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1168:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 73,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1168:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 76,
											"mutability": "mutable",
											"name": "tokenAmountDrawn",
											"nameLocation": "1209:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1201:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 75,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1201:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 78,
											"mutability": "mutable",
											"name": "tokenAmountDeposited",
											"nameLocation": "1243:20:0",
											"nodeType": "VariableDeclaration",
											"scope": 79,
											"src": "1235:28:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 77,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1235:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "History",
									"nameLocation": "984:7:0",
									"nodeType": "StructDefinition",
									"scope": 1923,
									"src": "977:293:0",
									"visibility": "public"
								},
								{
									"canonicalName": "iVault_ChainB.Vault",
									"id": 89,
									"members": [
										{
											"constant": false,
											"id": 82,
											"mutability": "mutable",
											"name": "community",
											"nameLocation": "1307:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 89,
											"src": "1299:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_History_$79_storage_ptr",
												"typeString": "struct iVault_ChainB.History"
											},
											"typeName": {
												"id": 81,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 80,
													"name": "History",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 79,
													"src": "1299:7:0"
												},
												"referencedDeclaration": 79,
												"src": "1299:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_History_$79_storage_ptr",
													"typeString": "struct iVault_ChainB.History"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 85,
											"mutability": "mutable",
											"name": "development",
											"nameLocation": "1334:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 89,
											"src": "1326:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_History_$79_storage_ptr",
												"typeString": "struct iVault_ChainB.History"
											},
											"typeName": {
												"id": 84,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 83,
													"name": "History",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 79,
													"src": "1326:7:0"
												},
												"referencedDeclaration": 79,
												"src": "1326:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_History_$79_storage_ptr",
													"typeString": "struct iVault_ChainB.History"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 88,
											"mutability": "mutable",
											"name": "member",
											"nameLocation": "1363:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 89,
											"src": "1355:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_History_$79_storage_ptr",
												"typeString": "struct iVault_ChainB.History"
											},
											"typeName": {
												"id": 87,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 86,
													"name": "History",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 79,
													"src": "1355:7:0"
												},
												"referencedDeclaration": 79,
												"src": "1355:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_History_$79_storage_ptr",
													"typeString": "struct iVault_ChainB.History"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Vault",
									"nameLocation": "1283:5:0",
									"nodeType": "StructDefinition",
									"scope": 1923,
									"src": "1276:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 92,
									"mutability": "mutable",
									"name": "coinAD_V",
									"nameLocation": "1398:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "1382:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 90,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1382:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 91,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1409:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "tokenAD_V",
									"nameLocation": "1432:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "1416:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1416:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1444:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 98,
									"mutability": "mutable",
									"name": "bFee",
									"nameLocation": "1468:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "1451:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1451:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1475:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 101,
									"mutability": "mutable",
									"name": "tFEE",
									"nameLocation": "1501:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "1484:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1484:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33383030303030303030303030303030",
										"id": 100,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1508:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3800000000000000_by_1",
											"typeString": "int_const 3800000000000000"
										},
										"value": "3800000000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "985c51f9",
									"id": 104,
									"mutability": "mutable",
									"name": "bridgeMaxAmount",
									"nameLocation": "1545:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "1530:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 102,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1530:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030303030303030",
										"id": 103,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1563:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"value": "1000000000000000000000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 107,
									"mutability": "mutable",
									"name": "tokenFee",
									"nameLocation": "1609:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1923,
									"src": "1595:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 105,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1595:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1620:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "04611f1757844fdc2d4237a951583ca101c93f843bdc2d91a0e3fcf1d7a64cd2",
									"id": 113,
									"name": "TokenizeWETH",
									"nameLocation": "1638:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "1667:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1651:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": false,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "1680:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1672:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1650:34:0"
									},
									"src": "1632:53:0"
								},
								{
									"anonymous": false,
									"eventSelector": "7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65",
									"id": 119,
									"name": "Withdrawal",
									"nameLocation": "1696:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"indexed": true,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "1723:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1707:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"indexed": false,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "1736:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1728:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1706:34:0"
									},
									"src": "1690:51:0"
								},
								{
									"anonymous": false,
									"eventSelector": "037238854fe57fbf51f09946f854fc3916fe83938d6521f09bd05463839f1304",
									"id": 127,
									"name": "WithdrawToken",
									"nameLocation": "1752:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "1791:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1775:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1820:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1804:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": false,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "1843:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1835:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1765:87:0"
									},
									"src": "1746:107:0"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1984:25:0",
										"statements": [
											{
												"expression": {
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 147,
														"name": "iVF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1994:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 148,
														"name": "VF",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "2000:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1994:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "1994:8:0"
											}
										]
									},
									"id": 152,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 134,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "1921:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1921:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1913:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1913:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1913:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"arguments": [
														{
															"id": 139,
															"name": "_development",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1944:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 137,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1936:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"arguments": [
														{
															"id": 143,
															"name": "_community",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1967:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1959:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 141,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1959:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 145,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 131,
												"name": "iAuth",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2086,
												"src": "1907:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1907:72:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "VF",
												"nameLocation": "1879:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1871:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:12:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1984:0:0"
									},
									"scope": 1923,
									"src": "1859:150:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "2042:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 158,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2068:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "2068:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2060:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 156,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2060:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2060:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 163,
																		"name": "tFEE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 101,
																		"src": "2090:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2082:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 161,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2082:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2082:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2060:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2052:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2052:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "2052:44:0"
											}
										]
									},
									"id": 169,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:2:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:0"
									},
									"scope": 1923,
									"src": "2015:88:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "2137:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 175,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2163:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "2163:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2155:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 173,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2155:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2155:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 180,
																		"name": "tFEE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 101,
																		"src": "2185:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2177:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 178,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2177:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2177:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2155:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2147:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "2147:44:0"
											}
										]
									},
									"id": 186,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2117:2:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2137:0:0"
									},
									"scope": 1923,
									"src": "2109:89:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2248
									],
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "2274:531:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 196,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2300:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "2300:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2292:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 194,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2292:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2292:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 201,
																		"name": "tFEE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 101,
																		"src": "2322:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2314:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 199,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2314:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2314:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2292:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2284:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2284:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "2284:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 209,
																		"name": "amountKEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "2354:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2346:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 207,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2346:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2346:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 213,
																		"name": "bridgeMaxAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "2376:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2368:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 211,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2368:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2368:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2346:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2338:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "2338:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 225,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2097,
																					"src": "2454:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2454:12:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 222,
																						"name": "KEK",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 38,
																						"src": "2439:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					],
																					"id": 221,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2394,
																					"src": "2432:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2432:11:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$2394",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2355,
																			"src": "2432:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2432:35:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2424:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 219,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2424:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2424:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 231,
																		"name": "amountKEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "2480:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2472:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 229,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2472:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2472:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2424:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2403:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2403:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "2403:97:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 243,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2097,
																					"src": "2561:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 244,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2561:12:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 247,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "2583:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																							"typeString": "contract iVault_ChainB"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																							"typeString": "contract iVault_ChainB"
																						}
																					],
																					"id": 246,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2575:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 245,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "2575:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2575:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 240,
																						"name": "KEK",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 38,
																						"src": "2546:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					],
																					"id": 239,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2394,
																					"src": "2539:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2539:11:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$2394",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "allowance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2364,
																			"src": "2539:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address,address) view external returns (uint256)"
																			}
																		},
																		"id": 249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2539:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2531:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 237,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2531:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2531:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 253,
																		"name": "amountKEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 188,
																		"src": "2618:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2610:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 251,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2610:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2610:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2531:97:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e63726561736520616c6c6f77616e63652e2e2e4b454b",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a87b07d1d03e49ac64b8ad82e4d6d78b30b240dba8fb49150f0870cf4e5a538",
																"typeString": "literal_string \"Increase allowance...KEK\""
															},
															"value": "Increase allowance...KEK"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a87b07d1d03e49ac64b8ad82e4d6d78b30b240dba8fb49150f0870cf4e5a538",
																"typeString": "literal_string \"Increase allowance...KEK\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2510:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2510:168:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "2510:168:0"
											},
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2693:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "2688:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 259,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2688:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 267,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 262,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "2711:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2711:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 264,
															"name": "KEK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "2725:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 265,
															"name": "amountKEK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "2730:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "2703:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2703:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2688:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 269,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2758:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2769:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2758:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "2750:24:0"
											},
											{
												"expression": {
													"id": 274,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 260,
													"src": "2791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 275,
												"nodeType": "Return",
												"src": "2784:14:0"
											}
										]
									},
									"functionSelector": "1a40785c",
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeKEK",
									"nameLocation": "2213:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountKEK",
												"nameLocation": "2231:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2223:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2222:19:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2268:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2268:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:6:0"
									},
									"scope": 1923,
									"src": "2204:601:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2255
									],
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "2886:547:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 287,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2912:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "2912:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2904:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 285,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2904:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2904:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "tFEE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 101,
																		"src": "2934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2926:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 290,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2926:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2926:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2904:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2896:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2896:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "2896:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 300,
																		"name": "amountKEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "2966:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2958:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 298,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2958:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2958:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 304,
																					"name": "bridgeMaxAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 104,
																					"src": "2989:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2981:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 302,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2981:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2981:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "3430",
																					"id": 308,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3016:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_40_by_1",
																						"typeString": "int_const 40"
																					},
																					"value": "40"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_40_by_1",
																						"typeString": "int_const 40"
																					}
																				],
																				"id": 307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3008:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 306,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3008:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3008:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2981:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 311,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2980:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2958:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2950:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2950:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "2950:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 322,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2097,
																					"src": "3082:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3082:12:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 319,
																						"name": "KEK",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 38,
																						"src": "3067:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					],
																					"id": 318,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2394,
																					"src": "3060:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3060:11:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$2394",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2355,
																			"src": "3060:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3060:35:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3052:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 316,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3052:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3052:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 328,
																		"name": "amountKEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "3108:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3100:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 326,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3100:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3100:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3052:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3031:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "3031:97:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 340,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2097,
																					"src": "3189:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3189:12:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 344,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "3211:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																							"typeString": "contract iVault_ChainB"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																							"typeString": "contract iVault_ChainB"
																						}
																					],
																					"id": 343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3203:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 342,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3203:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3203:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 337,
																						"name": "KEK",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 38,
																						"src": "3174:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					],
																					"id": 336,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2394,
																					"src": "3167:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3167:11:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$2394",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "allowance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2364,
																			"src": "3167:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address,address) view external returns (uint256)"
																			}
																		},
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3167:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3159:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 334,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3159:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3159:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 350,
																		"name": "amountKEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "3246:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3238:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 348,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3238:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3238:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3159:97:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e63726561736520616c6c6f77616e63652e2e2e4b454b",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3270:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a87b07d1d03e49ac64b8ad82e4d6d78b30b240dba8fb49150f0870cf4e5a538",
																"typeString": "literal_string \"Increase allowance...KEK\""
															},
															"value": "Increase allowance...KEK"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a87b07d1d03e49ac64b8ad82e4d6d78b30b240dba8fb49150f0870cf4e5a538",
																"typeString": "literal_string \"Increase allowance...KEK\""
															}
														],
														"id": 333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3138:168:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3138:168:0"
											},
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3321:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "3316:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 356,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3316:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 359,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "3339:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3339:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 361,
															"name": "KEK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "3353:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 362,
															"name": "amountKEK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "3358:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 358,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "3331:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3331:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3316:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 366,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "3386:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3397:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3386:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3378:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3378:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "3378:24:0"
											},
											{
												"expression": {
													"id": 371,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 357,
													"src": "3419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 283,
												"id": 372,
												"nodeType": "Return",
												"src": "3412:14:0"
											}
										]
									},
									"functionSelector": "f8ff9ac9",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeKEK_bulk",
									"nameLocation": "2820:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "amountKEK",
												"nameLocation": "2843:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2835:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:19:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2880:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2880:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2879:6:0"
									},
									"scope": 1923,
									"src": "2811:622:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3559:544:0",
										"statements": [
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "3577:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "3569:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3569:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"id": 387,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "3589:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3569:26:0"
											},
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3610:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "3605:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 389,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3605:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 392,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3620:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3605:20:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 395,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "3647:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 393,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3639:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 399,
																"name": "KEK",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "3665:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3657:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 397,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3657:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3657:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3639:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "3999:74:0",
													"statements": [
														{
															"expression": {
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 443,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "4013:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4023:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "4013:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 446,
															"nodeType": "ExpressionStatement",
															"src": "4013:15:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "21535550504f52544544",
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4049:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f853ccd4088e0bae51721a102a5f5bd7f37b9a48d0c48436c8a2c858099ce3a5",
																			"typeString": "literal_string \"!SUPPORTED\""
																		},
																		"value": "!SUPPORTED"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_f853ccd4088e0bae51721a102a5f5bd7f37b9a48d0c48436c8a2c858099ce3a5",
																			"typeString": "literal_string \"!SUPPORTED\""
																		}
																	],
																	"id": 447,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "4042:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4042:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "4042:20:0"
														}
													]
												},
												"id": 452,
												"nodeType": "IfStatement",
												"src": "3635:438:0",
												"trueBody": {
													"id": 442,
													"nodeType": "Block",
													"src": "3671:322:0",
													"statements": [
														{
															"expression": {
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 402,
																	"name": "tokenAD_V",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "3685:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 403,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "3698:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3685:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 405,
															"nodeType": "ExpressionStatement",
															"src": "3685:19:0"
														},
														{
															"expression": {
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 406,
																	"name": "coinAD_V",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "3718:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 409,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3738:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "3738:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3730:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 407,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3730:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3730:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3718:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 413,
															"nodeType": "ExpressionStatement",
															"src": "3718:30:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 420,
																				"name": "depositor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 376,
																				"src": "3812:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3804:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 418,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3804:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3804:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 426,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "3856:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																							"typeString": "contract iVault_ChainB"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																							"typeString": "contract iVault_ChainB"
																						}
																					],
																					"id": 425,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3848:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 424,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3848:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3848:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3840:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 422,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3840:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3840:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 429,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 380,
																		"src": "3880:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 415,
																				"name": "KEK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 38,
																				"src": "3769:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 414,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "3762:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3762:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2394",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2393,
																	"src": "3762:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address payable,address payable,uint256) external returns (bool)"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3762:138:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 431,
															"nodeType": "ExpressionStatement",
															"src": "3762:138:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 433,
																		"name": "depositor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "3927:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 434,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "3938:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3949:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 432,
																	"name": "traceDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "3914:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,bool)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3914:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "ExpressionStatement",
															"src": "3914:40:0"
														},
														{
															"expression": {
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 438,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "3968:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3978:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3968:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 441,
															"nodeType": "ExpressionStatement",
															"src": "3968:14:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 453,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 390,
													"src": "4089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 384,
												"id": 454,
												"nodeType": "Return",
												"src": "4082:14:0"
											}
										]
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "3448:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "depositor",
												"nameLocation": "3473:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3465:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3500:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3492:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3523:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3515:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3455:80:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3553:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3553:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3552:6:0"
									},
									"scope": 1923,
									"src": "3439:664:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2274
									],
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "4401:1178:0",
										"statements": [
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "VR_v",
														"nameLocation": "4425:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "4411:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
															"typeString": "struct iVault_ChainB.Vault"
														},
														"typeName": {
															"id": 479,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 478,
																"name": "Vault",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 89,
																"src": "4411:5:0"
															},
															"referencedDeclaration": 89,
															"src": "4411:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																"typeString": "struct iVault_ChainB.Vault"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"baseExpression": {
														"id": 481,
														"name": "vaultRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "4432:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$89_storage_$",
															"typeString": "mapping(address => struct iVault_ChainB.Vault storage ref)"
														}
													},
													"id": 486,
													"indexExpression": {
														"arguments": [
															{
																"id": 484,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "4453:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4445:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 482,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4445:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4445:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4432:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vault_$89_storage",
														"typeString": "struct iVault_ChainB.Vault storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4411:49:0"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "cOwed",
														"nameLocation": "4478:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "4470:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 488,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 490,
												"nodeType": "VariableDeclarationStatement",
												"src": "4470:13:0"
											},
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"mutability": "mutable",
														"name": "tOwed",
														"nameLocation": "4501:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "4493:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 491,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 493,
												"nodeType": "VariableDeclarationStatement",
												"src": "4493:13:0"
											},
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"mutability": "mutable",
														"name": "wOwed",
														"nameLocation": "4524:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "4516:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 494,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4516:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 496,
												"nodeType": "VariableDeclarationStatement",
												"src": "4516:13:0"
											},
											{
												"assignments": [
													498
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"mutability": "mutable",
														"name": "cDrawn",
														"nameLocation": "4547:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "4539:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4539:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 499,
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:14:0"
											},
											{
												"assignments": [
													501
												],
												"declarations": [
													{
														"constant": false,
														"id": 501,
														"mutability": "mutable",
														"name": "tDrawn",
														"nameLocation": "4571:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 625,
														"src": "4563:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 500,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4563:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"nodeType": "VariableDeclarationStatement",
												"src": "4563:14:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 505,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "4599:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4591:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 503,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4591:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4591:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 509,
																"name": "_community",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "4617:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4609:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 507,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4609:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4609:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4591:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 545,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "4920:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4912:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 543,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4912:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4912:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 549,
																	"name": "_development",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "4938:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4930:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 547,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4930:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4930:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4912:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 613,
														"nodeType": "Block",
														"src": "5241:257:0",
														"statements": [
															{
																"expression": {
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 583,
																		"name": "cOwed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "5255:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"expression": {
																				"id": 584,
																				"name": "VR_v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "5263:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 585,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "member",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 88,
																			"src": "5263:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "coinAmountOwed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 66,
																		"src": "5263:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5255:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 588,
																"nodeType": "ExpressionStatement",
																"src": "5255:34:0"
															},
															{
																"expression": {
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 589,
																		"name": "tOwed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "5303:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"expression": {
																				"id": 590,
																				"name": "VR_v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "5311:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 591,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "member",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 88,
																			"src": "5311:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenAmountOwed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 74,
																		"src": "5311:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5303:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 594,
																"nodeType": "ExpressionStatement",
																"src": "5303:35:0"
															},
															{
																"expression": {
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 595,
																		"name": "wOwed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "5352:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"expression": {
																				"id": 596,
																				"name": "VR_v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "5360:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 597,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "member",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 88,
																			"src": "5360:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 598,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "wkekAmountOwed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 72,
																		"src": "5360:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5352:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 600,
																"nodeType": "ExpressionStatement",
																"src": "5352:34:0"
															},
															{
																"expression": {
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 601,
																		"name": "cDrawn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 498,
																		"src": "5400:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"expression": {
																				"id": 602,
																				"name": "VR_v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "5409:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 603,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "member",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 88,
																			"src": "5409:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "coinAmountDrawn",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 68,
																		"src": "5409:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5400:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 606,
																"nodeType": "ExpressionStatement",
																"src": "5400:36:0"
															},
															{
																"expression": {
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 607,
																		"name": "tDrawn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "5450:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"expression": {
																				"id": 608,
																				"name": "VR_v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "5459:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "member",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 88,
																			"src": "5459:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenAmountDrawn",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "5459:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5450:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 612,
																"nodeType": "ExpressionStatement",
																"src": "5450:37:0"
															}
														]
													},
													"id": 614,
													"nodeType": "IfStatement",
													"src": "4908:590:0",
													"trueBody": {
														"id": 582,
														"nodeType": "Block",
														"src": "4953:282:0",
														"statements": [
															{
																"expression": {
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 552,
																		"name": "cOwed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "4967:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"expression": {
																				"id": 553,
																				"name": "VR_v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "4975:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 554,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "development",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 85,
																			"src": "4975:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "coinAmountOwed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 66,
																		"src": "4975:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4967:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 557,
																"nodeType": "ExpressionStatement",
																"src": "4967:39:0"
															},
															{
																"expression": {
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 558,
																		"name": "tOwed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "5020:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"expression": {
																				"id": 559,
																				"name": "VR_v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "5028:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 560,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "development",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 85,
																			"src": "5028:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 561,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenAmountOwed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 74,
																		"src": "5028:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5020:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 563,
																"nodeType": "ExpressionStatement",
																"src": "5020:40:0"
															},
															{
																"expression": {
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 564,
																		"name": "wOwed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "5074:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"expression": {
																				"id": 565,
																				"name": "VR_v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "5082:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 566,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "development",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 85,
																			"src": "5082:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "wkekAmountOwed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 72,
																		"src": "5082:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5074:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 569,
																"nodeType": "ExpressionStatement",
																"src": "5074:39:0"
															},
															{
																"expression": {
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 570,
																		"name": "cDrawn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 498,
																		"src": "5127:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"expression": {
																				"id": 571,
																				"name": "VR_v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "5136:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "development",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 85,
																			"src": "5136:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 573,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "coinAmountDrawn",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 68,
																		"src": "5136:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5127:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 575,
																"nodeType": "ExpressionStatement",
																"src": "5127:41:0"
															},
															{
																"expression": {
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 576,
																		"name": "tDrawn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "5182:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"expression": {
																				"id": 577,
																				"name": "VR_v",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "5191:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 578,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "development",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 85,
																			"src": "5191:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenAmountDrawn",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "5191:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5182:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 581,
																"nodeType": "ExpressionStatement",
																"src": "5182:42:0"
															}
														]
													}
												},
												"id": 615,
												"nodeType": "IfStatement",
												"src": "4587:911:0",
												"trueBody": {
													"id": 542,
													"nodeType": "Block",
													"src": "4630:272:0",
													"statements": [
														{
															"expression": {
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 512,
																	"name": "cOwed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "4644:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 513,
																			"name": "VR_v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "4652:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 514,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "community",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 82,
																		"src": "4652:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "coinAmountOwed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 66,
																	"src": "4652:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4644:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "4644:37:0"
														},
														{
															"expression": {
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 518,
																	"name": "tOwed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "4695:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 519,
																			"name": "VR_v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "4703:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 520,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "community",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 82,
																		"src": "4703:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenAmountOwed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 74,
																	"src": "4703:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4695:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 523,
															"nodeType": "ExpressionStatement",
															"src": "4695:38:0"
														},
														{
															"expression": {
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 524,
																	"name": "wOwed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "4747:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 525,
																			"name": "VR_v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "4755:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 526,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "community",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 82,
																		"src": "4755:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 527,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "wkekAmountOwed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 72,
																	"src": "4755:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4747:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 529,
															"nodeType": "ExpressionStatement",
															"src": "4747:37:0"
														},
														{
															"expression": {
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 530,
																	"name": "cDrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "4798:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 531,
																			"name": "VR_v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "4807:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "community",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 82,
																		"src": "4807:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "coinAmountDrawn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 68,
																	"src": "4807:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4798:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 535,
															"nodeType": "ExpressionStatement",
															"src": "4798:39:0"
														},
														{
															"expression": {
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 536,
																	"name": "tDrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "4851:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 537,
																			"name": "VR_v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "4860:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 538,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "community",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 82,
																		"src": "4860:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 539,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenAmountDrawn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "4860:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4851:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 541,
															"nodeType": "ExpressionStatement",
															"src": "4851:40:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 616,
															"name": "coinAD_V",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "5515:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 617,
															"name": "tokenAD_V",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "5525:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 618,
															"name": "cOwed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5536:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 619,
															"name": "tOwed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "5543:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 620,
															"name": "wOwed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "5550:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 621,
															"name": "cDrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "5557:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 622,
															"name": "tDrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "5565:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 623,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5514:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 477,
												"id": 624,
												"nodeType": "Return",
												"src": "5507:65:0"
											}
										]
									},
									"functionSelector": "99049f71",
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 462,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 461,
												"name": "authorized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1970,
												"src": "4212:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4212:10:0"
										}
									],
									"name": "vaultDebt",
									"nameLocation": "4118:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 460,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4195:8:0"
									},
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "4136:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4128:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4127:15:0"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4253:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4274:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4295:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4337:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4358:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4379:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4239:157:0"
									},
									"scope": 1923,
									"src": "4109:1470:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "5742:465:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 640,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "5767:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5759:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 638,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5759:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5759:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5788:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5780:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 642,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5780:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5759:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 637,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "5752:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "5752:39:0"
											},
											{
												"assignments": [
													650
												],
												"declarations": [
													{
														"constant": false,
														"id": 650,
														"mutability": "mutable",
														"name": "communityLiquidity",
														"nameLocation": "5809:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "5801:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 649,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 651,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "5831:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 652,
																	"name": "teamDonationMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "5843:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5831:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 654,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5830:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 655,
														"name": "shareBasisDivisor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "5881:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5830:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5801:97:0"
											},
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "developmentLiquidity",
														"nameLocation": "5916:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "5908:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5908:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 660,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "5940:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 661,
																"name": "communityLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "5952:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5940:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 663,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5939:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5908:63:0"
											},
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "totalSumOfLiquidity",
														"nameLocation": "5989:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "5981:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 665,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 667,
														"name": "communityLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "6011:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 668,
														"name": "developmentLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "6032:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6011:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5981:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 674,
																		"name": "totalSumOfLiquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "6077:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6069:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 672,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6069:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6069:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 678,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 628,
																		"src": "6109:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6101:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 676,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6101:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6101:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6069:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 671,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "6062:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6062:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "6062:58:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 683,
															"name": "totalSumOfLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "6138:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 684,
															"name": "communityLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "6159:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 685,
															"name": "developmentLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "6179:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 686,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6137:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 636,
												"id": 687,
												"nodeType": "Return",
												"src": "6130:70:0"
											}
										]
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "split",
									"nameLocation": "5594:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5608:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "5600:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5599:19:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "5678:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "5699:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "5720:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5664:73:0"
									},
									"scope": 1923,
									"src": "5585:622:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "6346:1392:0",
										"statements": [
											{
												"assignments": [
													704
												],
												"declarations": [
													{
														"constant": false,
														"id": 704,
														"mutability": "mutable",
														"name": "VR_c",
														"nameLocation": "6370:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "6356:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
															"typeString": "struct iVault_ChainB.Vault"
														},
														"typeName": {
															"id": 703,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 702,
																"name": "Vault",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 89,
																"src": "6356:5:0"
															},
															"referencedDeclaration": 89,
															"src": "6356:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																"typeString": "struct iVault_ChainB.Vault"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 711,
												"initialValue": {
													"baseExpression": {
														"id": 705,
														"name": "vaultRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "6377:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$89_storage_$",
															"typeString": "mapping(address => struct iVault_ChainB.Vault storage ref)"
														}
													},
													"id": 710,
													"indexExpression": {
														"arguments": [
															{
																"id": 708,
																"name": "_community",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "6398:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6390:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 706,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6390:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6390:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6377:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vault_$89_storage",
														"typeString": "struct iVault_ChainB.Vault storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6356:54:0"
											},
											{
												"assignments": [
													714
												],
												"declarations": [
													{
														"constant": false,
														"id": 714,
														"mutability": "mutable",
														"name": "VR_d",
														"nameLocation": "6434:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "6420:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
															"typeString": "struct iVault_ChainB.Vault"
														},
														"typeName": {
															"id": 713,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 712,
																"name": "Vault",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 89,
																"src": "6420:5:0"
															},
															"referencedDeclaration": 89,
															"src": "6420:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																"typeString": "struct iVault_ChainB.Vault"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 721,
												"initialValue": {
													"baseExpression": {
														"id": 715,
														"name": "vaultRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "6441:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$89_storage_$",
															"typeString": "mapping(address => struct iVault_ChainB.Vault storage ref)"
														}
													},
													"id": 720,
													"indexExpression": {
														"arguments": [
															{
																"id": 718,
																"name": "_development",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "6462:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6454:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 716,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6454:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6454:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6441:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vault_$89_storage",
														"typeString": "struct iVault_ChainB.Vault storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6420:56:0"
											},
											{
												"assignments": [
													723,
													725,
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 723,
														"mutability": "mutable",
														"name": "tSum",
														"nameLocation": "6495:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "6487:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 722,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6487:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 725,
														"mutability": "mutable",
														"name": "cTliq",
														"nameLocation": "6509:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "6501:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 724,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "dTliq",
														"nameLocation": "6524:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "6516:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6516:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 731,
												"initialValue": {
													"arguments": [
														{
															"id": 729,
															"name": "sTb",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "6539:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 728,
														"name": "split",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "6533:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6533:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6486:57:0"
											},
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "sync",
														"nameLocation": "6558:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "6553:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 732,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6553:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6565:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6553:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 736,
															"name": "isTokenTx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "6584:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "74727565",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6597:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "6584:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 741,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "6613:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6605:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 739,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6605:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6605:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "WKEK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "6631:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6623:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 743,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6623:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6623:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6605:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6584:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 776,
																	"name": "isTokenTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "6819:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6819:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 781,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "6860:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6852:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 779,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6852:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6852:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 785,
																			"name": "KEK",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 38,
																			"src": "6878:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6870:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 783,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6870:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6870:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6852:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6819:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 789,
																"name": "tokenFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "6898:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6910:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "6898:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6819:96:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 809,
																	"name": "isTokenTx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "7032:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7045:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7032:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 814,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "7062:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7054:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 812,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7054:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7054:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 818,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7080:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																				"typeString": "contract iVault_ChainB"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																				"typeString": "contract iVault_ChainB"
																			}
																		],
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7072:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 816,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7072:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7072:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7054:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7032:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 838,
																		"name": "isTokenTx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "7192:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "74727565",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7205:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"src": "7192:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 843,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 693,
																				"src": "7221:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7213:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 841,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7213:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7213:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 847,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7239:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																					"typeString": "contract iVault_ChainB"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																					"typeString": "contract iVault_ChainB"
																				}
																			],
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7231:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 845,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7231:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7231:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7213:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7192:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 904,
																"nodeType": "Block",
																"src": "7410:160:0",
																"statements": [
																	{
																		"expression": {
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"expression": {
																						"id": 878,
																						"name": "VR_c",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 704,
																						"src": "7424:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																							"typeString": "struct iVault_ChainB.Vault storage pointer"
																						}
																					},
																					"id": 881,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "community",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 82,
																					"src": "7424:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_History_$79_storage",
																						"typeString": "struct iVault_ChainB.History storage ref"
																					}
																				},
																				"id": 882,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "tokenAmountOwed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 74,
																				"src": "7424:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 885,
																						"name": "cTliq",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 725,
																						"src": "7465:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 884,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7457:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 883,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7457:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 886,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7457:14:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7424:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 888,
																		"nodeType": "ExpressionStatement",
																		"src": "7424:47:0"
																	},
																	{
																		"expression": {
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"expression": {
																						"id": 889,
																						"name": "VR_d",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 714,
																						"src": "7485:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																							"typeString": "struct iVault_ChainB.Vault storage pointer"
																						}
																					},
																					"id": 892,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "development",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 85,
																					"src": "7485:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_History_$79_storage",
																						"typeString": "struct iVault_ChainB.History storage ref"
																					}
																				},
																				"id": 893,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "tokenAmountOwed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 74,
																				"src": "7485:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 896,
																						"name": "dTliq",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 727,
																						"src": "7528:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 895,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7520:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 894,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7520:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7520:14:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7485:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 899,
																		"nodeType": "ExpressionStatement",
																		"src": "7485:49:0"
																	},
																	{
																		"expression": {
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 900,
																				"name": "sync",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 733,
																				"src": "7548:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7555:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "7548:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 903,
																		"nodeType": "ExpressionStatement",
																		"src": "7548:11:0"
																	}
																]
															},
															"id": 905,
															"nodeType": "IfStatement",
															"src": "7188:382:0",
															"trueBody": {
																"id": 877,
																"nodeType": "Block",
																"src": "7246:158:0",
																"statements": [
																	{
																		"expression": {
																			"id": 860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"expression": {
																						"id": 851,
																						"name": "VR_c",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 704,
																						"src": "7260:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																							"typeString": "struct iVault_ChainB.Vault storage pointer"
																						}
																					},
																					"id": 854,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "community",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 82,
																					"src": "7260:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_History_$79_storage",
																						"typeString": "struct iVault_ChainB.History storage ref"
																					}
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "coinAmountOwed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 66,
																				"src": "7260:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 858,
																						"name": "cTliq",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 725,
																						"src": "7300:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 857,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7292:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 856,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7292:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7292:14:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7260:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 861,
																		"nodeType": "ExpressionStatement",
																		"src": "7260:46:0"
																	},
																	{
																		"expression": {
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"expression": {
																						"id": 862,
																						"name": "VR_d",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 714,
																						"src": "7320:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																							"typeString": "struct iVault_ChainB.Vault storage pointer"
																						}
																					},
																					"id": 865,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "development",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 85,
																					"src": "7320:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_History_$79_storage",
																						"typeString": "struct iVault_ChainB.History storage ref"
																					}
																				},
																				"id": 866,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "coinAmountOwed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 66,
																				"src": "7320:31:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 869,
																						"name": "dTliq",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 727,
																						"src": "7362:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 868,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7354:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 867,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7354:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7354:14:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7320:48:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 872,
																		"nodeType": "ExpressionStatement",
																		"src": "7320:48:0"
																	},
																	{
																		"expression": {
																			"id": 875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 873,
																				"name": "sync",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 733,
																				"src": "7382:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 874,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7389:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "7382:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 876,
																		"nodeType": "ExpressionStatement",
																		"src": "7382:11:0"
																	}
																]
															}
														},
														"id": 906,
														"nodeType": "IfStatement",
														"src": "7028:542:0",
														"trueBody": {
															"id": 837,
															"nodeType": "Block",
															"src": "7087:95:0",
															"statements": [
																{
																	"expression": {
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"expression": {
																					"id": 822,
																					"name": "VR_c",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 704,
																					"src": "7101:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																						"typeString": "struct iVault_ChainB.Vault storage pointer"
																					}
																				},
																				"id": 825,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "community",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 82,
																				"src": "7101:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_History_$79_storage",
																					"typeString": "struct iVault_ChainB.History storage ref"
																				}
																			},
																			"id": 826,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberName": "coinAmountOwed",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 66,
																			"src": "7101:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 829,
																					"name": "tSum",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 723,
																					"src": "7141:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7133:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 827,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7133:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7133:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7101:45:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 832,
																	"nodeType": "ExpressionStatement",
																	"src": "7101:45:0"
																},
																{
																	"expression": {
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 833,
																			"name": "sync",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 733,
																			"src": "7160:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "74727565",
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7167:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "7160:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 836,
																	"nodeType": "ExpressionStatement",
																	"src": "7160:11:0"
																}
															]
														}
													},
													"id": 907,
													"nodeType": "IfStatement",
													"src": "6802:768:0",
													"trueBody": {
														"id": 808,
														"nodeType": "Block",
														"src": "6926:96:0",
														"statements": [
															{
																"expression": {
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"expression": {
																				"id": 793,
																				"name": "VR_c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 704,
																				"src": "6940:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 796,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "community",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 82,
																			"src": "6940:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "tokenAmountOwed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 74,
																		"src": "6940:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 800,
																				"name": "tSum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 723,
																				"src": "6981:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6973:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 798,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "6973:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6973:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6940:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 803,
																"nodeType": "ExpressionStatement",
																"src": "6940:46:0"
															},
															{
																"expression": {
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 804,
																		"name": "sync",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 733,
																		"src": "7000:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "74727565",
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7007:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"src": "7000:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 807,
																"nodeType": "ExpressionStatement",
																"src": "7000:11:0"
															}
														]
													}
												},
												"id": 908,
												"nodeType": "IfStatement",
												"src": "6580:990:0",
												"trueBody": {
													"id": 775,
													"nodeType": "Block",
													"src": "6638:158:0",
													"statements": [
														{
															"expression": {
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 749,
																			"name": "VR_c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 704,
																			"src": "6652:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "community",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 82,
																		"src": "6652:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "wkekAmountOwed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 72,
																	"src": "6652:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 756,
																			"name": "cTliq",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 725,
																			"src": "6692:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6684:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 754,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6684:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6684:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6652:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 759,
															"nodeType": "ExpressionStatement",
															"src": "6652:46:0"
														},
														{
															"expression": {
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 760,
																			"name": "VR_d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 714,
																			"src": "6712:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 763,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "development",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 85,
																		"src": "6712:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 764,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "wkekAmountOwed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 72,
																	"src": "6712:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 767,
																			"name": "dTliq",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "6754:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6746:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 765,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6746:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6746:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6712:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 770,
															"nodeType": "ExpressionStatement",
															"src": "6712:48:0"
														},
														{
															"expression": {
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 771,
																	"name": "sync",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "6774:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6781:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6774:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 774,
															"nodeType": "ExpressionStatement",
															"src": "6774:11:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 909,
															"name": "isTokenTx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "7583:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "74727565",
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7596:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "7583:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 912,
															"name": "tokenAD_V",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "7604:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 913,
															"name": "tSum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "7616:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7604:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7583:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 925,
													"nodeType": "Block",
													"src": "7670:41:0",
													"statements": [
														{
															"expression": {
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 921,
																	"name": "coinAD_V",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "7684:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 922,
																	"name": "tSum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "7696:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7684:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 924,
															"nodeType": "ExpressionStatement",
															"src": "7684:16:0"
														}
													]
												},
												"id": 926,
												"nodeType": "IfStatement",
												"src": "7579:132:0",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "7622:42:0",
													"statements": [
														{
															"expression": {
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 916,
																	"name": "tokenAD_V",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "7636:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 917,
																	"name": "tSum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "7649:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7636:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 919,
															"nodeType": "ExpressionStatement",
															"src": "7636:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 927,
													"name": "sync",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 733,
													"src": "7727:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 701,
												"id": 928,
												"nodeType": "Return",
												"src": "7720:11:0"
											}
										]
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 698,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 697,
												"name": "authorized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1970,
												"src": "6320:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6320:10:0"
										}
									],
									"name": "synced",
									"nameLocation": "6222:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "sTb",
												"nameLocation": "6246:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "6238:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6267:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "6259:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "isTokenTx",
												"nameLocation": "6287:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "6282:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6282:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:74:0"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "6340:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6340:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6339:6:0"
									},
									"scope": 1923,
									"src": "6213:1525:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2236
									],
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "7792:1070:0",
										"statements": [
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "VR_c",
														"nameLocation": "7816:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "7802:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
															"typeString": "struct iVault_ChainB.Vault"
														},
														"typeName": {
															"id": 935,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 934,
																"name": "Vault",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 89,
																"src": "7802:5:0"
															},
															"referencedDeclaration": 89,
															"src": "7802:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																"typeString": "struct iVault_ChainB.Vault"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"baseExpression": {
														"id": 937,
														"name": "vaultRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "7823:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$89_storage_$",
															"typeString": "mapping(address => struct iVault_ChainB.Vault storage ref)"
														}
													},
													"id": 942,
													"indexExpression": {
														"arguments": [
															{
																"id": 940,
																"name": "_community",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "7844:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7836:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 938,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7836:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7836:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7823:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vault_$89_storage",
														"typeString": "struct iVault_ChainB.Vault storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7802:54:0"
											},
											{
												"assignments": [
													946
												],
												"declarations": [
													{
														"constant": false,
														"id": 946,
														"mutability": "mutable",
														"name": "VR_d",
														"nameLocation": "7880:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "7866:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
															"typeString": "struct iVault_ChainB.Vault"
														},
														"typeName": {
															"id": 945,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 944,
																"name": "Vault",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 89,
																"src": "7866:5:0"
															},
															"referencedDeclaration": 89,
															"src": "7866:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																"typeString": "struct iVault_ChainB.Vault"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 953,
												"initialValue": {
													"baseExpression": {
														"id": 947,
														"name": "vaultRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "7887:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$89_storage_$",
															"typeString": "mapping(address => struct iVault_ChainB.Vault storage ref)"
														}
													},
													"id": 952,
													"indexExpression": {
														"arguments": [
															{
																"id": 950,
																"name": "_development",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "7908:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7900:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 948,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7900:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7900:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7887:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vault_$89_storage",
														"typeString": "struct iVault_ChainB.Vault storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7866:56:0"
											},
											{
												"assignments": [
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "ETH_liquidity",
														"nameLocation": "7940:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "7932:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 954,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 964,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 960,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7972:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																			"typeString": "contract iVault_ChainB"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																			"typeString": "contract iVault_ChainB"
																		}
																	],
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7964:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 958,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7964:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7964:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7964:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 956,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7956:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7956:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7932:54:0"
											},
											{
												"assignments": [
													null,
													966,
													968
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 966,
														"mutability": "mutable",
														"name": "cliq",
														"nameLocation": "8007:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "7999:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 965,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7999:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "dliq",
														"nameLocation": "8021:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "8013:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 967,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 972,
												"initialValue": {
													"arguments": [
														{
															"id": 970,
															"name": "ETH_liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "8035:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 969,
														"name": "split",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "8029:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8029:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7996:53:0"
											},
											{
												"assignments": [
													974
												],
												"declarations": [
													{
														"constant": false,
														"id": 974,
														"mutability": "mutable",
														"name": "successA",
														"nameLocation": "8064:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "8059:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 973,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8059:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 976,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8075:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8059:21:0"
											},
											{
												"assignments": [
													978
												],
												"declarations": [
													{
														"constant": false,
														"id": 978,
														"mutability": "mutable",
														"name": "cTok",
														"nameLocation": "8098:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "8090:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 977,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"id": 979,
													"name": "cliq",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 966,
													"src": "8105:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8090:19:0"
											},
											{
												"assignments": [
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "dTok",
														"nameLocation": "8127:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "8119:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 981,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8119:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 984,
												"initialValue": {
													"id": 983,
													"name": "dliq",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 968,
													"src": "8134:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8119:19:0"
											},
											{
												"assignments": [
													986
												],
												"declarations": [
													{
														"constant": false,
														"id": 986,
														"mutability": "mutable",
														"name": "syncKEK",
														"nameLocation": "8156:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "8148:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 985,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8148:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 989,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "8174:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																	"typeString": "contract iVault_ChainB"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																	"typeString": "contract iVault_ChainB"
																}
															],
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8166:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 987,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8166:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8166:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "8166:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8148:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 995,
																		"name": "syncKEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 986,
																		"src": "8212:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 998,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "8229:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																					"typeString": "contract iVault_ChainB"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																					"typeString": "contract iVault_ChainB"
																				}
																			],
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8221:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 996,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8221:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8221:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8236:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 994,
																	"name": "synced",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "8205:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$_t_bool_$",
																		"typeString": "function (uint256,address,bool) returns (bool)"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8205:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8246:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "8205:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 993,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8197:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8197:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "8197:54:0"
											},
											{
												"assignments": [
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "syncWKEK",
														"nameLocation": "8269:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1106,
														"src": "8261:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1006,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1014,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8311:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																		"typeString": "contract iVault_ChainB"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																		"typeString": "contract iVault_ChainB"
																	}
																],
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8303:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1012,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8303:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8303:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1009,
																	"name": "WKEK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "8287:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1008,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "8280:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8280:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2394",
																"typeString": "contract IERC20"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2355,
														"src": "8280:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8280:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8261:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1020,
																		"name": "syncWKEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1007,
																		"src": "8342:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1021,
																		"name": "WKEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "8352:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1019,
																	"name": "synced",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "8335:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$_t_bool_$",
																		"typeString": "function (uint256,address,bool) returns (bool)"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8335:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8367:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "8335:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8327:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8327:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "8327:45:0"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 1083,
															"nodeType": "Block",
															"src": "8433:284:0",
															"statements": [
																{
																	"expression": {
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"expression": {
																					"id": 1035,
																					"name": "VR_c",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 936,
																					"src": "8447:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																						"typeString": "struct iVault_ChainB.Vault storage pointer"
																					}
																				},
																				"id": 1038,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "community",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 82,
																				"src": "8447:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_History_$79_storage",
																					"typeString": "struct iVault_ChainB.History storage ref"
																				}
																			},
																			"id": 1039,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberName": "coinAmountOwed",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 66,
																			"src": "8447:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1042,
																					"name": "cliq",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 966,
																					"src": "8488:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1041,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8480:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1040,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8480:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8480:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8447:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1045,
																	"nodeType": "ExpressionStatement",
																	"src": "8447:46:0"
																},
																{
																	"expression": {
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"expression": {
																					"id": 1046,
																					"name": "VR_d",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "8507:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																						"typeString": "struct iVault_ChainB.Vault storage pointer"
																					}
																				},
																				"id": 1049,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "development",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 85,
																				"src": "8507:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_History_$79_storage",
																					"typeString": "struct iVault_ChainB.History storage ref"
																				}
																			},
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberName": "coinAmountOwed",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 66,
																			"src": "8507:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1053,
																					"name": "dliq",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 968,
																					"src": "8550:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8542:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1051,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8542:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8542:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8507:48:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1056,
																	"nodeType": "ExpressionStatement",
																	"src": "8507:48:0"
																},
																{
																	"expression": {
																		"id": 1066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"expression": {
																					"id": 1057,
																					"name": "VR_c",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 936,
																					"src": "8569:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																						"typeString": "struct iVault_ChainB.Vault storage pointer"
																					}
																				},
																				"id": 1060,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "community",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 82,
																				"src": "8569:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_History_$79_storage",
																					"typeString": "struct iVault_ChainB.History storage ref"
																				}
																			},
																			"id": 1061,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberName": "wkekAmountOwed",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 72,
																			"src": "8569:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1064,
																					"name": "cTok",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "8610:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8602:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1062,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8602:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8602:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8569:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1067,
																	"nodeType": "ExpressionStatement",
																	"src": "8569:46:0"
																},
																{
																	"expression": {
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"expression": {
																					"id": 1068,
																					"name": "VR_d",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "8629:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																						"typeString": "struct iVault_ChainB.Vault storage pointer"
																					}
																				},
																				"id": 1071,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "development",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 85,
																				"src": "8629:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_History_$79_storage",
																					"typeString": "struct iVault_ChainB.History storage ref"
																				}
																			},
																			"id": 1072,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberName": "wkekAmountOwed",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 72,
																			"src": "8629:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1075,
																					"name": "dTok",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 982,
																					"src": "8672:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1074,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8664:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1073,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8664:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8664:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8629:48:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1078,
																	"nodeType": "ExpressionStatement",
																	"src": "8629:48:0"
																},
																{
																	"expression": {
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1079,
																			"name": "successA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "8691:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "74727565",
																			"id": 1080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8702:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "8691:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1082,
																	"nodeType": "ExpressionStatement",
																	"src": "8691:15:0"
																}
															]
														},
														"errorName": "",
														"id": 1084,
														"nodeType": "TryCatchClause",
														"src": "8433:284:0"
													},
													{
														"block": {
															"id": 1089,
															"nodeType": "Block",
															"src": "8724:41:0",
															"statements": [
																{
																	"expression": {
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1085,
																			"name": "successA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "8738:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "66616c7365",
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8749:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"src": "8738:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1088,
																	"nodeType": "ExpressionStatement",
																	"src": "8738:16:0"
																}
															]
														},
														"errorName": "",
														"id": 1090,
														"nodeType": "TryCatchClause",
														"src": "8718:47:0"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 1029,
																		"name": "WageKEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "8392:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWRAP_$2222",
																			"typeString": "contract IWRAP"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IWRAP_$2222",
																			"typeString": "contract IWRAP"
																		}
																	],
																	"id": 1028,
																	"name": "IWRAP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2222,
																	"src": "8386:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IWRAP_$2222_$",
																		"typeString": "type(contract IWRAP)"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8386:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWRAP_$2222",
																	"typeString": "contract IWRAP"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2212,
															"src": "8386:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1032,
																"name": "ETH_liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "8416:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8386:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8386:46:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "TryStatement",
												"src": "8382:383:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1093,
																"name": "successA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "8781:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8793:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "8781:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1092,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "8774:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8774:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "8774:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1101,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8834:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																		"typeString": "contract iVault_ChainB"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																		"typeString": "contract iVault_ChainB"
																	}
																],
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8826:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1099,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8826:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8826:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "ETH_liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "8841:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1098,
														"name": "TokenizeWETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "8813:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8813:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "EmitStatement",
												"src": "8808:47:0"
											}
										]
									},
									"functionSelector": "4b4138c9",
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenizeWETH",
									"nameLocation": "7753:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 932,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7783:8:0"
									},
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7765:2:0"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7792:0:0"
									},
									"scope": 1923,
									"src": "7744:1118:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2233
									],
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "8914:431:0",
										"statements": [
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "VR_c",
														"nameLocation": "8938:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1183,
														"src": "8924:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
															"typeString": "struct iVault_ChainB.Vault"
														},
														"typeName": {
															"id": 1112,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1111,
																"name": "Vault",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 89,
																"src": "8924:5:0"
															},
															"referencedDeclaration": 89,
															"src": "8924:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																"typeString": "struct iVault_ChainB.Vault"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1120,
												"initialValue": {
													"baseExpression": {
														"id": 1114,
														"name": "vaultRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "8945:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$89_storage_$",
															"typeString": "mapping(address => struct iVault_ChainB.Vault storage ref)"
														}
													},
													"id": 1119,
													"indexExpression": {
														"arguments": [
															{
																"id": 1117,
																"name": "_community",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "8966:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8958:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1115,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8958:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8958:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8945:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vault_$89_storage",
														"typeString": "struct iVault_ChainB.Vault storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8924:54:0"
											},
											{
												"assignments": [
													1122
												],
												"declarations": [
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "ETH_liquidity",
														"nameLocation": "8996:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1183,
														"src": "8988:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1121,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8988:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1131,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "9028:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																			"typeString": "contract iVault_ChainB"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																			"typeString": "contract iVault_ChainB"
																		}
																	],
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9020:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1125,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9020:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9020:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "9020:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9012:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9012:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8988:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1134,
																		"name": "ETH_liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1122,
																		"src": "9067:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1137,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "9090:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																					"typeString": "contract iVault_ChainB"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																					"typeString": "contract iVault_ChainB"
																				}
																			],
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9082:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1135,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9082:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9082:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9097:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1133,
																	"name": "synced",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "9060:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$_t_bool_$",
																		"typeString": "function (uint256,address,bool) returns (bool)"
																	}
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9060:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9107:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "9060:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9052:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9052:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "9052:60:0"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1145,
																"name": "VR_c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "9122:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																	"typeString": "struct iVault_ChainB.Vault storage pointer"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "community",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 82,
															"src": "9122:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_History_$79_storage",
																"typeString": "struct iVault_ChainB.History storage ref"
															}
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "coinAmountDrawn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 68,
														"src": "9122:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1152,
																"name": "ETH_liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "9164:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9156:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9156:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9156:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9122:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "9122:56:0"
											},
											{
												"expression": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1156,
																"name": "VR_c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "9188:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																	"typeString": "struct iVault_ChainB.Vault storage pointer"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "community",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 82,
															"src": "9188:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_History_$79_storage",
																"typeString": "struct iVault_ChainB.History storage ref"
															}
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "coinAmountOwed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 66,
														"src": "9188:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9228:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1161,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9220:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9220:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9188:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "9188:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1172,
															"name": "ETH_liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "9269:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1169,
																	"name": "_community",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "9248:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9240:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1167,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9240:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9240:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "9240:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9240:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "9240:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1178,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9317:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																		"typeString": "contract iVault_ChainB"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																		"typeString": "contract iVault_ChainB"
																	}
																],
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9309:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1176,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9309:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9309:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1180,
															"name": "ETH_liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "9324:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1175,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "9298:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9298:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "EmitStatement",
												"src": "9293:45:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "8877:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1109,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8905:8:0"
									},
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8885:2:0"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8914:0:0"
									},
									"scope": 1923,
									"src": "8868:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "9465:382:0",
										"statements": [
											{
												"assignments": [
													1195
												],
												"declarations": [
													{
														"constant": false,
														"id": 1195,
														"mutability": "mutable",
														"name": "VR_s",
														"nameLocation": "9489:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1252,
														"src": "9475:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
															"typeString": "struct iVault_ChainB.Vault"
														},
														"typeName": {
															"id": 1194,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1193,
																"name": "Vault",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 89,
																"src": "9475:5:0"
															},
															"referencedDeclaration": 89,
															"src": "9475:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																"typeString": "struct iVault_ChainB.Vault"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1202,
												"initialValue": {
													"baseExpression": {
														"id": 1196,
														"name": "vaultRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "9496:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$89_storage_$",
															"typeString": "mapping(address => struct iVault_ChainB.Vault storage ref)"
														}
													},
													"id": 1201,
													"indexExpression": {
														"arguments": [
															{
																"id": 1199,
																"name": "_depositor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "9517:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9509:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1197,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9509:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9509:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9496:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vault_$89_storage",
														"typeString": "struct iVault_ChainB.Vault storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9475:54:0"
											},
											{
												"expression": {
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1203,
																"name": "depositRecords",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "9539:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1208,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1204,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2097,
																	"src": "9554:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9554:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9539:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1209,
														"indexExpression": {
															"expression": {
																"id": 1206,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9568:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "9568:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9539:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1210,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "9584:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9539:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "9539:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1220,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9633:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "9633:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"expression": {
																	"id": 1213,
																	"name": "VR_s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "9603:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																		"typeString": "struct iVault_ChainB.Vault storage pointer"
																	}
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "member",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 88,
																"src": "9603:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_History_$79_storage",
																	"typeString": "struct iVault_ChainB.History storage ref"
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "blockNumbers",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 64,
															"src": "9603:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "9603:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9603:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "9603:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1224,
														"name": "aTokenTX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "9660:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9672:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "9660:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1250,
													"nodeType": "Block",
													"src": "9763:78:0",
													"statements": [
														{
															"expression": {
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1239,
																			"name": "VR_s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1195,
																			"src": "9777:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "member",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 88,
																		"src": "9777:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "coinAmountDeposited",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 70,
																	"src": "9777:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1246,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1188,
																			"src": "9820:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9812:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1244,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9812:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9812:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9777:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1249,
															"nodeType": "ExpressionStatement",
															"src": "9777:53:0"
														}
													]
												},
												"id": 1251,
												"nodeType": "IfStatement",
												"src": "9656:185:0",
												"trueBody": {
													"id": 1238,
													"nodeType": "Block",
													"src": "9678:79:0",
													"statements": [
														{
															"expression": {
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1227,
																			"name": "VR_s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1195,
																			"src": "9692:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "member",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 88,
																		"src": "9692:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tokenAmountDeposited",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 78,
																	"src": "9692:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1234,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1188,
																			"src": "9736:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9728:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1232,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9728:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9728:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9692:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1237,
															"nodeType": "ExpressionStatement",
															"src": "9692:54:0"
														}
													]
												}
											}
										]
									},
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "traceDeposit",
									"nameLocation": "9360:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "_depositor",
												"nameLocation": "9390:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "9382:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "9418:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "9410:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "aTokenTX",
												"nameLocation": "9442:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "9437:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9437:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9372:84:0"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9465:0:0"
									},
									"scope": 1923,
									"src": "9351:496:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "9963:159:0",
										"statements": [
											{
												"assignments": [
													1263
												],
												"declarations": [
													{
														"constant": false,
														"id": 1263,
														"mutability": "mutable",
														"name": "VR_s",
														"nameLocation": "9987:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "9973:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
															"typeString": "struct iVault_ChainB.Vault"
														},
														"typeName": {
															"id": 1262,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1261,
																"name": "Vault",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 89,
																"src": "9973:5:0"
															},
															"referencedDeclaration": 89,
															"src": "9973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																"typeString": "struct iVault_ChainB.Vault"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1270,
												"initialValue": {
													"baseExpression": {
														"id": 1264,
														"name": "vaultRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "9994:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$89_storage_$",
															"typeString": "mapping(address => struct iVault_ChainB.Vault storage ref)"
														}
													},
													"id": 1269,
													"indexExpression": {
														"arguments": [
															{
																"id": 1267,
																"name": "_depositor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "10015:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10007:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1265,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10007:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10007:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9994:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vault_$89_storage",
														"typeString": "struct iVault_ChainB.Vault storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9973:54:0"
											},
											{
												"assignments": [
													1275
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "tBlocks",
														"nameLocation": "10055:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1283,
														"src": "10037:25:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1273,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10037:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1274,
															"nodeType": "ArrayTypeName",
															"src": "10037:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1279,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 1276,
															"name": "VR_s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "10065:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																"typeString": "struct iVault_ChainB.Vault storage pointer"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "member",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 88,
														"src": "10065:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_History_$79_storage",
															"typeString": "struct iVault_ChainB.History storage ref"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "blockNumbers",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 64,
													"src": "10065:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10037:52:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1280,
															"name": "tBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "10107:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														}
													],
													"id": 1281,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10106:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[] storage pointer"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1282,
												"nodeType": "Return",
												"src": "10099:16:0"
											}
										]
									},
									"functionSelector": "dd1599fa",
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositTracer",
									"nameLocation": "9862:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "_depositor",
												"nameLocation": "9884:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9876:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9875:20:0"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "9941:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1257,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1258,
													"nodeType": "ArrayTypeName",
													"src": "9941:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9940:18:0"
									},
									"scope": 1923,
									"src": "9853:269:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "10249:63:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1293,
															"name": "depositRecords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "10266:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1295,
														"indexExpression": {
															"id": 1294,
															"name": "_depositor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "10281:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10266:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1297,
													"indexExpression": {
														"id": 1296,
														"name": "blockNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "10293:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10266:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1292,
												"id": 1298,
												"nodeType": "Return",
												"src": "10259:46:0"
											}
										]
									},
									"functionSelector": "5f1d9fbc",
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositTrace",
									"nameLocation": "10137:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "_depositor",
												"nameLocation": "10158:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "10150:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "10178:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "10170:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10149:41:0"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "10236:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10235:9:0"
									},
									"scope": 1923,
									"src": "10128:184:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2241
									],
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "10380:1672:0",
										"statements": [
											{
												"assignments": [
													1308
												],
												"declarations": [
													{
														"constant": false,
														"id": 1308,
														"mutability": "mutable",
														"name": "VR_c",
														"nameLocation": "10404:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "10390:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
															"typeString": "struct iVault_ChainB.Vault"
														},
														"typeName": {
															"id": 1307,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1306,
																"name": "Vault",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 89,
																"src": "10390:5:0"
															},
															"referencedDeclaration": 89,
															"src": "10390:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																"typeString": "struct iVault_ChainB.Vault"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1315,
												"initialValue": {
													"baseExpression": {
														"id": 1309,
														"name": "vaultRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "10411:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$89_storage_$",
															"typeString": "mapping(address => struct iVault_ChainB.Vault storage ref)"
														}
													},
													"id": 1314,
													"indexExpression": {
														"arguments": [
															{
																"id": 1312,
																"name": "_community",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "10432:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10424:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1310,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10424:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10424:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10411:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vault_$89_storage",
														"typeString": "struct iVault_ChainB.Vault storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10390:54:0"
											},
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "VR_d",
														"nameLocation": "10468:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "10454:18:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
															"typeString": "struct iVault_ChainB.Vault"
														},
														"typeName": {
															"id": 1317,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1316,
																"name": "Vault",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 89,
																"src": "10454:5:0"
															},
															"referencedDeclaration": 89,
															"src": "10454:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																"typeString": "struct iVault_ChainB.Vault"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1325,
												"initialValue": {
													"baseExpression": {
														"id": 1319,
														"name": "vaultRecords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "10475:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$89_storage_$",
															"typeString": "mapping(address => struct iVault_ChainB.Vault storage ref)"
														}
													},
													"id": 1324,
													"indexExpression": {
														"arguments": [
															{
																"id": 1322,
																"name": "_development",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "10496:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10488:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1320,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10488:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10488:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10475:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Vault_$89_storage",
														"typeString": "struct iVault_ChainB.Vault storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10454:56:0"
											},
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "Token_liquidity",
														"nameLocation": "10528:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "10520:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1340,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1336,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10599:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																				"typeString": "contract iVault_ChainB"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																				"typeString": "contract iVault_ChainB"
																			}
																		],
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10591:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1334,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10591:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10591:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1331,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1302,
																			"src": "10574:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1330,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "10567:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10567:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2394",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2355,
																"src": "10567:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10567:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10546:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1328,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10546:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10546:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10520:95:0"
											},
											{
												"assignments": [
													null,
													1342,
													1344
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1342,
														"mutability": "mutable",
														"name": "cliq",
														"nameLocation": "10636:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "10628:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1341,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1344,
														"mutability": "mutable",
														"name": "dliq",
														"nameLocation": "10650:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "10642:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1343,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10642:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1348,
												"initialValue": {
													"arguments": [
														{
															"id": 1346,
															"name": "Token_liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "10664:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1345,
														"name": "split",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "10658:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256,uint256,uint256)"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10658:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10625:55:0"
											},
											{
												"assignments": [
													1350
												],
												"declarations": [
													{
														"constant": false,
														"id": 1350,
														"mutability": "mutable",
														"name": "cTok",
														"nameLocation": "10698:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "10690:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10690:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1352,
												"initialValue": {
													"id": 1351,
													"name": "cliq",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1342,
													"src": "10705:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10690:19:0"
											},
											{
												"assignments": [
													1354
												],
												"declarations": [
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "dTok",
														"nameLocation": "10727:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "10719:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1353,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10719:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1356,
												"initialValue": {
													"id": 1355,
													"name": "dliq",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1344,
													"src": "10734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10719:19:0"
											},
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "sTb",
														"nameLocation": "10756:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "10748:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10748:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1368,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1365,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10794:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																		"typeString": "contract iVault_ChainB"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																		"typeString": "contract iVault_ChainB"
																	}
																],
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10786:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1363,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10786:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10786:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1360,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "10769:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1359,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "10762:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10762:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2394",
																"typeString": "contract IERC20"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2355,
														"src": "10762:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10762:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10748:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1371,
																		"name": "sTb",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "10825:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1372,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "10830:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10837:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1370,
																	"name": "synced",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "10818:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$_t_bool_$",
																		"typeString": "function (uint256,address,bool) returns (bool)"
																	}
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10818:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10846:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "10818:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10810:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10810:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "10810:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1381,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "10873:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10865:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1379,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10865:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10865:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 1385,
																"name": "WKEK",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "10891:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1383,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10883:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10883:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10865:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1457,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "11301:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11293:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1455,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11293:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11293:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1461,
																		"name": "KEK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "11319:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11311:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1459,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11311:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11311:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11293:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1464,
																"name": "tokenFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "11327:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11339:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "11327:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "11293:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1568,
														"nodeType": "Block",
														"src": "11740:230:0",
														"statements": [
															{
																"expression": {
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"expression": {
																				"id": 1535,
																				"name": "VR_c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1308,
																				"src": "11754:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 1538,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "community",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 82,
																			"src": "11754:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "tokenAmountOwed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 74,
																		"src": "11754:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1542,
																				"name": "Token_liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1327,
																				"src": "11796:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11788:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1540,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11788:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11788:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11754:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1545,
																"nodeType": "ExpressionStatement",
																"src": "11754:58:0"
															},
															{
																"expression": {
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"expression": {
																				"id": 1546,
																				"name": "VR_c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1308,
																				"src": "11826:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 1549,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "community",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 82,
																			"src": "11826:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 1550,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "tokenAmountDrawn",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "11826:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1553,
																				"name": "Token_liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1327,
																				"src": "11869:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11861:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1551,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11861:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11861:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11826:59:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1556,
																"nodeType": "ExpressionStatement",
																"src": "11826:59:0"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1563,
																					"name": "_community",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 18,
																					"src": "11930:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 1562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11922:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1561,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "11922:8:0",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11922:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		{
																			"id": 1565,
																			"name": "Token_liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1327,
																			"src": "11943:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1558,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1302,
																					"src": "11906:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1557,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "11899:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11899:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2394",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2382,
																		"src": "11899:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address payable,uint256) external returns (bool)"
																		}
																	},
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11899:60:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1567,
																"nodeType": "ExpressionStatement",
																"src": "11899:60:0"
															}
														]
													},
													"id": 1569,
													"nodeType": "IfStatement",
													"src": "11289:681:0",
													"trueBody": {
														"id": 1534,
														"nodeType": "Block",
														"src": "11345:389:0",
														"statements": [
															{
																"expression": {
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"expression": {
																				"id": 1468,
																				"name": "VR_c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1308,
																				"src": "11359:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "community",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 82,
																			"src": "11359:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "tokenAmountOwed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 74,
																		"src": "11359:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1475,
																				"name": "cTok",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "11401:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11393:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1473,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11393:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11393:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11359:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1478,
																"nodeType": "ExpressionStatement",
																"src": "11359:47:0"
															},
															{
																"expression": {
																	"id": 1488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"expression": {
																				"id": 1479,
																				"name": "VR_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "11420:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "development",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 85,
																			"src": "11420:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "tokenAmountOwed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 74,
																		"src": "11420:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1486,
																				"name": "dTok",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1354,
																				"src": "11464:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11456:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1484,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11456:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11456:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11420:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1489,
																"nodeType": "ExpressionStatement",
																"src": "11420:49:0"
															},
															{
																"expression": {
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"expression": {
																				"id": 1490,
																				"name": "VR_c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1308,
																				"src": "11483:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "community",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 82,
																			"src": "11483:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "tokenAmountDrawn",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "11483:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1497,
																				"name": "cliq",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "11526:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11518:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1495,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11518:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11518:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11483:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1500,
																"nodeType": "ExpressionStatement",
																"src": "11483:48:0"
															},
															{
																"expression": {
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"expression": {
																				"id": 1501,
																				"name": "VR_d",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "11545:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																					"typeString": "struct iVault_ChainB.Vault storage pointer"
																				}
																			},
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "development",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 85,
																			"src": "11545:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_History_$79_storage",
																				"typeString": "struct iVault_ChainB.History storage ref"
																			}
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "tokenAmountDrawn",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "11545:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1508,
																				"name": "dliq",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1344,
																				"src": "11590:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11582:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1506,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11582:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11582:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11545:50:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1511,
																"nodeType": "ExpressionStatement",
																"src": "11545:50:0"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1518,
																					"name": "_community",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 18,
																					"src": "11640:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 1517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11632:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1516,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "11632:8:0",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11632:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		{
																			"id": 1520,
																			"name": "cliq",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1342,
																			"src": "11653:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1513,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1302,
																					"src": "11616:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1512,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "11609:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11609:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2394",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2382,
																		"src": "11609:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address payable,uint256) external returns (bool)"
																		}
																	},
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11609:49:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1522,
																"nodeType": "ExpressionStatement",
																"src": "11609:49:0"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1529,
																					"name": "_development",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 12,
																					"src": "11703:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 1528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11695:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1527,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "11695:8:0",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11695:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		{
																			"id": 1531,
																			"name": "dliq",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "11718:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1524,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1302,
																					"src": "11679:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1523,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "11672:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11672:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2394",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2382,
																		"src": "11672:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address payable,uint256) external returns (bool)"
																		}
																	},
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11672:51:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1533,
																"nodeType": "ExpressionStatement",
																"src": "11672:51:0"
															}
														]
													}
												},
												"id": 1570,
												"nodeType": "IfStatement",
												"src": "10861:1109:0",
												"trueBody": {
													"id": 1454,
													"nodeType": "Block",
													"src": "10898:385:0",
													"statements": [
														{
															"expression": {
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1388,
																			"name": "VR_c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1308,
																			"src": "10912:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "community",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 82,
																		"src": "10912:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "wkekAmountOwed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 72,
																	"src": "10912:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1395,
																			"name": "cTok",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1350,
																			"src": "10953:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10945:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1393,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10945:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10945:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10912:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1398,
															"nodeType": "ExpressionStatement",
															"src": "10912:46:0"
														},
														{
															"expression": {
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1399,
																			"name": "VR_d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1318,
																			"src": "10972:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 1402,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "development",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 85,
																		"src": "10972:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "wkekAmountOwed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 72,
																	"src": "10972:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1406,
																			"name": "dTok",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1354,
																			"src": "11015:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11007:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1404,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11007:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11007:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10972:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1409,
															"nodeType": "ExpressionStatement",
															"src": "10972:48:0"
														},
														{
															"expression": {
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1410,
																			"name": "VR_c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1308,
																			"src": "11034:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 1413,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "community",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 82,
																		"src": "11034:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tokenAmountDrawn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "11034:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1417,
																			"name": "cliq",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1342,
																			"src": "11077:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11069:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1415,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11069:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11069:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11034:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1420,
															"nodeType": "ExpressionStatement",
															"src": "11034:48:0"
														},
														{
															"expression": {
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1421,
																			"name": "VR_d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1318,
																			"src": "11096:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Vault_$89_storage_ptr",
																				"typeString": "struct iVault_ChainB.Vault storage pointer"
																			}
																		},
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "development",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 85,
																		"src": "11096:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_History_$79_storage",
																			"typeString": "struct iVault_ChainB.History storage ref"
																		}
																	},
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tokenAmountDrawn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "11096:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1428,
																			"name": "dliq",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "11141:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1426,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11133:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11133:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11096:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1431,
															"nodeType": "ExpressionStatement",
															"src": "11096:50:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1438,
																				"name": "_community",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 18,
																				"src": "11190:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11182:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1436,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11182:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11182:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 1440,
																		"name": "cliq",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "11203:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1433,
																				"name": "WKEK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 44,
																				"src": "11167:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1432,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "11160:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11160:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2394",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2382,
																	"src": "11160:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address payable,uint256) external returns (bool)"
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11160:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1442,
															"nodeType": "ExpressionStatement",
															"src": "11160:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1449,
																				"name": "_development",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 12,
																				"src": "11252:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11244:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1447,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11244:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11244:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 1451,
																		"name": "dliq",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "11267:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1444,
																				"name": "WKEK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 44,
																				"src": "11229:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1443,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "11222:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$2394_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11222:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2394",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2382,
																	"src": "11222:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address payable,uint256) external returns (bool)"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11222:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1453,
															"nodeType": "ExpressionStatement",
															"src": "11222:50:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1574,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12006:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																		"typeString": "contract iVault_ChainB"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_iVault_ChainB_$1923",
																		"typeString": "contract iVault_ChainB"
																	}
																],
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11998:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1572,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11998:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11998:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1578,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "12021:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12013:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1576,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12013:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12013:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1580,
															"name": "Token_liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "12029:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1571,
														"name": "WithdrawToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "11984:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11984:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "EmitStatement",
												"src": "11979:66:0"
											}
										]
									},
									"functionSelector": "89476069",
									"id": 1584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawToken",
									"nameLocation": "10327:13:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1304,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10371:8:0"
									},
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10349:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "10341:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10340:15:0"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10380:0:0"
									},
									"scope": 1923,
									"src": "10318:1734:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2296
									],
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "12214:1163:0",
										"statements": [
											{
												"assignments": [
													1599
												],
												"declarations": [
													{
														"constant": false,
														"id": 1599,
														"mutability": "mutable",
														"name": "_community_",
														"nameLocation": "12232:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1781,
														"src": "12224:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1598,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12224:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1604,
												"initialValue": {
													"arguments": [
														{
															"id": 1602,
															"name": "_community",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "12254:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12246:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 1600,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12246:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12246:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12224:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1608,
																		"name": "receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "12290:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12282:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1606,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12282:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12282:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12311:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12303:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1610,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12303:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12303:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12282:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1605,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "12275:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12275:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "12275:39:0"
											},
											{
												"assignments": [
													1618
												],
												"declarations": [
													{
														"constant": false,
														"id": 1618,
														"mutability": "mutable",
														"name": "amountDrawn",
														"nameLocation": "12332:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1781,
														"src": "12324:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1620,
												"initialValue": {
													"id": 1619,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1588,
													"src": "12346:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12324:28:0"
											},
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12367:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1781,
														"src": "12362:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1621,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12362:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12377:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12362:20:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1627,
																"name": "_community",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "12404:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12396:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1625,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12396:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12396:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 1631,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1586,
																"src": "12427:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1629,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12419:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12419:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12396:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1666,
																	"name": "_development",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "12652:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12644:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12644:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12644:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1670,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "12677:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12669:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1668,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12669:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12669:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12644:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1772,
														"nodeType": "Block",
														"src": "13288:33:0",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1769,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "13302:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13302:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1771,
																"nodeType": "ExpressionStatement",
																"src": "13302:8:0"
															}
														]
													},
													"id": 1773,
													"nodeType": "IfStatement",
													"src": "12640:681:0",
													"trueBody": {
														"id": 1768,
														"nodeType": "Block",
														"src": "12686:596:0",
														"statements": [
															{
																"expression": {
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1673,
																		"name": "_community_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "12700:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1676,
																				"name": "receiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1590,
																				"src": "12722:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			],
																			"id": 1675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12714:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1674,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12714:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12714:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"src": "12700:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1679,
																"nodeType": "ExpressionStatement",
																"src": "12700:31:0"
															},
															{
																"assignments": [
																	1681
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1681,
																		"mutability": "mutable",
																		"name": "hFee",
																		"nameLocation": "12753:4:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1768,
																		"src": "12745:12:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1680,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12745:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1697,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1684,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1588,
																							"src": "12769:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1683,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "12761:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1682,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "12761:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1685,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12761:15:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"arguments": [
																						{
																							"id": 1688,
																							"name": "bFee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 98,
																							"src": "12787:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1687,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "12779:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1686,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "12779:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12779:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12761:31:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1691,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "12760:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "3130303030",
																				"id": 1694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12804:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				}
																			],
																			"id": 1693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12796:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1692,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "12796:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12796:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12760:50:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "12745:65:0"
															},
															{
																"expression": {
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1698,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "12824:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"id": 1699,
																		"name": "hFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "12834:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12824:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1701,
																"nodeType": "ExpressionStatement",
																"src": "12824:14:0"
															},
															{
																"assignments": [
																	null,
																	1703,
																	1705
																],
																"declarations": [
																	null,
																	{
																		"constant": false,
																		"id": 1703,
																		"mutability": "mutable",
																		"name": "cliq",
																		"nameLocation": "12863:4:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1768,
																		"src": "12855:12:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1702,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12855:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	},
																	{
																		"constant": false,
																		"id": 1705,
																		"mutability": "mutable",
																		"name": "dliq",
																		"nameLocation": "12877:4:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1768,
																		"src": "12869:12:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1704,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12869:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1709,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 1707,
																			"name": "hFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1681,
																			"src": "12891:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1706,
																		"name": "split",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "12885:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256,uint256,uint256)"
																		}
																	},
																	"id": 1708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12885:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256,uint256)"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "12852:44:0"
															},
															{
																"assignments": [
																	1711,
																	null
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1711,
																		"mutability": "mutable",
																		"name": "successA",
																		"nameLocation": "12916:8:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1768,
																		"src": "12911:13:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"typeName": {
																			"id": 1710,
																			"name": "bool",
																			"nodeType": "ElementaryTypeName",
																			"src": "12911:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"visibility": "internal"
																	},
																	null
																],
																"id": 1721,
																"initialValue": {
																	"arguments": [
																		{
																			"hexValue": "",
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12971:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			},
																			"value": ""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1714,
																						"name": "_community_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1599,
																						"src": "12938:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1713,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "12930:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_payable_$",
																						"typeString": "type(address payable)"
																					},
																					"typeName": {
																						"id": 1712,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "12930:8:0",
																						"stateMutability": "payable",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12930:20:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 1716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "call",
																			"nodeType": "MemberAccess",
																			"src": "12930:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"names": [
																			"value"
																		],
																		"nodeType": "FunctionCallOptions",
																		"options": [
																			{
																				"id": 1717,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1588,
																				"src": "12963:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"src": "12930:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12930:44:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bool,bytes memory)"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "12910:64:0"
															},
															{
																"assignments": [
																	1723,
																	null
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1723,
																		"mutability": "mutable",
																		"name": "successB",
																		"nameLocation": "12994:8:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1768,
																		"src": "12989:13:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"typeName": {
																			"id": 1722,
																			"name": "bool",
																			"nodeType": "ElementaryTypeName",
																			"src": "12989:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"visibility": "internal"
																	},
																	null
																],
																"id": 1733,
																"initialValue": {
																	"arguments": [
																		{
																			"hexValue": "",
																			"id": 1731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13046:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			},
																			"value": ""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1726,
																						"name": "_community",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 18,
																						"src": "13016:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					],
																					"id": 1725,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "13008:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_payable_$",
																						"typeString": "type(address payable)"
																					},
																					"typeName": {
																						"id": 1724,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "13008:8:0",
																						"stateMutability": "payable",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13008:19:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 1728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "call",
																			"nodeType": "MemberAccess",
																			"src": "13008:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																			}
																		},
																		"id": 1730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"names": [
																			"value"
																		],
																		"nodeType": "FunctionCallOptions",
																		"options": [
																			{
																				"id": 1729,
																				"name": "cliq",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1703,
																				"src": "13040:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"src": "13008:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13008:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bool,bytes memory)"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "12988:61:0"
															},
															{
																"assignments": [
																	1735,
																	null
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1735,
																		"mutability": "mutable",
																		"name": "successC",
																		"nameLocation": "13069:8:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1768,
																		"src": "13064:13:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"typeName": {
																			"id": 1734,
																			"name": "bool",
																			"nodeType": "ElementaryTypeName",
																			"src": "13064:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"visibility": "internal"
																	},
																	null
																],
																"id": 1745,
																"initialValue": {
																	"arguments": [
																		{
																			"hexValue": "",
																			"id": 1743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13123:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			},
																			"value": ""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1738,
																						"name": "_development",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 12,
																						"src": "13091:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					],
																					"id": 1737,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "13083:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_payable_$",
																						"typeString": "type(address payable)"
																					},
																					"typeName": {
																						"id": 1736,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "13083:8:0",
																						"stateMutability": "payable",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1739,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13083:21:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"id": 1740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "call",
																			"nodeType": "MemberAccess",
																			"src": "13083:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																			}
																		},
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"names": [
																			"value"
																		],
																		"nodeType": "FunctionCallOptions",
																		"options": [
																			{
																				"id": 1741,
																				"name": "dliq",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "13117:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"src": "13083:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13083:43:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bool,bytes memory)"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "13063:63:0"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1747,
																				"name": "successA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1711,
																				"src": "13148:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "74727565",
																				"id": 1748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13160:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "13148:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 1746,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "13140:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																			"typeString": "function (bool) pure"
																		}
																	},
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13140:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1751,
																"nodeType": "ExpressionStatement",
																"src": "13140:25:0"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1753,
																				"name": "successB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1723,
																				"src": "13187:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "74727565",
																				"id": 1754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13199:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "13187:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 1752,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "13179:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																			"typeString": "function (bool) pure"
																		}
																	},
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13179:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1757,
																"nodeType": "ExpressionStatement",
																"src": "13179:25:0"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1759,
																				"name": "successC",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "13226:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "74727565",
																				"id": 1760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13238:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "13226:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 1758,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "13218:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																			"typeString": "function (bool) pure"
																		}
																	},
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13218:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1763,
																"nodeType": "ExpressionStatement",
																"src": "13218:25:0"
															},
															{
																"expression": {
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1764,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "13257:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "74727565",
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13267:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"src": "13257:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1767,
																"nodeType": "ExpressionStatement",
																"src": "13257:14:0"
															}
														]
													}
												},
												"id": 1774,
												"nodeType": "IfStatement",
												"src": "12392:929:0",
												"trueBody": {
													"id": 1663,
													"nodeType": "Block",
													"src": "12436:198:0",
													"statements": [
														{
															"expression": {
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1634,
																	"name": "_community_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "12450:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1637,
																			"name": "receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1590,
																			"src": "12472:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12464:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_payable_$",
																			"typeString": "type(address payable)"
																		},
																		"typeName": {
																			"id": 1635,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12464:8:0",
																			"stateMutability": "payable",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12464:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "12450:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1640,
															"nodeType": "ExpressionStatement",
															"src": "12450:31:0"
														},
														{
															"assignments": [
																1642,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1642,
																	"mutability": "mutable",
																	"name": "safe",
																	"nameLocation": "12501:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1663,
																	"src": "12496:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1641,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "12496:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1652,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12557:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1645,
																					"name": "_community_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1599,
																					"src": "12519:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12511:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "12511:8:0",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12511:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "12511:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1648,
																			"name": "amountDrawn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1618,
																			"src": "12544:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "12511:45:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12511:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12495:65:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1654,
																			"name": "safe",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "12582:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 1655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12590:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "12582:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1653,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12574:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12574:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1658,
															"nodeType": "ExpressionStatement",
															"src": "12574:21:0"
														},
														{
															"expression": {
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1659,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "12609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12619:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "12609:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1662,
															"nodeType": "ExpressionStatement",
															"src": "12609:14:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1776,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "13338:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1775,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13330:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13330:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "13330:16:0"
											},
											{
												"expression": {
													"id": 1779,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1622,
													"src": "13363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1597,
												"id": 1780,
												"nodeType": "Return",
												"src": "13356:14:0"
											}
										]
									},
									"functionSelector": "dbba0f01",
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1594,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1593,
												"name": "authorized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1970,
												"src": "12188:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12188:10:0"
										}
									],
									"name": "transfer",
									"nameLocation": "12067:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1592,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12179:8:0"
									},
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "12093:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "12085:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12117:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "12109:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "12149:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "12133:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12133:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12075:88:0"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "12208:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12208:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12207:6:0"
									},
									"scope": 1923,
									"src": "12058:1319:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2285
									],
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "13532:321:0",
										"statements": [
											{
												"assignments": [
													1796
												],
												"declarations": [
													{
														"constant": false,
														"id": 1796,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "13547:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1854,
														"src": "13542:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1795,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13542:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1798,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13554:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13542:17:0"
											},
											{
												"body": {
													"id": 1850,
													"nodeType": "Block",
													"src": "13617:209:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1813,
																						"name": "_addresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1788,
																						"src": "13646:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 1815,
																					"indexExpression": {
																						"id": 1814,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1800,
																						"src": "13657:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "13646:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13638:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1811,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "13638:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13638:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1819,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13672:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1818,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13664:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1817,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "13664:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13664:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "13638:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1810,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967293,
																	"src": "13631:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13631:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1823,
															"nodeType": "ExpressionStatement",
															"src": "13631:44:0"
														},
														{
															"assignments": [
																1825,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1825,
																	"mutability": "mutable",
																	"name": "safe",
																	"nameLocation": "13695:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1850,
																	"src": "13690:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1824,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "13690:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1839,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13752:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1828,
																						"name": "_addresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1788,
																						"src": "13713:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 1830,
																					"indexExpression": {
																						"id": 1829,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1800,
																						"src": "13724:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "13713:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1827,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13705:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 1826,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "13705:8:0",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13705:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "13705:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"baseExpression": {
																				"id": 1833,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1785,
																				"src": "13740:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1835,
																			"indexExpression": {
																				"id": 1834,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1800,
																				"src": "13748:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13740:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "13705:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13705:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13689:66:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1841,
																			"name": "safe",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1825,
																			"src": "13777:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13785:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "13777:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1840,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "13769:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13769:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1845,
															"nodeType": "ExpressionStatement",
															"src": "13769:21:0"
														},
														{
															"expression": {
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1846,
																	"name": "sent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1796,
																	"src": "13804:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1847,
																	"name": "safe",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "13811:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "13804:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1849,
															"nodeType": "ExpressionStatement",
															"src": "13804:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1803,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1800,
														"src": "13589:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1804,
															"name": "_addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "13593:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13593:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13589:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1851,
												"initializationExpression": {
													"assignments": [
														1800
													],
													"declarations": [
														{
															"constant": false,
															"id": 1800,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "13582:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1851,
															"src": "13574:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1799,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13574:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1802,
													"initialValue": {
														"hexValue": "30",
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13586:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13574:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13612:3:0",
														"subExpression": {
															"id": 1807,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "13612:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1809,
													"nodeType": "ExpressionStatement",
													"src": "13612:3:0"
												},
												"nodeType": "ForStatement",
												"src": "13569:257:0"
											},
											{
												"expression": {
													"id": 1852,
													"name": "sent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1796,
													"src": "13842:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1794,
												"id": 1853,
												"nodeType": "Return",
												"src": "13835:11:0"
											}
										]
									},
									"functionSelector": "0cba52f9",
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1791,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1790,
												"name": "authorized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1970,
												"src": "13506:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13506:10:0"
										}
									],
									"name": "bridgeTransferOutBulk",
									"nameLocation": "13392:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "13440:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "13423:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1783,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13423:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1784,
													"nodeType": "ArrayTypeName",
													"src": "13423:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "_addresses",
												"nameLocation": "13474:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "13457:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1786,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13457:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1787,
													"nodeType": "ArrayTypeName",
													"src": "13457:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13413:77:0"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "13526:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13526:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13525:6:0"
									},
									"scope": 1923,
									"src": "13383:470:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2311
									],
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "14067:215:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1876,
																		"name": "_m",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1861,
																		"src": "14093:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14085:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1874,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "14085:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14085:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "38303030",
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14108:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8000_by_1",
																			"typeString": "int_const 8000"
																		},
																		"value": "8000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8000_by_1",
																			"typeString": "int_const 8000"
																		}
																	],
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14100:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1878,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "14100:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14100:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14085:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14077:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "14077:37:0"
											},
											{
												"expression": {
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1885,
														"name": "teamDonationMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "14124:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1886,
														"name": "_m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "14149:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14124:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1888,
												"nodeType": "ExpressionStatement",
												"src": "14124:27:0"
											},
											{
												"expression": {
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1889,
														"name": "bridgeMaxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "14161:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1890,
														"name": "bMaxAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "14179:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14161:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1892,
												"nodeType": "ExpressionStatement",
												"src": "14161:25:0"
											},
											{
												"expression": {
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1893,
														"name": "tokenFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "14196:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1894,
														"name": "tFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "14207:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14196:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "14196:15:0"
											},
											{
												"expression": {
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1897,
														"name": "tFEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "14221:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1898,
														"name": "txFEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "14228:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14221:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "14221:12:0"
											},
											{
												"expression": {
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1901,
														"name": "WKEK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "14243:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1902,
														"name": "iWKEK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "14250:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "14243:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "14243:12:0"
											},
											{
												"expression": {
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1905,
														"name": "KEK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "14265:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1906,
														"name": "iKEK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "14271:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "14265:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1908,
												"nodeType": "ExpressionStatement",
												"src": "14265:10:0"
											}
										]
									},
									"functionSelector": "79cba1c4",
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1871,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1870,
												"name": "authorized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1970,
												"src": "14056:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14056:10:0"
										}
									],
									"name": "setShards",
									"nameLocation": "13868:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1869,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "14047:8:0"
									},
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "iKEK",
												"nameLocation": "13903:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "13887:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13887:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "iWKEK",
												"nameLocation": "13933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "13917:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13917:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "_m",
												"nameLocation": "13956:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "13948:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "tFee",
												"nameLocation": "13973:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "13968:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1862,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13968:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "txFEE",
												"nameLocation": "13995:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "13987:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "bMaxAmt",
												"nameLocation": "14018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "14010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13877:154:0"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14067:0:0"
									},
									"scope": 1923,
									"src": "13859:423:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "14344:32:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1918,
															"name": "iMov",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "14364:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1917,
														"name": "authorize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "14354:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14354:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1920,
												"nodeType": "ExpressionStatement",
												"src": "14354:15:0"
											}
										]
									},
									"functionSelector": "43602017",
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1915,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1914,
												"name": "authorized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1970,
												"src": "14333:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14333:10:0"
										}
									],
									"name": "setMoV",
									"nameLocation": "14297:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "iMov",
												"nameLocation": "14320:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "14304:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14304:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14303:22:0"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14344:0:0"
									},
									"scope": 1923,
									"src": "14288:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1924,
							"src": "96:14282:0",
							"usedErrors": []
						}
					],
					"src": "37:14342:0"
				},
				"id": 0
			},
			"contracts/p2p/bridge/auth/iAuth_ChainB.sol": {
				"ast": {
					"absolutePath": "contracts/p2p/bridge/auth/iAuth_ChainB.sol",
					"exportedSymbols": {
						"IERC20": [
							2394
						],
						"IKEK_VAULT": [
							2209
						],
						"IRECEIVE_KEK": [
							2312
						],
						"IWRAP": [
							2222
						],
						"_MSG": [
							2098
						],
						"iAuth": [
							2086
						]
					},
					"id": 2087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1925,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:1"
						},
						{
							"absolutePath": "contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol",
							"file": "../interfaces/INTERFACES_ChainB.sol",
							"id": 1926,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2087,
							"sourceUnit": 2395,
							"src": "56:45:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1927,
										"name": "_MSG",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2098,
										"src": "130:4:1"
									},
									"id": 1928,
									"nodeType": "InheritanceSpecifier",
									"src": "130:4:1"
								}
							],
							"canonicalName": "iAuth",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2086,
							"linearizedBaseContracts": [
								2086,
								2098
							],
							"name": "iAuth",
							"nameLocation": "121:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1930,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "157:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "141:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1929,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "141:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1934,
									"mutability": "mutable",
									"name": "authorizations",
									"nameLocation": "202:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 2086,
									"src": "168:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1933,
										"keyType": {
											"id": 1931,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "176:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "168:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1932,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "187:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "319:84:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1946,
																	"name": "ca",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "348:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "340:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1944,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "340:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "340:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1950,
																	"name": "_community",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "361:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "353:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1948,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "353:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "353:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1954,
																	"name": "_development",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1940,
																	"src": "382:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "374:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1952,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "374:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "374:21:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1943,
														"name": "initialize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2002,
														"src": "329:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "329:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "329:67:1"
											}
										]
									},
									"id": 1959,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "ca",
												"nameLocation": "252:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "244:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "_community",
												"nameLocation": "272:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "264:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "_development",
												"nameLocation": "300:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "292:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "234:84:1"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:0:1"
									},
									"scope": 2086,
									"src": "223:180:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1969,
										"nodeType": "Block",
										"src": "439:63:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1963,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "470:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "470:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1962,
																"name": "isAuthorized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "457:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "457:26:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "449:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "449:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "449:35:1"
											},
											{
												"id": 1968,
												"nodeType": "PlaceholderStatement",
												"src": "494:1:1"
											}
										]
									},
									"id": 1970,
									"name": "authorized",
									"nameLocation": "418:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "428:2:1"
									},
									"src": "409:93:1",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2001,
										"nodeType": "Block",
										"src": "620:150:1",
										"statements": [
											{
												"expression": {
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1979,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "630:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1980,
														"name": "ca",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1972,
														"src": "638:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "630:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "630:10:1"
											},
											{
												"expression": {
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1983,
															"name": "authorizations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "650:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1985,
														"indexExpression": {
															"id": 1984,
															"name": "ca",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "665:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "650:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "671:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "650:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "650:25:1"
											},
											{
												"expression": {
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1989,
															"name": "authorizations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "685:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1991,
														"indexExpression": {
															"id": 1990,
															"name": "_community",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "700:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "685:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "714:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "685:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1994,
												"nodeType": "ExpressionStatement",
												"src": "685:33:1"
											},
											{
												"expression": {
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1995,
															"name": "authorizations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "728:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1997,
														"indexExpression": {
															"id": 1996,
															"name": "_development",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "743:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "728:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "759:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "728:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "728:35:1"
											}
										]
									},
									"id": 2002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "517:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "ca",
												"nameLocation": "545:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "537:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "_community",
												"nameLocation": "565:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "557:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "_development",
												"nameLocation": "593:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "585:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "527:84:1"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "620:0:1"
									},
									"scope": 2086,
									"src": "508:262:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "834:43:1",
										"statements": [
											{
												"expression": {
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2009,
															"name": "authorizations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "844:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2011,
														"indexExpression": {
															"id": 2010,
															"name": "adr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2004,
															"src": "859:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "844:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "866:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "844:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2014,
												"nodeType": "ExpressionStatement",
												"src": "844:26:1"
											}
										]
									},
									"functionSelector": "b6a5d7de",
									"id": 2016,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2007,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2006,
												"name": "authorized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1970,
												"src": "823:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "823:10:1"
										}
									],
									"name": "authorize",
									"nameLocation": "785:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "803:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "795:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:13:1"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "834:0:1"
									},
									"scope": 2086,
									"src": "776:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "943:44:1",
										"statements": [
											{
												"expression": {
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2023,
															"name": "authorizations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "953:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2025,
														"indexExpression": {
															"id": 2024,
															"name": "adr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "968:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "953:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "975:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "953:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "953:27:1"
											}
										]
									},
									"functionSelector": "f0b37c04",
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2021,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2020,
												"name": "authorized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1970,
												"src": "932:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "932:10:1"
										}
									],
									"name": "unauthorize",
									"nameLocation": "892:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "912:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "904:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:13:1"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "943:0:1"
									},
									"scope": 2086,
									"src": "883:104:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "1057:43:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2037,
														"name": "authorizations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "1074:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2039,
													"indexExpression": {
														"id": 2038,
														"name": "adr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2032,
														"src": "1089:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1074:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2036,
												"id": 2040,
												"nodeType": "Return",
												"src": "1067:26:1"
											}
										]
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAuthorized",
									"nameLocation": "1002:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "1023:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "1015:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:13:1"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "1051:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1051:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:6:1"
									},
									"scope": 2086,
									"src": "993:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "1248:216:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2054,
																"name": "fromAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "1266:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2055,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2097,
																	"src": "1278:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1278:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1266:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2053,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1258:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1258:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2059,
												"nodeType": "ExpressionStatement",
												"src": "1258:33:1"
											},
											{
												"assignments": [
													2061
												],
												"declarations": [
													{
														"constant": false,
														"id": 2061,
														"mutability": "mutable",
														"name": "transferred",
														"nameLocation": "1306:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 2084,
														"src": "1301:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2060,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1301:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2063,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1320:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1301:24:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2067,
																	"name": "toAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "1353:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1345:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2065,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1345:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1345:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2064,
														"name": "authorize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "1335:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1335:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2070,
												"nodeType": "ExpressionStatement",
												"src": "1335:26:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2074,
																	"name": "fromAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2044,
																	"src": "1391:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1383:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2072,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1383:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1383:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2071,
														"name": "unauthorize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2030,
														"src": "1371:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1371:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "1371:30:1"
											},
											{
												"expression": {
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2078,
														"name": "transferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "1411:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1425:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1411:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "1411:18:1"
											},
											{
												"expression": {
													"id": 2082,
													"name": "transferred",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2061,
													"src": "1446:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2052,
												"id": 2083,
												"nodeType": "Return",
												"src": "1439:18:1"
											}
										]
									},
									"functionSelector": "8cd0acc3",
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2049,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2048,
												"name": "authorized",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1970,
												"src": "1210:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1210:10:1"
										}
									],
									"name": "transferAuthorization",
									"nameLocation": "1115:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "fromAddr",
												"nameLocation": "1145:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "1137:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1137:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "toAddr",
												"nameLocation": "1163:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "1155:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1136:34:1"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "1238:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2050,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1238:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:6:1"
									},
									"scope": 2086,
									"src": "1106:358:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2087,
							"src": "103:1363:1",
							"usedErrors": []
						}
					],
					"src": "31:1436:1"
				},
				"id": 1
			},
			"contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol": {
				"ast": {
					"absolutePath": "contracts/p2p/bridge/interfaces/INTERFACES_ChainB.sol",
					"exportedSymbols": {
						"IERC20": [
							2394
						],
						"IKEK_VAULT": [
							2209
						],
						"IRECEIVE_KEK": [
							2312
						],
						"IWRAP": [
							2222
						],
						"_MSG": [
							2098
						]
					},
					"id": 2395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2088,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "_MSG",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2098,
							"linearizedBaseContracts": [
								2098
							],
							"name": "_MSG",
							"nameLocation": "74:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2096,
										"nodeType": "Block",
										"src": "147:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2093,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "164:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "164:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2092,
												"id": 2095,
												"nodeType": "Return",
												"src": "157:17:2"
											}
										]
									},
									"id": 2097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "94:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "104:2:2"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "138:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:9:2"
									},
									"scope": 2098,
									"src": "85:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2395,
							"src": "56:127:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IKEK_VAULT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2209,
							"linearizedBaseContracts": [
								2209
							],
							"name": "IKEK_VAULT",
							"nameLocation": "195:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3ccfd60b",
									"id": 2101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "221:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "229:2:2"
									},
									"returnParameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:0:2"
									},
									"scope": 2209,
									"src": "212:29:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89476069",
									"id": 2106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawToken",
									"nameLocation": "256:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "278:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "270:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "269:15:2"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "293:0:2"
									},
									"scope": 2209,
									"src": "247:47:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6dad824",
									"id": 2111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFrom",
									"nameLocation": "309:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "330:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "322:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:16:2"
									},
									"returnParameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:0:2"
									},
									"scope": 2209,
									"src": "300:47:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "72d9a587",
									"id": 2116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVIP",
									"nameLocation": "362:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "368:2:2"
									},
									"returnParameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "389:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:17:2"
									},
									"scope": 2209,
									"src": "353:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f2a04e98",
									"id": 2123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "walletOfIndex",
									"nameLocation": "421:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "435:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "434:12:2"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "470:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:9:2"
									},
									"scope": 2209,
									"src": "412:67:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3ce7f411",
									"id": 2130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawTokenFrom",
									"nameLocation": "494:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "535:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "527:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:31:2"
									},
									"returnParameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:0:2"
									},
									"scope": 2209,
									"src": "485:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9cc7f708",
									"id": 2137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "567:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "585:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "577:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:18:2"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "618:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:9:2"
									},
									"scope": 2209,
									"src": "558:69:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "975d9205",
									"id": 2144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "indexOfWallet",
									"nameLocation": "642:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "664:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "656:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:16:2"
									},
									"returnParameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "695:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:9:2"
									},
									"scope": 2209,
									"src": "633:71:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8fd89d82",
									"id": 2159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setVIP",
									"nameLocation": "719:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "iWKEK",
												"nameLocation": "751:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "735:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "735:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "iKEK",
												"nameLocation": "782:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "766:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "iNum",
												"nameLocation": "804:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "796:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "tokenFee",
												"nameLocation": "823:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "818:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "818:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "tFee",
												"nameLocation": "849:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "841:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "bMaxAmt",
												"nameLocation": "871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:159:2"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:0:2"
									},
									"scope": 2209,
									"src": "710:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "284fce07",
									"id": 2166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deployVaults",
									"nameLocation": "995:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "1016:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "1008:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1007:16:2"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "1074:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:17:2"
									},
									"scope": 2209,
									"src": "986:105:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a12b0b27",
									"id": 2175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchVaultRange",
									"nameLocation": "1106:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1139:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "1131:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "fromWallet",
												"nameLocation": "1162:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "1154:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "toWallet",
												"nameLocation": "1190:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "1182:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1121:83:2"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1213:0:2"
									},
									"scope": 2209,
									"src": "1097:117:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "865ed330",
									"id": 2184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfToken",
									"nameLocation": "1229:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1252:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "1244:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1270:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "1262:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:33:2"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "1324:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:9:2"
									},
									"scope": 2209,
									"src": "1220:113:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fcbb48b2",
									"id": 2197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfVaults",
									"nameLocation": "1348:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1381:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "1373:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1404:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "1396:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1427:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "1419:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:73:2"
									},
									"returnParameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "1460:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "1469:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:18:2"
									},
									"scope": 2209,
									"src": "1339:139:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e1b405fe",
									"id": 2208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFundsFromVaultTo",
									"nameLocation": "1493:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1535:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "1527:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1556:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "1548:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1588:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "1572:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1517:85:2"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "1621:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1621:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:6:2"
									},
									"scope": 2209,
									"src": "1484:143:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2395,
							"src": "185:1444:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWRAP",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2222,
							"linearizedBaseContracts": [
								2222
							],
							"name": "IWRAP",
							"nameLocation": "1641:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 2212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1662:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1669:2:2"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1688:0:2"
									},
									"scope": 2222,
									"src": "1653:36:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1704:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "1729:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1713:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1713:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1742:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1734:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1712:37:2"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "1784:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1784:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1783:6:2"
									},
									"scope": 2222,
									"src": "1695:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2395,
							"src": "1631:161:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRECEIVE_KEK",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2312,
							"linearizedBaseContracts": [
								2312
							],
							"name": "IRECEIVE_KEK",
							"nameLocation": "1804:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2230,
									"name": "Transfer",
									"nameLocation": "1829:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1854:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "1838:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1876:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "1860:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1888:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "1880:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1880:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1837:57:2"
									},
									"src": "1823:72:2"
								},
								{
									"functionSelector": "3ccfd60b",
									"id": 2233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1910:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1918:2:2"
									},
									"returnParameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:2"
									},
									"scope": 2312,
									"src": "1901:29:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4b4138c9",
									"id": 2236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenizeWETH",
									"nameLocation": "1945:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1957:2:2"
									},
									"returnParameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:0:2"
									},
									"scope": 2312,
									"src": "1936:33:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89476069",
									"id": 2241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawToken",
									"nameLocation": "1984:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2006:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "1998:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1998:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1997:15:2"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2021:0:2"
									},
									"scope": 2312,
									"src": "1975:47:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a40785c",
									"id": 2248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeKEK",
									"nameLocation": "2037:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "amountKEK",
												"nameLocation": "2055:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "2047:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2047:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2046:19:2"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "2092:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2092:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:6:2"
									},
									"scope": 2312,
									"src": "2028:70:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f8ff9ac9",
									"id": 2255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeKEK_bulk",
									"nameLocation": "2113:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "amountKEK",
												"nameLocation": "2136:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "2128:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2127:19:2"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "2173:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2172:6:2"
									},
									"scope": 2312,
									"src": "2104:75:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "99049f71",
									"id": 2274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vaultDebt",
									"nameLocation": "2281:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "vault",
												"nameLocation": "2299:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2291:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:15:2"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2366:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2387:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2408:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2429:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2450:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2471:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2492:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:157:2"
									},
									"scope": 2312,
									"src": "2272:238:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0cba52f9",
									"id": 2285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeTransferOutBulk",
									"nameLocation": "2525:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2573:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "2556:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2275,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2556:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2276,
													"nodeType": "ArrayTypeName",
													"src": "2556:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "_addresses",
												"nameLocation": "2607:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "2590:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2278,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2590:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2279,
													"nodeType": "ArrayTypeName",
													"src": "2590:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2546:77:2"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "2650:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:2"
									},
									"scope": 2312,
									"src": "2516:140:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dbba0f01",
									"id": 2296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2671:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2697:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "2689:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "eth",
												"nameLocation": "2721:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "2713:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2750:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "2734:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2734:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2679:85:2"
									},
									"returnParameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2788:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "2783:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2783:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2782:14:2"
									},
									"scope": 2312,
									"src": "2662:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cba1c4",
									"id": 2311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setShards",
									"nameLocation": "2812:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "iKEK",
												"nameLocation": "2847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "2831:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2831:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "iWKEK",
												"nameLocation": "2877:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "2861:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "_m",
												"nameLocation": "2900:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "2892:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "tFee",
												"nameLocation": "2917:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "2912:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2303,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2912:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "txFEE",
												"nameLocation": "2939:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "2931:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "bMaxAmt",
												"nameLocation": "2962:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "2954:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2954:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:154:2"
									},
									"returnParameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2984:0:2"
									},
									"scope": 2312,
									"src": "2803:182:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2395,
							"src": "1794:1313:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2394,
							"linearizedBaseContracts": [
								2394
							],
							"name": "IERC20",
							"nameLocation": "3119:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2320,
									"name": "Approval",
									"nameLocation": "3138:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3172:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "3156:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3156:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "3187:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3228:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "3220:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3146:93:2"
									},
									"src": "3132:108:2"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2328,
									"name": "Transfer",
									"nameLocation": "3251:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3276:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "3260:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3260:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2324,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3298:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "3282:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3282:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3310:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2328,
												"src": "3302:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3302:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3259:57:2"
									},
									"src": "3245:72:2"
								},
								{
									"functionSelector": "06fdde03",
									"id": 2333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3332:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3336:2:2"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "3362:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2330,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3362:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3361:15:2"
									},
									"scope": 2394,
									"src": "3323:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 2338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3392:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3398:2:2"
									},
									"returnParameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "3424:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3424:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3423:15:2"
									},
									"scope": 2394,
									"src": "3383:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 2343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3454:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3462:2:2"
									},
									"returnParameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "3488:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2340,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:7:2"
									},
									"scope": 2394,
									"src": "3445:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 2348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3510:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3521:2:2"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "3547:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3546:9:2"
									},
									"scope": 2394,
									"src": "3501:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 2355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3571:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3589:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "3581:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3580:15:2"
									},
									"returnParameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "3619:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3619:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3618:9:2"
									},
									"scope": 2394,
									"src": "3562:66:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 2364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3643:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3661:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3653:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3652:32:2"
									},
									"returnParameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3732:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3731:9:2"
									},
									"scope": 2394,
									"src": "3634:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 2373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3756:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3772:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "3764:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3789:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "3781:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3781:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:32:2"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "3814:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3814:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3813:6:2"
									},
									"scope": 2394,
									"src": "3747:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3835:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3860:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "3844:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3844:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3872:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "3864:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3843:35:2"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "3913:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3912:6:2"
									},
									"scope": 2394,
									"src": "3826:93:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 2393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3934:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3972:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "3956:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3956:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4002:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "3986:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3986:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4022:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "4014:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4014:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3946:87:2"
									},
									"returnParameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 2394,
									"src": "3925:133:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2395,
							"src": "3109:951:2",
							"usedErrors": []
						}
					],
					"src": "31:4030:2"
				},
				"id": 2
			}
		}
	}
}