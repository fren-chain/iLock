{"version":3,"sources":["pages/Bridge.js","api.js","components/Loader.js","../node_modules/@mui/material/Stack/Stack.js","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js"],"names":["connect","state","statistics","props","React","useState","activeStep","setActiveStep","open","setOpen","lockerListEnabled","snackbar","setSnackbar","loaderText","setLoaderText","network","setNetwork","modalTitle","setModalTitle","tokenContract","setTokenContract","holder","setHolder","modalDes","setModalDes","subMethod","setSubMethod","lockAmount","setLockAmount","tokenDecimals","setTokenDecimals","setTokenSymbol","setTokenName","etherBalance","setEtherBalance","setTokenBalance","setTokenAllowance","undefined","withdrawDate","setWithdrawDate","dateUseful","setDateUseful","addressDemand","setAddressDemand","isAllowed","setIsAllowed","setLockAmountMax","theme","useTheme","classes","useStyles","pools","mobileClasses","mobile","dashboardClasses","dashboard","isMobile","useMediaQuery","token","useSelector","userBalance","tokenData","data","tokenLists","test_data","console","log","dispatch","useDispatch","useWeb3React","account","connector","tokenAddress","values","setValues","selectToken","a","checkEtherBalance","provider","getEtherBalance","then","ethereumBalance","fetchEtherBalance","handleNext","window","ethereum","currentNetworkData","networkData","filter","each","name","request","method","params","chainId","chainData","handleOpen","prevActiveStep","params_network_add","rpcUrls","rpc_","chainName","network_","nativeCurrency","network_symbols","decimals","network_decimals","symbol","blockExplorerUrls","explorer_","iconUrls","icons_","code","getProvider","catch","error","useEffect","alterLoaderText","getData","newData","type","TOKENLISTS","payload","e","interval","setInterval","clearInterval","toggleDrawer","getTokenBalance","tokenBalance","USERBALANCE","getERC20allowance","lockerAddress","allowanceAmount","parseFloat","handleAllowance","getERC20balance","handleChange","event","target","value","length","contract_address","getERC20Metadata","CHAINDATA","find","item","chain","contractData","TOKENDATA","JSON","parse","toFixed","toString","eb","handleClose","handleHolder","depositToken","tokenAmount","isEth","unlockDate","allSet","depositAmount","depositNetwork","depositHolder","depositCreator","w3","W3","eth","getBlock","block","gasLimit","deposit","results","tokenId","showLockup","handleNativeTokenMismatch","approveToken","approve","status","lockId","history","push","toLowerCase","networks_data","Row","nextUnlock","index","row","lockedTokenAmount","lockedLiquidity","currentTime","Date","now","map","timestamp","isWithdrawn","isLiquidity","amount","Math","pow","sx","borderBottom","component","scope","style","cursor","onClick","address","text","onCopy","title","align","toDateString","variant","color","width","className","root","maxWidth","paddingLeft","paddingRight","info","container","direction","justifyContent","alignItems","marginTop","xs","sm","md","display","textAlign","href","underline","button","cardHeader","src","defaultValue","axis","onChangeIndex","step","networkSelector","padding","border","borderRadius","networkImage","url","alt","networkTitle","networkDes","subtitle","height","backgroundColor","subData","subTitle","fillCircle","emptyCircle","m","htmlFor","id","onChange","endAdornment","position","document","getElementById","onMouseDown","preventDefault","edge","label","margin","textLeft","tokenImage","tokenTitle","textRight","balanceContainer","InputLabelProps","shrink","inputprops","min","max","InputProps","handleLocker","marginBottom","fontSize","_amount","dateAdapter","AdapterDateFns","renderInput","datetimepicker","currentDate","handleDate","disabled","mobileStepper","steps","nextButton","size","maxSteps","backButton","Paper","onClose","top","left","transform","bgcolor","boxShadow","p","mt","autoHideDuration","message","_chain","_tokenAddress","web3","Web3","Contract","erc20Abi","contract","methods","call","balanceOf","result","getTokenMetadata","Loader","isLoading","base","loaderBottomText","setLoaderBottomText","l_t","lb_t","Fragment","spacing","dangerouslySetInnerHTML","__html","_excluded","joinChildren","children","separator","childrenArray","toArray","Boolean","reduce","output","child","key","StackRoot","styled","slot","overridesResolver","styles","ownerState","_extends","handleBreakpoints","propValue","flexDirection","transformer","createUnarySpacing","Object","keys","breakpoints","acc","breakpoint","directionValues","resolveBreakpointValues","spacingValues","deepmerge","column","getValue","Stack","inProps","ref","themeProps","useThemeProps","extendSxProp","divider","other","_objectWithoutPropertiesLoose","_jsx","as","getUnit","input","String","match","toUnitless","getSkeletonUtilityClass","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","animation","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","shape","radiusValue","alpha","palette","primary","mode","transformOrigin","round","content","visibility","css","action","hover","Skeleton","slots","composeClasses","useUtilityClasses","clsx"],"mappings":"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","file":"static/js/15.06a2a09d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n// ** Import Material UI Components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Modal from '@mui/material/Modal';\r\nimport { RadioGroup } from \"@mui/material\";\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Search from '@mui/icons-material/Search';\r\nimport { Snackbar } from \"@mui/material\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { TextField, Table, TableHead, TableBody, TableRow, TableCell, TableContainer, Paper, Box, IconButton } from \"@mui/material\"; {\r\n    /*\r\n        // import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n        // import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowDown';\r\n    */\r\n}\r\nimport Link from \"@mui/material/Link\";\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport { Tooltip } from \"@mui/material\";\r\nimport useStyles from \"../assets/styles\";\r\nimport { TOKENDATA, USERBALANCE, TOKENLISTS } from \"../redux/constants\";\r\nimport { CHAINDATA, networks_data, explorer_, rpc_, icons_, network_, lockerAddress, network_symbols, network_decimals, network_hex_to_dec } from \"../constants\";\r\nimport { getTokenMetadata, getERC20Metadata } from \"../api\";\r\nimport { toggleDrawer } from '../components/Header';\r\nimport Loader from '../components/Loader';\r\nimport { alterLoaderText } from '../components/Loader';\r\nimport { deposit, approve, allowance, getTokenBalance, getERC20balance, getERC20allowance, getData, explorer, updateProfile, getEtherBalance, w3 } from \"../web3\"\r\n\r\nconst Bridge = (props) => {\r\n\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [lockerListEnabled, setLockerListEnabled] = useState(false);\r\n    const [snackbar, setSnackbar] = React.useState(false);\r\n    const [loaderText, setLoaderText] = React.useState(\"\");\r\n    const [network, setNetwork] = useState(\"Frenchain\");\r\n    const [modalTitle, setModalTitle] = useState(\"\");\r\n    const [tokenContract, setTokenContract] = useState(\"\");\r\n    const [holder, setHolder] = useState(\"\");\r\n    const [modalDes, setModalDes] = useState(\"\");\r\n    const [subMethod, setSubMethod] = useState(\"Project Tokens\");\r\n    const [lockAmount, setLockAmount] = useState(0);\r\n    const [tokenDecimals, setTokenDecimals] = useState(0);\r\n    const [tokenSymbol, setTokenSymbol] = useState(\"\");\r\n    const [tokenName, setTokenName] = useState(\"\");\r\n    const [etherBalance, setEtherBalance] = useState(0);\r\n    const [tokenBalance, setTokenBalance] = useState(0);\r\n    const [tokenAllowance, setTokenAllowance] = useState(0);\r\n    const [withdrawDate, setWithdrawDate] = useState(undefined);\r\n    const [dateUseful, setDateUseful] = useState(false);\r\n    const [addressDemand, setAddressDemand] = useState(false);\r\n    const [isAllowed, setIsAllowed] = useState(0); {\r\n        /*\r\n                // 0: checking, 1: not allowed, 2: allowed\r\n            */\r\n    }\r\n    const [lockAmountMax, setLockAmountMax] = useState(false);\r\n    const maxSteps = 4;\r\n    const theme = useTheme();\r\n    const classes = useStyles.pools();\r\n    const mobileClasses = useStyles.mobile();\r\n    const dashboardClasses = useStyles.dashboard();\r\n    const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n    const userBalance = useSelector(state => state.userBalance);\r\n    const token = useSelector(state => state.tokenData);\r\n    const data = useSelector(state => state.tokenLists);\r\n    const test_data = useSelector(state => state);\r\n    console.log(\"test_data: \", test_data, test_data.tokenData);\r\n    const dispatch = useDispatch();\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #fff',\r\n        borderRadius: '10px',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    const { account, connector } = useWeb3React();\r\n\r\n    const [values, setValues] = React.useState({\r\n        tokenAddress: \"\",\r\n    });\r\n\r\n    const selectToken = async () => {\r\n        console.log(\"activeStep: \",activeStep);\r\n    };\r\n    const checkAllowance = async (token, account, network) => {\r\n        allowance(token, account, network).then(results => {\r\n            setTokenAllowance(results);\r\n            console.log(\"allowance: \", results, tokenAllowance);\r\n            return results;\r\n        });\r\n    };\r\n    const checkEtherBalance = async (provider, account) => {\r\n        getEtherBalance(provider, account).then(async (ethereumBalance) => {\r\n            console.log(\"ethereumBalance: \", ethereumBalance);\r\n            fetchEtherBalance(ethereumBalance);\r\n        });\r\n    };\r\n    const handleNext = async () => {\r\n        if (account) {\r\n            const provider = window.ethereum;\r\n            checkEtherBalance(provider, account);\r\n            const currentNetworkData = networkData.filter((each) => each.name === network);\r\n            try {\r\n                await provider.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: currentNetworkData[0].chainData.chainId }],\r\n                });\r\n                console.log(\"You have successfully switched to \", network)\r\n                if (activeStep == 0) {\r\n                    if (account === undefined) {\r\n                        setModalTitle(\"Please connect Wallet\");\r\n                        setModalDes(`Before you can create a lock on ${network}, you must connect your wallet to ${network} network on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                        handleOpen();\r\n                    } else {\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    }\r\n                } else if (activeStep >= 2) {\r\n                    if (addressDemand && tokenContract == undefined || addressDemand && tokenContract == \"\") {\r\n                        setModalTitle(\"Please select Token\");\r\n                        setModalDes(`Before you can create a lock on ${network}, you must select token on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                        handleOpen();\r\n                    } else {\r\n                        console.log(activeStep);\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    }\r\n                } else {\r\n                        console.log(\"activeStep: \",activeStep);\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                }\r\n            } catch (switchError) {\r\n                {\r\n                    /*\r\n                    // This error code indicates that the chain has not been added to MetaMask.\r\n                    */\r\n                }\r\n                const params_network_add = {\r\n                    chainId: currentNetworkData[0].chainData.chainId,\r\n                    rpcUrls: [rpc_[currentNetworkData[0].chainData.chainId]],\r\n                    chainName: network_[currentNetworkData[0].chainData.chainId],\r\n                    nativeCurrency: { name: network_symbols[currentNetworkData[0].chainData.chainId], decimals: network_decimals[currentNetworkData[0].chainData.chainId], symbol: network_symbols[currentNetworkData[0].chainData.chainId] },\r\n                    blockExplorerUrls: [explorer_[currentNetworkData[0].chainData.chainId]],\r\n                    iconUrls: [icons_[currentNetworkData[0].chainData.chainId]]\r\n                };\r\n                console.log(\"params_network_add: \", switchError.code, params_network_add);\r\n                if (switchError.code === 4902) {\r\n                    console.log(\"This network is not available in your metamask, please add it\");\r\n                    let provider = await connector.getProvider();\r\n                    provider.request({\r\n                        method: 'wallet_addEthereumChain',\r\n                        params: [{ ...params_network_add }]\r\n                    }).catch((error) => {\r\n                        console.log(\"provider_err: \", error);\r\n                    });\r\n                } else if (switchError.code === 4001) {\r\n                    console.log(\"Switch Request has rejected\");\r\n                } else if (switchError.code === 4200) {\r\n                    console.log(\"You have succefully switched to \", network)\r\n                    if (activeStep == 0) {\r\n                        if (account === undefined) {\r\n                            setModalTitle(\"Please connect Wallet\");\r\n                            setModalDes(`Before you can create a lock on ${network}, you must connect your wallet to ${network} network on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                            handleOpen();\r\n                        } else {\r\n                            setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                        }\r\n                    } else if (activeStep == 2) {\r\n                        if (addressDemand && tokenContract == undefined || addressDemand && tokenContract == \"\") {\r\n                            setModalTitle(\"Please select Token\");\r\n                            setModalDes(`Before you can create a lock on ${network}, you must select token on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                            handleOpen();\r\n                        } else {\r\n                            console.log(activeStep);\r\n                            setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                        }\r\n                    } else {\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    };\r\n                };\r\n            };\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoaderText(\" ... \");\r\n        alterLoaderText(loaderText);\r\n        if (!network) return;\r\n        if (!account) {\r\n            toggleDrawer();\r\n            return;\r\n        };\r\n        try {\r\n            getData(account, network).then(newData => {\r\n                if (!newData) return;\r\n                try {\r\n                    dispatch({ type: TOKENLISTS, payload: newData });\r\n                } catch (e) {\r\n                    console.log(e);\r\n                };\r\n            });\r\n            const interval = setInterval(() => {\r\n                getData(account, network).then(newData => {\r\n                    try {\r\n                        if (!newData) return;\r\n                        dispatch({ type: TOKENLISTS, payload: newData });\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    };\r\n                });\r\n            }, 5000);\r\n            return () => clearInterval(interval);\r\n        } catch (e) {\r\n            console.log(e);\r\n        };\r\n    }, [account, network]);\r\n\r\n    useEffect(async () => {\r\n        if (!account) {\r\n            setIsAllowed(0);\r\n            alterLoaderText(\"Connect Wallet\");\r\n            return;\r\n        } else if (account && !network && !tokenContract) {\r\n            setIsAllowed(0);\r\n            alterLoaderText(\"Select Network\");\r\n            return;\r\n        } else if (account && network && !tokenContract) {\r\n            setIsAllowed(0);\r\n            alterLoaderText(\"Make a selection\");\r\n            return;\r\n        } else {\r\n            try {\r\n                const tokenBalance = await getTokenBalance(tokenContract, account, network);\r\n                console.log(\"tokenBalance: \", tokenBalance);\r\n                dispatch({ type: USERBALANCE, payload: tokenBalance });\r\n            } catch (e) {\r\n                console.log(e);\r\n            } finally {\r\n                if(!lockAmount) { \r\n                    //\r\n                } else {                    \r\n                    try {\r\n                        let provider = await connector.getProvider();\r\n                        const allowanceAmount = await getERC20allowance(provider, tokenContract, account, lockerAddress[network], network);\r\n                        console.log(\"allowanceAmount/lockAmount: \", parseFloat(allowanceAmount),lockAmount*10**tokenDecimals,parseFloat(allowanceAmount) >= parseFloat(lockAmount*10**tokenDecimals));\r\n                        setTokenAllowance(allowanceAmount);\r\n                        if (parseFloat(allowanceAmount) < parseFloat(lockAmount*10**tokenDecimals)) {\r\n                            setIsAllowed(1);\r\n                        } else {\r\n                            console.log(\"allowed: \", allowanceAmount);\r\n                            setIsAllowed(2);\r\n                        };\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    };\r\n                };\r\n            };\r\n        };\r\n    }, [account, tokenContract, connector, network]);\r\n\r\n    const handleAllowance = async (e) => {\r\n        if (!account || !tokenContract) return;\r\n        setIsAllowed(0);\r\n        try {\r\n            let provider = await connector.getProvider();\r\n            const tokenBalance = await getERC20balance(provider, tokenContract, account, network);\r\n            console.log(\"tokenBalance: \", tokenBalance);\r\n            dispatch({ type: USERBALANCE, payload: tokenBalance });\r\n        } catch (e) {\r\n            console.log(e);\r\n        } finally {\r\n            if(!lockAmount) { \r\n                //\r\n            } else {  \r\n                try {\r\n                    let provider = await connector.getProvider();\r\n                    const allowanceAmount = await getERC20allowance(provider, tokenContract, account, lockerAddress[network], network);\r\n                    console.log(\"allowanceAmount/lockAmount: \", parseFloat(allowanceAmount),lockAmount*10**tokenDecimals,parseFloat(allowanceAmount) >= parseFloat(lockAmount*10**tokenDecimals));\r\n                    setTokenAllowance(allowanceAmount);\r\n                    if (parseFloat(allowanceAmount) < parseFloat(lockAmount*10**tokenDecimals)) {\r\n                        setIsAllowed(1);\r\n                    } else {\r\n                        setIsAllowed(2);\r\n                    };\r\n                } catch (e) {\r\n                    console.log(e);\r\n                };\r\n            };\r\n        };\r\n    };\r\n    const handleChange = async (event) => {\r\n        setValues({ tokenAddress: event.target.value });\r\n        if (event.target.value.length == 42) {\r\n            const contract_address = event.target.value;\r\n            let provider = await connector.getProvider();\r\n            try {\r\n                const contractData = await getERC20Metadata(provider, CHAINDATA.find((item) => item.name == network).chain, contract_address, account);\r\n                let tokenData = contractData;\r\n                dispatch({\r\n                    type: TOKENDATA,\r\n                    payload: tokenData[0]\r\n                });\r\n                setTokenDecimals(parseFloat(JSON.parse(contractData[0][\"decimals\"])).toFixed(0));\r\n                setTokenBalance(parseFloat(JSON.parse(contractData[0][\"balanceOf\"])).toFixed(2));\r\n                setTokenSymbol(contractData[0][\"symbol\"].toString());\r\n                setTokenName(contractData[0][\"name\"].toString());\r\n            } catch (e) {\r\n                //\r\n                console.log(\"e: \",e);\r\n            };\r\n        } else {\r\n            //\r\n        };\r\n    };\r\n\r\n    const handleClickSearch = () => {\r\n        setValues({\r\n            ...values,\r\n            showPassword: !values.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    const fetchEtherBalance = (eb) => {\r\n        setEtherBalance(eb);\r\n    };\r\n\r\n    const selectLockAmountMax = () => {\r\n        const _amount = addressDemand ? (test_data.userBalance / Math.pow(10, tokenDecimals)).toFixed(2) : etherBalance;\r\n        setLockAmount(_amount);\r\n        console.log(\"_amount: \", lockAmount);\r\n        setLockAmountMax(true);\r\n    }\r\n    function handleLocker(e) {\r\n        setLockAmount(parseFloat(e.target.value));\r\n        setLockAmountMax(false);\r\n        handleAllowance(e);\r\n        console.log(\"_amount: \", lockAmount);\r\n    }\r\n    const handleLockAmount = (e) => {\r\n        console.log(\"e.target.value: \", e.target.value);\r\n        handleLocker(e);\r\n    };\r\n    const handleTokenDecimals = (e) => {\r\n        console.log(\"balance: \", test_data.userBalance / Math.pow(10, e.target.value));\r\n        setTokenDecimals(parseFloat(e.target.value).toFixed(0));\r\n    };\r\n    const handleLockToken = (e) => {\r\n        setTokenContract(document.getElementById(\"outlined-adornment-password\").value);\r\n    };\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const handleSnackbarClose = () => setSnackbar(false);\r\n    const handleSnackbarOpen = () => setSnackbar(true);\r\n    const handleHolder = async (e) => {\r\n        setHolder(e.target.value);\r\n        console.log(\"holder: \", holder);\r\n    };\r\n\r\n    const handleDate = (value) => {\r\n        const currentDate = new Date();\r\n        console.log(\"DATETIME: \", value, value > currentDate)\r\n        if (value > currentDate) {\r\n            setDateUseful(true);\r\n            setWithdrawDate(value);\r\n        } else {\r\n            setDateUseful(false);\r\n        };\r\n    };\r\n\r\n    const depositToken = async (e) => {\r\n        try {\r\n            let tokenAmount;\r\n            tokenAmount = lockAmount;\r\n            let isEth = false;\r\n            let unlockDate = withdrawDate;\r\n            if (addressDemand == true) {\r\n                isEth = false;\r\n            } else {\r\n                isEth = true;\r\n            };\r\n            if (holder == undefined) {\r\n                console.log(\"holder unset! Defaulting \", holder);\r\n                setHolder(account);\r\n            };\r\n            console.log(\"depositToken: \", e.target.value, addressDemand, tokenAmount, unlockDate, account, holder, network);\r\n            let unset = true;\r\n            let allSet = false;\r\n            let gasLimit;\r\n            let depositAmount;\r\n            let depositNetwork;\r\n            let depositHolder;\r\n            let depositCreator;\r\n            if (unset) {\r\n                depositAmount = tokenAmount;\r\n                depositNetwork = network;\r\n                depositHolder = holder;\r\n                depositCreator = account;\r\n                unset = false;\r\n                allSet = true;\r\n            };\r\n            if (allSet) {\r\n                let provider = await connector.getProvider();\r\n                w3(provider, network).then(async (W3) => {\r\n                    let block = await W3.eth.getBlock(\"latest\");\r\n                    console.log(\"(w3) block: \", block);\r\n                    console.log(\"(w3) gasLimit: \", block.gasLimit);\r\n                    gasLimit = block.gasLimit;\r\n                    deposit(provider, isEth, tokenContract, depositAmount, unlockDate, depositCreator, depositHolder, depositNetwork, gasLimit).then(async(results) => {\r\n                    const newData = await getData(account, network);\r\n                    dispatch({ type: TOKENLISTS, payload: newData });\r\n                    setWithdrawDate(undefined);\r\n                    setDateUseful(false);\r\n                    try {\r\n                        console.log(\"events: \",parseFloat(results[\"events\"][\"Transfer\"][\"returnValues\"].tokenId));\r\n                        showLockup(network,parseFloat(results[\"events\"][\"Transfer\"][\"returnValues\"].tokenId));\r\n                    } catch(e) {\r\n                        dispatch({\r\n                            type: TOKENDATA,\r\n                            payload: {}\r\n                        })\r\n                        setActiveStep(0);\r\n                        console.log(\"err: \",e);\r\n                    };\r\n                });\r\n                });\r\n                \r\n            };\r\n        } catch (e) {\r\n            console.log(e);\r\n        };\r\n    };\r\n\r\n    const handleNativeTokenMismatch = async (e) => {\r\n        if (e !== \"Project Tokens\") {\r\n            console.log(\"NATIVE: \", e);\r\n            setAddressDemand(false);\r\n        } else {\r\n            console.log(\"ERC-20: \", e);\r\n            setAddressDemand(true);\r\n        };\r\n    };\r\n\r\n    const approveToken = async () => {\r\n        console.log(\"approving: \",lockAmount*10**tokenDecimals);\r\n        let provider = await connector.getProvider()\r\n        approve(provider, tokenContract, account, (lockAmount*10**tokenDecimals).toString(), network).then((status) => {\r\n            if (status) setIsAllowed(2);\r\n        });\r\n    };\r\n\r\n    const showLockup = async (network, lockId) => {\r\n        props.history.push(`/lockup/${network.toLowerCase()}/${lockId}`);\r\n    };\r\n\r\n    const networkData = networks_data;\r\n\r\n    const changeNetwork = (name) => {\r\n        setNetwork(name);\r\n    };\r\n\r\n    const Row = (props) => {\r\n        const { index, row } = props;\r\n        let nextUnlock, lockedTokenAmount = 0,\r\n            lockedLiquidity = false;\r\n        const currentTime = Date.now();\r\n        row.data.map(each => {\r\n            if (each.timestamp > currentTime / 1000) {\r\n                if (!nextUnlock) nextUnlock = each.timestamp;\r\n                else if (nextUnlock > each.timestamp) nextUnlock = each.timestamp;\r\n            }\r\n            if (!each.isWithdrawn && !each.isLiquidity) lockedTokenAmount += each.amount / Math.pow(10, each.decimals);\r\n            if (!each.isWithdrawn && each.isLiquidity) lockedLiquidity = true;\r\n        })\r\n\r\n        return ( <\r\n            >\r\n            <TableRow\r\n                sx={{ '& > *': { borderBottom: 'unset' } }}\r\n                > \r\n                    <TableCell>\r\n                        {index + 1}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        <span style={{cursor: \"pointer\"}} onClick={()=>showLockup(row.token.address,index + 1)}>{row.token.symbol}</span>\r\n                        <CopyToClipboard text={row.token.address} onCopy={()=>handleSnackbarOpen(true)}>\r\n                            <Tooltip title=\"copy\">\r\n                                <IconButton>\r\n                                    <ContentCopyIcon/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </CopyToClipboard>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{lockedTokenAmount.toFixed(2)}</TableCell>\r\n                    <TableCell align=\"right\">{lockedLiquidity && <CheckIcon />}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                        {nextUnlock ? new Date(nextUnlock).toDateString() : ''}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                        <Button variant=\"contained\" color=\"secondary\" style={{width: '100%'}}  onClick={() => showLockup(row.token.address,index + 1)}>View</Button>\r\n                    </TableCell>\r\n                </TableRow> {\r\n                /* <TableRow>\r\n                                    <TableCell colSpan={2}></TableCell>\r\n                                    <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\r\n                                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                                        <Box sx={{ margin: 1 }}>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                History\r\n                                            </Typography>\r\n                                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell>Withdrawable Date</TableCell>\r\n                                                        <TableCell align=\"right\">Amount</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                {row.vesting.map((vestingRow) => (\r\n                                                    <TableRow key={vestingRow[0]}>\r\n                                                        <TableCell component=\"th\" scope=\"row\">\r\n                                                            {new Date(vestingRow[0] * 1000).toDateString()}\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"right\">{(vestingRow[1] / Math.pow(10, row.decimals)).toFixed(2)}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </Box>\r\n                                    </Collapse>\r\n                                    </TableCell>\r\n                                </TableRow> */\r\n            } <\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <Container className={classes.root} maxWidth=\"lg\" style={{paddingLeft:20, paddingRight:20}}>\r\n            <Box className={classes.info}>\r\n                <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\" >\r\n                    <Grid className={isMobile ? `${mobileClasses.root} grid text-center`  : \"grid text-center\"} style={{marginTop:40}} item xs={12} sm={12} md={6} >\r\n                        <div style={{maxWidth:400, display:'inline-block', textAlign:'left'}}>\r\n                            <h1>Create your own custom token lock instantly.</h1>\r\n                            <p>All digital assets are locked into a TimeLock enabled smart contract which has been specially engineered and tested to serve this purpose. TimeLock certified digital assets can only be withdrawn after the preset time lock expires.</p>\r\n                            <Link\r\n                                href={`https://locker.interchained.org`}\r\n                                target=\"_blank\"\r\n                                color=\"blue\"\r\n                                underline=\"none\"\r\n                                className={classes.button}\r\n                            ><Button variant=\"contained\">Powered by Interchained</Button></Link>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid className={isMobile ? `${mobileClasses.root} grid`  : \"grid\"} style={{marginTop:40}} item xs={12} sm={12} md={6} >\r\n                        <Card className=\"card\">\r\n                            <CardHeader\r\n                                className={dashboardClasses.cardHeader}\r\n                                title=\"Create New iLock\"\r\n                            />\r\n                            <CardContent >\r\n                                <img src=\"/lock.png\" />\r\n                                <RadioGroup\r\n                                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                    defaultValue=\"female\"\r\n                                    name=\"radio-buttons-group\"\r\n                                >\r\n                                    <SwipeableViews\r\n                                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                                        index={activeStep}\r\n                                        onChangeIndex={handleStepChange}\r\n                                    >\r\n                                       \r\n                                        <div key={1} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <p style={{textAlign:'center'}} color=\"textSecondary\">\r\n                                                Choose the blockchain network.\r\n                                            </p>\r\n                                            {\r\n                                                networkData ? networkData.map((item)=>\r\n                                                <Grid\r\n                                                    className={classes.networkSelector}\r\n                                                    container\r\n                                                    direction=\"row\"\r\n                                                    justifyContent=\"space-evenly\"\r\n                                                    alignItems=\"center\"\r\n                                                    style={{padding:\"10px 0px\", border:item.name==network?\"1px solid #fff\":\"1px solid transparent\", borderRadius:'5px'}}\r\n                                                    key={item.name}\r\n                                                    onClick = {()=>changeNetwork(item.name)}\r\n                                                >\r\n                                                    <Grid item  xs={10} sm={11} md={11}>\r\n                                                        <Grid \r\n                                                            container\r\n                                                            direction=\"row\"\r\n                                                            alignItems=\"center\"\r\n                                                        >\r\n                                                            <Grid item className=\"text-center\" xs={3} sm={2} md={2}>\r\n                                                                <img className={dashboardClasses.networkImage} src={item.url} alt=\"network\" />\r\n                                                            </Grid>\r\n                                                            <Grid item   xs={9} sm={10} md={10}>\r\n                                                                <p  color=\"textSecondary\" className={dashboardClasses.networkTitle}>\r\n                                                                    {item.name}\r\n                                                                </p>\r\n                                                                <p color=\"textSecondary\" className={dashboardClasses.networkDes}>\r\n                                                                    {item.subtitle}\r\n                                                                </p>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                    <Grid item  className=\"text-center\" xs={2} sm={1} md={1}>\r\n                                                        {item.name==network ? <div style={{width:\"20px\", height:'20px', borderRadius:\"10px\", backgroundColor:'#fff', display:'inline-block'}} />: <div style={{width:\"20px\", height:'20px', borderRadius:\"10px\", border:'1px solid #fff', display:'inline-block'}} />}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                )\r\n                                            : <></> }\r\n                                        </div>\r\n                                        <div key={2} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <p style={{textAlign:'center'}} color=\"textSecondary\">\r\n                                                Select the type of token you would like to create a lock for.\r\n                                                You can create multiple locks with different settings for each one.\r\n                                            </p>\r\n                                            {\r\n                                                network !=\"\" && networkData.find((item)=>item.name==network).subData.map((each)=><Grid\r\n                                                className={classes.networkSelector}\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-evenly\"\r\n                                                alignItems=\"center\"\r\n                                                style={{padding:\"10px 0px\", border:each.name==subMethod?\"1px solid #fff\":\"1px solid transparent\", borderRadius:'5px'}}\r\n                                                key={each.name}\r\n                                                onClick = {\r\n                                                    ()=>{\r\n                                                        setSubMethod(each.name)\r\n                                                        handleNativeTokenMismatch(each.name)\r\n                                                    }\r\n                                                }\r\n                                            >\r\n                                                <Grid item  xs={10} sm={11} md={11}>\r\n                                                    <Grid \r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        alignItems=\"center\"\r\n                                                    >\r\n                                                        <Grid item className=\"text-center\" xs={3} sm={2} md={2}>\r\n                                                            <img className={dashboardClasses.networkImage} src={each.url} alt=\"network\" />\r\n                                                        </Grid>\r\n                                                        <Grid item   xs={9} sm={10} md={10}>\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.networkTitle}>\r\n                                                                {each.name}\r\n                                                            </p>\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.networkDes}>\r\n                                                                {each.subTitle}\r\n                                                            </p>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item  className=\"text-center\" xs={2} sm={1} md={1}>\r\n                                                    {each.name==subMethod ? <div className={dashboardClasses.fillCircle} />: <div className={dashboardClasses.emptyCircle} />}\r\n                                                </Grid>\r\n                                            </Grid>)\r\n                                            }\r\n                                        </div>\r\n                                        { addressDemand ? <div key={3} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <p className=\"text-center\" color=\"textSecondary\">\r\n                                                Enter the token address you would like to lock for\r\n                                            </p>\r\n                                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\" style={{width:'-webkit-fill-available'}}>\r\n                                                <InputLabel htmlFor=\"outlined-adornment-password\">Address</InputLabel>\r\n                                                <OutlinedInput\r\n                                                    id=\"outlined-adornment-password\"\r\n                                                    type=\"text\"\r\n                                                    value={values.tokenAddress}\r\n                                                    onChange={handleChange}\r\n                                                    endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                        aria-label=\"toggle search\"\r\n                                                        onClick={handleLockToken}\r\n                                                        onMouseDown={handleMouseDownPassword}\r\n                                                        edge=\"end\"\r\n                                                        >\r\n                                                        <Search />\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                    }\r\n                                                    label=\"Password\"\r\n                                                />\r\n                                            </FormControl>\r\n                                            \r\n                                            {\r\n                                                tokenContract &&\r\n                                                <div style={{paddingLeft:20, paddingRight:20}}>\r\n                                                    <p style={{margin:\"0px\"}}>Token Found</p>\r\n                                                    <Grid \r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        justifyContent=\"space-between\"\r\n                                                        alignItems=\"center\"\r\n                                                    >\r\n                                                        <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                            <img className={dashboardClasses.tokenImage} src=\"/lock.png\" alt=\"network\" />\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.tokenTitle}>\r\n                                                                {token.symbol}\r\n                                                            </p>\r\n                                                        </Grid>\r\n                                                        <Grid item className={dashboardClasses.textRight}  xs={6} sm={6} md={6}>\r\n                                                            <Button variant=\"contained\" color=\"error\" sm={12} onClick={selectToken}>Select</Button>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </div>\r\n                                            }\r\n                                            \r\n                                        </div> : <div key={3} style={{paddingLeft:1, paddingRight:1}}></div> && handleNext && <div key={4} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <br />\r\n                                            { addressDemand ? <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        id=\"standard-number-decimals\"\r\n                                                        label=\"Token Decimals\"\r\n                                                        type=\"number\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 0, max: 18 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 0, max: 18 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleTokenDecimals}\r\n                                                        value={tokenDecimals}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid> : <span></span> }\r\n                                            <br />\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        id=\"standard-number\"\r\n                                                        label=\"Lock Amount\"\r\n                                                        type=\"number\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 1 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 1 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleLockAmount}\r\n                                                        value={lockAmount}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item className={dashboardClasses.textRight}  xs={6} sm={6} md={6}>\r\n                                                    <p style={{marginBottom:2, marginTop:0, fontSize: \"10px\"}}>Balance: {addressDemand ? (test_data.userBalance / Math.pow(10, tokenDecimals)).toFixed(2) : etherBalance}</p>\r\n                                                    <Grid \r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        justifyContent=\"space-between\"\r\n                                                        alignItems=\"center\"\r\n                                                    >\r\n                                                        <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                            <Button variant=\"contained\" color=\"error\" sm={12} onClick={selectLockAmountMax}>Max</Button>\r\n                                                        </Grid>\r\n                                                        <Grid item className={dashboardClasses.textRight} xs={6} sm={6} md={6}>\r\n                                                            <img style={{height:30}} src=\"/lock.png\" alt=\"network\" />\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.tokenTitle}>\r\n                                                                {token.symbol}\r\n                                                            </p>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <br />\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        id=\"standard-holder\"\r\n                                                        label=\"Holder\"\r\n                                                        type=\"text\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 1 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 1 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleHolder}\r\n                                                        value={holder}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <br />\r\n                                            <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={!isMobile ? `${dashboardClasses.balanceContainer}` : `${mobileClasses.balanceContainer}`}\r\n                                            >\r\n                                                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                                        <DateTimePicker\r\n                                                            id=\"standard-number\"\r\n                                                            label=\"Unlock Date\"\r\n                                                            renderInput={(props) => <TextField {...props} className={isMobile ? `${mobileClasses.datetimepicker}` : ``} />}\r\n                                                            value={withdrawDate}\r\n                                                            onChange={(value) => handleDate(value)}\r\n                                                        />\r\n                                                    </LocalizationProvider>\r\n                                                    <div>\r\n                                                    {\r\n                                                        !addressDemand || isAllowed == 2 ? <Button variant=\"contained\" color=\"secondary\" sm={12} disabled={!dateUseful} value={addressDemand} onClick={depositToken} className={isMobile ? `${mobileClasses.button}` : ``}>Deposit</Button>\r\n                                                        : (isAllowed == 1 ? <Button variant=\"contained\" color=\"secondary\" sm={12} onClick={approveToken} className={isMobile ? `${mobileClasses.button}` : ``}>Approve</Button> : <Button variant=\"contained\" color=\"secondary\" sm={12} onClick={approveToken} className={isMobile ? `${mobileClasses.button}` : ``}>Approve</Button>)\r\n                                                    }\r\n                                                    </div>\r\n                                            </Grid>\r\n                                        </div>}\r\n                                    </SwipeableViews>\r\n                                    <MobileStepper\r\n                                        className={dashboardClasses.mobileStepper}\r\n                                        steps={maxSteps}\r\n                                        position=\"static\"\r\n                                        activeStep={activeStep}\r\n                                        nextButton={\r\n                                        <Button\r\n                                            size=\"small\"\r\n                                            onClick={handleNext}\r\n                                            disabled={activeStep === maxSteps - 1}\r\n                                        >\r\n                                            Next\r\n                                            {theme.direction === 'rtl' ? (\r\n                                            <KeyboardArrowLeft />\r\n                                            ) : (\r\n                                            <KeyboardArrowRight />\r\n                                            )}\r\n                                        </Button>\r\n                                        }\r\n                                        backButton={\r\n                                        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                                            {theme.direction === 'rtl' ? (\r\n                                            <KeyboardArrowRight />\r\n                                            ) : (\r\n                                            <KeyboardArrowLeft />\r\n                                            )}\r\n                                            Back\r\n                                        </Button>\r\n                                        }\r\n                                    />\r\n                                </RadioGroup>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    {\r\n                        lockerListEnabled ? <Grid className={isMobile ? `${mobileClasses.root} grid `  : \"grid\"} style={{marginTop:40}} item xs={12} sm={12} md={12} >\r\n                        <Card className=\"card\">\r\n                            <CardHeader\r\n                                className={dashboardClasses.cardHeader}\r\n                                title=\"Locked Token List\"\r\n                            />\r\n                            <CardContent >\r\n                            {/* <TextField\r\n                                id=\"outlined-search\"\r\n                                label=\"Search other wallet\"\r\n                                type=\"search\"\r\n                                variant=\"standard\"\r\n                                fullWidth={true}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onKeyPress={searchOtherWallet}\r\n                                value={searchWallet}\r\n                                onChange={onChangeSearchWallet}\r\n                                error={searchOtherWalletError}\r\n                                helperText={searchHelperText}\r\n                            /> */}\r\n                                {data.length == 0 && \r\n                                <div className=\"text-center\" style={{width:'100%', padding:\"20px 0px\"}}>\r\n                                    <img src=\"/mylock.png\" alt=\"My Lock\" style={{height:200}}/>\r\n                                    <h2 style={{marginBottom:0}}>No Locked Coin</h2>\r\n                                    <p style={{color:'grey',margin:0}}>You have not locked up any coins yet.</p>\r\n                                </div>}\r\n                                {data.length != 0 && <TableContainer component={Paper}>\r\n                                    <Table aria-label=\"collapsible table\">\r\n                                        <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>No</TableCell>\r\n                                            <TableCell>Token</TableCell>\r\n                                            <TableCell align=\"right\">Tokens Locked</TableCell>\r\n                                            <TableCell align=\"right\">Liquidity Locked</TableCell>\r\n                                            <TableCell align=\"right\">Next Unlock</TableCell>\r\n                                            <TableCell align=\"right\"></TableCell>\r\n                                        </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                        {data.map((row, index) => (\r\n                                            <Row key={`lockToken-${index}`} row={row} index={index} />\r\n                                        ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>}\r\n                            </CardContent>\r\n                        </Card>\r\n                        \r\n                    </Grid> : <Loader value={loaderText} />\r\n                    }\r\n                </Grid>\r\n            </Box>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    \r\n                    {networkData.find((item)=>item.name==network) && <div style={{textAlign:'center'}}><img style={{width:\"50px\"}} src={networkData.find((item)=>item.name==network).url} alt=\"network\" /></div>}\r\n                    <h3 id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" style={{textAlign:'center', marginTop:0}}>\r\n                        {modalTitle}\r\n                    </h3>\r\n                    <p id=\"modal-modal-description\" sx={{ mt: 2 }} style={{textAlign:'center', fontSize:12, color:'grey'}}>\r\n                        {modalDes}\r\n                    </p>\r\n                    <Button variant=\"contained\" color=\"error\" style={{width:'100%'}} onClick={handleClose}>Close</Button>\r\n                </Box>\r\n            </Modal>\r\n            <Snackbar\r\n                open={snackbar}\r\n                autoHideDuration={600}\r\n                style={{width:100}}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Successfully Copied to Clipboard\"\r\n                // action={action}\r\n            />\r\n        </Container >\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    statistics: state.statistics,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Bridge);","import axios from 'axios';\r\nimport {\r\n    Multicall\r\n  } from 'ethereum-multicall';\r\n\r\nimport { erc20Abi, lockerContractAbi, lockerAddress } from \"./constants\";\r\nimport erc721Abi from \"./erc721_abi.json\";\r\nimport Web3 from \"web3\";\r\nimport dexscreener from 'dexscreener-api';\r\nimport { walletAddress } from './redux/reducers';\r\n\r\nimport { provider, explorer, serverApi, dexscreenerUrl_ } from \"./web3.js\";\r\n\r\nconst apiKey = 'SvMhtTsmQ239NmpwWjnnLWXtag5Jt8wYp7NF8F3Tear1QSaDRl9gnM34JZVXdLFV';\r\nconst apiConfig = {\r\n    headers: {\r\n        'x-api-key': apiKey\r\n    }\r\n}\r\nconst serverUrl = 'https://deep-index.moralis.io/api/v2';\r\n\r\nexport const getTokenPrice = async function (_chain, _tokenAddress) {\r\n    let price;\r\n    try {\r\n        const pairsResponse = await dexscreener.getPairInformationByChain(_chain, _tokenAddress); console.log(\"pairsResponse: \",pairsResponse);\r\n        price = 0;\r\n    } catch (e) {\r\n        price = 0;\r\n        {/*\r\n            *   // Get pair information by chain\r\n            *   // // Get pairs matching base token address\r\n            *   // const tokensResponse = await getPairsMatchingBaseTokenAddress(\"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\r\n            *   // // Search for pairs matching query\r\n            *   // const searchResponse = await searchPairsMatchingQuery(\"WBNB USDC\");\r\n            *   // await axios.get(`${serverUrl}/erc20/${_tokenAddress}/price?chain=${_chain}`, apiConfig);\r\n        */}\r\n    }\r\n    return price && price.data;\r\n}\r\nexport const getERC20Metadata = async function (provider, _chain, _tokenAddress, address) {\r\n    console.log(\"getERC20Metadata: \",_chain, _tokenAddress);\r\n    let result; let decimals; let symbol; let name; let balanceOf;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(await erc20Abi, _tokenAddress);\r\n        decimals = await contract.methods[\"decimals\"]().call();\r\n        symbol = await contract.methods[\"symbol\"]().call();\r\n        balanceOf = await contract.methods[\"balanceOf\"](address).call();\r\n        name = await contract.methods[\"name\"]().call();\r\n        result = [{\r\n            \"balanceOf\":parseFloat(balanceOf),\r\n            \"balance\":parseFloat(balanceOf),\r\n            \"userBalance\":parseFloat(balanceOf),\r\n            \"decimals\":parseFloat(decimals),\r\n            \"symbol\":symbol,\r\n            \"tokenTitle\":name,\r\n            \"name\":name\r\n        }]; \r\n    } catch(e) {\r\n        console.log(\"booting the backup\");\r\n        try {\r\n            let web3 = new Web3(provider);\r\n            let contract = new web3.eth.Contract(await erc20Abi, _tokenAddress[0]);\r\n            decimals = await contract.methods[\"decimals\"]().call();\r\n            symbol = await contract.methods[\"symbol\"]().call();\r\n            balanceOf = await contract.methods[\"balanceOf\"](address).call();\r\n            name = await contract.methods[\"name\"]().call();\r\n            result = [{\r\n                \"balanceOf\":parseFloat(balanceOf),\r\n                \"balance\":parseFloat(balanceOf),\r\n                \"userBalance\":parseFloat(balanceOf),\r\n                \"decimals\":parseFloat(decimals),\r\n                \"symbol\":symbol,\r\n                \"tokenTitle\":name,\r\n                \"name\":name\r\n            }]; \r\n        } catch(e) {\r\n            console.log(e);\r\n        } finally {\r\n            console.log(\"result: \",result);\r\n            // eslint-disable-next-line\r\n            return result;\r\n        }\r\n    } finally {\r\n        console.log(\"result: \",result);\r\n        // eslint-disable-next-line\r\n        return result;\r\n    };\r\n}\r\nexport const getTokenMetadata = async function (_chain, _tokenAddress) {\r\n        console.log(\"getTokenMetadata: \",_chain, _tokenAddress);\r\n    // replace moralis\r\n    // 1) call() to contract => BASE_URI \r\n    // 2) call() to contract => TOKEN_URI||TOKEN_ID \r\n    // = async (provider, id, account, network) => {\r\n    let result; let decimals; let symbol; let name;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        // let ERC721_contract = new web3.eth.Contract(erc721Abi, _tokenAddress);\r\n        let contract = new web3.eth.Contract(erc20Abi, _tokenAddress);\r\n        decimals = await contract.methods[\"decimals\"]().call();\r\n        symbol = await contract.methods[\"symbol\"]().call();\r\n        name = await contract.methods[\"name\"]().call();\r\n        result = {\r\n            \"decimals\":decimals,\r\n            \"symbol\":symbol,\r\n            \"name\":name\r\n        };\r\n        console.log(\"result: \",result);\r\n        return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\nexport const getMyLockers = async function (account, network) {\r\n    console.log(\"getMyLockers: \",account, network);\r\n    let result; let _my_locks;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc20Abi, lockerAddress[network]);\r\n        _my_locks = await contract.methods[\"_my_locks\"](account).call();\r\n        let _my_lockers = [];\r\n        for(let m = 0; m < _my_locks.length; m++) {\r\n            _my_lockers.push(_my_locks[m]);\r\n        };\r\n        let i = 0;\r\n        while(i<_my_lockers.length) {\r\n            if(i==_my_lockers.length-1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            };\r\n        };\r\n        _my_locks = await contract.methods[\"_my_locks\"](account).call();\r\n        result = {\r\n            \"_my_locks\":_my_locks\r\n        };\r\n        console.log(\"result: \",result);\r\n        return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\nexport const getNFTTokenMetadata = async function (_chain, _tokenAddress) {\r\n        console.log(\"getTokenMetadata: \",_chain, _tokenAddress);\r\n    // replace moralis\r\n    // 1) call() to contract => BASE_URI \r\n    // 2) call() to contract => TOKEN_URI||TOKEN_ID \r\n    // = async (provider, id, account, network) => {\r\n    let result;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc721Abi, _tokenAddress);\r\n        result = await contract.methods[\"tokenURI\"](1).call();\r\n        console.log(\"result: \",result);\r\n        return result.status;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\n\r\nexport const getTokenBalance = async function (provider, _chain, _tokenAddress, _walletAddress) {\r\n        console.log(\"getTokenBalance: \",_chain, _tokenAddress, _walletAddress);\r\n    // replace moralis\r\n    // call() to explorer => get_balance()\r\n    let result;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc20Abi, _tokenAddress);\r\n        result = await contract.methods[\"balanceOf\"](_walletAddress).call();\r\n        console.log(\"result: \",result);\r\n        return result.status;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const balances = await axios.get(`${serverUrl}/${_walletAddress}/erc20?chain=${_chain}&token_addresses=${_tokenAddress}`, apiConfig);\r\n    // return balances.data;\r\n}\r\n\r\nexport const runContractFunction = async function (_chain, _contractAddress, _functionName, _abi, _params) {\r\n        console.log(\"runContractFunction: \",_chain, _contractAddress, _functionName, _abi, _params);\r\n    // replace moralis\r\n    // injected web3 via ethersJS||web3.js\r\n    let result;\r\n    try {\r\n        // result = await axios.post(`${serverUrl}/${_contractAddress}/function?chain=${_chain}&function_name=${_functionName}`, {\r\n        //     \"abi\": _abi,\r\n        //     \"params\": _params\r\n        // }, apiConfig);\r\n    } catch (e) {\r\n        result = null;\r\n    }\r\n    return result ? result.data : null;\r\n}\r\n\r\nexport const getCurrentFee = async function (_chain, _tokenAddress, _walletAddress) {\r\n    const dynamicFeeAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getDynamicFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    if (await isExcludedFromFee(_chain, _tokenAddress, _walletAddress)) return 0;\r\n    const dynamicFee = await runContractFunction(_chain, _tokenAddress, 'getDynamicFee', dynamicFeeAbi, {from:_walletAddress});\r\n    return dynamicFee;\r\n}\r\n\r\nexport const isExcludedFromFee = async function (_chain, _tokenAddress, _walletAddress) {\r\n    const isExcludedFromFeeAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    return await runContractFunction(_chain, _tokenAddress, 'isExcludedFromFee', isExcludedFromFeeAbi, {account:_walletAddress});\r\n}\r\n\r\nexport const getCommonFee = async function (_chain, _tokenAddress) {\r\n    const liquidityAndMarketingFeeAbi = [{\"inputs\":[],\"name\":\"_liquidityAndMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const taxFeeAbi = [{\"inputs\":[],\"name\":\"_taxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    let commonFee = 0;\r\n    await Promise.all([\r\n        runContractFunction(_chain, _tokenAddress, '_liquidityAndMarketingFee', liquidityAndMarketingFeeAbi, {}),\r\n        runContractFunction(_chain, _tokenAddress, '_taxFee', taxFeeAbi, {})\r\n    ]).then(results => results.map(each => commonFee += Number(each)));\r\n    return commonFee;\r\n}\r\n\r\nexport const burntAndLeftTokenPercent = async function (_chain, _tokenAddress) {\r\n    const burntVsCirculatingSupplyAbi = [{\"inputs\":[],\"name\":\"burntVsCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burnt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"circulating\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const data = await runContractFunction(_chain, _tokenAddress, 'burntVsCirculatingSupply', burntVsCirculatingSupplyAbi);\r\n    return {burnt: Number(data[0]), left: Number(data[1]), leftPercent: data[1] / (Number(data[0]) + Number(data[1])) * 100};\r\n}\r\n\r\nexport const totalFees = async function (_chain, _tokenAddress) {\r\n    const totalFeesAbi = [{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const data = await runContractFunction(_chain, _tokenAddress, 'totalFees', totalFeesAbi);\r\n    return data;\r\n}\r\n\r\nexport const getTransactions = async function (_chain, _walletAddress) {\r\n    const transactions = await axios.get(`${serverUrl}/${_walletAddress}/erc20/transfers?chain=${_chain}&offset=0&oder=desc`, apiConfig);\r\n    return transactions.data;\r\n}\r\n\r\nexport const getLogsByAddress = async function (_chain, _tokenAddress) {\r\n    // replace moralis\r\n    // enable param *(topic_hash) { user supplied topic hash }\r\n    // add back (events) fn() from iStack tests\r\n    let offset = 0;\r\n    const response = await axios.get(`${serverUrl}/${_tokenAddress}/logs?chain=${_chain}&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&offset=${offset}&oder=desc`, apiConfig);\r\n    let logs = response.data.result;\r\n    const total = response.data.total;\r\n    const pages = Math.ceil(total / 500);\r\n    let page = 1;\r\n    let getLogFunctions = [];\r\n    while (page < pages) {\r\n        offset = page * 500;\r\n        getLogFunctions.push(axios.get(`${serverUrl}/${_tokenAddress}/logs?chain=${_chain}&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&offset=${offset}&oder=desc`, apiConfig));\r\n        page++;\r\n    }\r\n    if (getLogFunctions.length) {\r\n        await Promise.all(getLogFunctions).then(results => {\r\n            results.map(each => {\r\n                logs = logs.concat(each.data.result);\r\n            })\r\n        })\r\n    }\r\n    return logs;\r\n}\r\n\r\nfunction getAddress(topic) {\r\n    if (topic === null || topic === '') return '';\r\n    return `0x${topic.substring(topic.length - 40)}`;\r\n}\r\n\r\nfunction filterLogs(logs, _walletAddress) {\r\n    return logs.filter(each => getAddress(each.topic1) === _walletAddress.toLowerCase() || getAddress(each.topic2) === _walletAddress.toLowerCase());\r\n}\r\n\r\nfunction getValue(topic) {\r\n    return parseInt(topic, 16);\r\n}\r\n\r\nasync function calculateBuySell(logs, _chain, _tokenAddress, _walletAddress) {\r\n    let buy = 0, sell = 0, isFee = true;\r\n    if (await isExcludedFromFee(_chain, _tokenAddress, _walletAddress)) isFee = false;\r\n    logs.map(each => {\r\n        if (getAddress(each.topic1) === _walletAddress.toLowerCase()) {\r\n            if (isFee) {\r\n                sell += getValue(each.data) / 97 * 100;\r\n            } else {\r\n                sell += getValue(each.data);\r\n            }\r\n        } else buy += getValue(each.data);\r\n    })\r\n    let result = {buy: buy, sell: sell};\r\n    return result;\r\n}\r\n\r\nexport const walletExchange = async function(_chain, _tokenAddress, _walletAddress) {\r\n    let logs;\r\n    await getLogsByAddress(_chain, _tokenAddress).then(data=> {\r\n        logs = filterLogs(data, _walletAddress);\r\n    })\r\n    return await calculateBuySell(logs, _chain, _tokenAddress, _walletAddress);\r\n}","import React from \"react\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\nimport clsx from \"clsx\";\r\nimport Paper from \"@mui/material/Box\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport useStyles from \"../assets/styles\";\r\nimport SpinnerLogoWhite from \"../assets/img/spinner-logo-white.png\";\r\n\r\nexport let alterLoaderText;\r\nconst Loader = ({ isLoading }) => {\r\n    const classes = useStyles.base();\r\n    const [loaderText,setLoaderText] = React.useState(\"\");\r\n    const [loaderBottomText,setLoaderBottomText] = React.useState(\"\");\r\n    alterLoaderText = async function(l_t,lb_t) {\r\n      console.log(\"l_t: \",l_t);\r\n      await setLoaderText(l_t);\r\n      if(lb_t) {\r\n        if(lb_t.length>0) {\r\n          await setLoaderBottomText(lb_t);\r\n        }\r\n      }\r\n      return l_t;\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n          <Stack spacing={1} style={{padding:50,margin:50}}>\r\n          {/* For variant=\"text\", adjust the height via font-size */}\r\n            <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\r\n          {/* For other variants, adjust the size with `width` and `height` */}\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <div dangerouslySetInnerHTML={{ __html: loaderText ? loaderText : 'SCANNING BLOCKCHAIN' }} />\r\n          </Typography>\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <Skeleton variant=\"circular\" width={40} height={40} /> \r\n          </Typography>\r\n          <Skeleton variant=\"rectangular\" width={210} height={60} />\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <div dangerouslySetInnerHTML={{ __html: loaderBottomText ? loaderBottomText : '...' }} />\r\n          </Typography>\r\n          <Skeleton variant=\"rounded\" width={210} height={60} />\r\n          </Stack>\r\n      </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex'\n  }, handleBreakpoints({\n    theme\n  }, ownerState.direction, propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (ownerState.spacing[breakpoint] != null || ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Stack;","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    let pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    } // Convert length in pixels to the output unit\n\n\n    let outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\n\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(90deg, transparent, ${0}, transparent);\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, theme.palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'text']), PropTypes.string]),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;"],"sourceRoot":""}