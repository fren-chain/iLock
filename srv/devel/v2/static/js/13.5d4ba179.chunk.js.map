{"version":3,"sources":["pages/MyLockers.js"],"names":["getLockId","getAccount","getNetwork","_transfer","styled","LinearProgress","_ref","_ref2","theme","height","borderRadius","_defineProperty","concat","linearProgressClasses","colorPrimary","backgroundColor","palette","grey","mode","bar","connect","state","statistics","walletAddress","props","_props$match$params","match","params","chainName","wallet","_useWeb3React","useWeb3React","account","connector","_useState","useState","_useState2","_slicedToArray","_React$useState","React","_React$useState2","open","setOpen","_useState3","_useState4","_useState5","_useState6","setVesting","_useState7","_useState8","_useState9","_useState10","chainId","setChainId","_useState11","_useState12","network","setNetwork","_useState13","_useState14","_useState15","_useState16","ownable","_useState17","_useState18","setReady","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","snackbar","setSnackbar","_useState25","_useState26","lockerListEnabled","_useState27","_useState28","claimed","setClaimed","_useState29","_useState30","setUnlockDate","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","_React$useState3","_React$useState4","loaderText","_useState37","_useState38","_useState39","_useState40","dashboardClasses","useStyles","dashboard","_useState41","_useState42","modalTitle","_useState43","_useState44","modalDes","_useState45","_useState46","_useState47","_useState48","setIsWithdrawn","_useState49","_useState50","_useState51","_useState52","_useState53","_useState54","_useState55","_useState56","_useState57","_useState58","modalInner","setModalInner","_useState59","_useState60","_useState61","_useState62","dispatch","useDispatch","data","useSelector","tokenLists","__vesting","console","log","network_lower_to_proper","network_to_chain","explorer_","network_dec_to_hex","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","abrupt","stop","apply","arguments","_ref5","_callee3","_context3","handleClose","showLockup","_ref7","_callee5","_context5","history","push","useEffect","_callee12","__dispatch","__prepare","provider","_context12","date","Date","parse","toggleDrawer","changeNetwork","undefined","_ref10","_callee7","id","_context7","getLocker","sent","_x5","_x6","_x7","_ref11","_callee8","utcSeconds","d","_context8","setUTCSeconds","_x8","_ref12","_callee9","newData","_context9","type","TOKENLISTS","payload","e","_x9","_ref13","_callee10","_context10","getChainId","then","Number","_x10","getProvider","getLockers","_ref14","_callee11","index_","_context11","_x11","t0","classes","pools","mobileClasses","mobile","isMobile","useMediaQuery","change_Network","_ref15","_callee13","currentNetworkData","params_network_add","_context13","window","ethereum","networks_data","filter","each","name","request","method","chainData","rpcUrls","rpc_","network_","nativeCurrency","network_symbols","decimals","network_decimals","symbol","blockExplorerUrls","iconUrls","icons_","code","_objectSpread","catch","error","t1","TOKENDATA","withdrawToken","_ref16","_callee16","lockId","receiver","isEth","gasLimit","_context16","w3","_ref17","_callee15","W3","block","_context15","eth","getBlock","withdraw","_ref18","_callee14","status","_context14","JSON","stringify","_toggleWithdrawalModal","_x17","_x16","_x12","_x13","_x14","_x15","Row","nextUnlock","index","row","lockedTokenAmount","lockedLiquidity","currentTime","now","map","timestamp","isWithdrawn","isLiquidity","amount","Math","pow","_jsxs","_Fragment","children","TableRow","sx","borderBottom","_jsx","TableCell","component","scope","style","cursor","onClick","token","address","CopyToClipboard","text","onCopy","Tooltip","title","IconButton","ContentCopyIcon","align","toFixed","CheckIcon","toDateString","Button","variant","color","width","Container","className","root","maxWidth","paddingLeft","paddingRight","Box","info","Grid","container","direction","justifyContent","alignItems","marginTop","item","xs","sm","md","display","textAlign","Link","href","websiteURI","target","underline","button","Card","CardHeader","cardHeader","CardContent","src","length","padding","alt","marginBottom","margin","TableContainer","Paper","Table","TableHead","TableBody","Loader","value","Modal","onClose","position","top","left","transform","bgcolor","border","boxShadow","p","find","url","mt","fontSize","Snackbar","autoHideDuration","message"],"mappings":"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","file":"static/js/13.5d4ba179.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\n// ** Import Material UI Components\r\nimport Modal from '@mui/material/Modal';\r\nimport { RadioGroup } from \"@mui/material\";\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Search from '@mui/icons-material/Search';\r\nimport { Snackbar } from \"@mui/material\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport { getTokenMetadata } from \"../api\";\r\nimport { Collapse } from '@mui/material';\r\nimport { deposit, approve, allowance, getERC20allowance, updateProfile } from \"../web3\"\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport Button from \"@mui/material/Button\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport useStyles from '../assets/styles';\r\nimport { TOKENDATA, USERBALANCE, TOKENLISTS, LOCKERDATA, LOCKERSDATA } from \"../redux/constants\";\r\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\r\nimport { explorer_, networks_data, network_dec_to_hex, network_to_chain, network_lower_to_proper, rpc_, icons_, network_, network_symbols, network_decimals, network_hex_to_dec, websiteURI } from '../constants';\r\nimport Loader from '../components/Loader';\r\nimport { alterLoaderText } from '../components/Loader';\r\nimport { toggleDrawer } from '../components/Header';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport TransferOwnershipModal from '../components/TransferOwnership.js';\r\nimport { Tooltip } from \"@mui/material\";\r\nimport WithdrawModal from '../components/Transfer.js';\r\nimport { _toggleOwnershipModal } from '../components/TransferOwnership.js';\r\nimport { TextField, Table, TableHead, TableBody, TableRow, TableCell, TableContainer, Paper, IconButton } from \"@mui/material\";\r\nimport { _toggleWithdrawalModal } from '../components/Transfer.js';\r\nimport { transferOwnership_iLock, w3, isLockClaimed, getERC20balance, getEtherBalance, getLocker, getLockers, getData, withdraw, explorer, getTokenBalance } from '../web3';\r\nimport { getERC20Metadata } from \"../api\";\r\nexport let _wrap;\r\nexport let getLockId;\r\nexport let getAccount;\r\nexport let getNetwork;\r\nexport let linkWeb3;\r\nexport let _transfer;\r\nlet connector_;\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n    height: 10,\r\n    borderRadius: 5,\r\n    [`&.${linearProgressClasses.colorPrimary}`]: {\r\n        backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\r\n    },\r\n    [`& .${linearProgressClasses.bar}`]: {\r\n        borderRadius: 5,\r\n        backgroundColor: theme.palette.mode === 'light' ? '#1a90ff' : '#308fe8',\r\n    },\r\n}));\r\nconst dateTime = async (date) => {\r\n    return date.toLocaleString();\r\n};\r\nconst MyLockers = (props) => {\r\n    const { chainName, wallet } = props.match.params;\r\n    const { account, connector } = useWeb3React();\r\n    connector_ = connector;\r\n    const [amount, setAmount] = useState(0);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [_token, set_Token] = useState(\"\");\r\n    const [vesting, setVesting] = useState(\"\");\r\n    const [lockToken, setLockToken] = useState(\"\");\r\n    const [chainId, setChainId] = useState(0);\r\n    const [network, setNetwork] = useState(\"\");\r\n    const [status_, setStatus_] = useState(false);\r\n    const [ownable, setOwnable] = useState(false);\r\n    const [ready, setReady] = useState(false);\r\n    const [ether, setEther] = useState(false);\r\n    const [notMiner, setNotMiner] = useState(false);\r\n    const [snackbar, setSnackbar] = useState(false);\r\n    const [lockerListEnabled, setLockerListEnabled] = useState(false);\r\n    const [claimed, setClaimed] = useState(false);\r\n    const [unlockDate, setUnlockDate] = useState(\"\");\r\n    const [theHolder, setTheHolder] = useState(\"\");\r\n    const [theCreator, setTheCreator] = useState(\"\");\r\n    const [totalSupply, setTotalSupply] = useState(0);\r\n    const [loaderText, setLoaderText] = React.useState(\"\");\r\n    const [tokenDecimals, setTokenDecimals] = useState(0);\r\n    const [tokenBalance, setTokenBalance] = useState(0);\r\n    const dashboardClasses = useStyles.dashboard();\r\n    const [modalTitle, setModalTitle] = useState(\"\");\r\n    const [modalDes, setModalDes] = useState(\"\");\r\n    const [etherBalance, setEtherBalance] = useState(0);\r\n    const [isWithdrawn, setIsWithdrawn] = useState(\"\");\r\n    const [unlockAble, setUnlockAble] = useState(false);\r\n    const [doneForSure, setDoneForSure] = useState(false);\r\n    const [tokenSet, setTokenSet] = useState(false);\r\n    const [unlockTimestamp, setUnlockTimestamp] = useState(\"\");\r\n    const [modalInner, setModalInner] = useState(\"Transferring Ownership is irreversible. Provide an Address\");\r\n    const [holdingContract, setHoldingContract] = useState(\"\");\r\n    const [currentTimestamp, setCurrentTimestamp] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.tokenLists);\r\n    let index = 0;\r\n    let __vesting = [];\r\n    let nextUnlock = 0;\r\n    let tokenData = undefined;\r\n    if (network) {\r\n        console.log(\"net: \", account, network_lower_to_proper[chainName], network_to_chain[network], explorer_[network_dec_to_hex[chainId]]);\r\n    } else {\r\n        //\r\n    };\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #fff',\r\n        borderRadius: '10px',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n    getAccount = async () => {\r\n        return account;\r\n    };\r\n    getNetwork = async () => {\r\n        return network;\r\n    };\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const handleSnackbarClose = () => setSnackbar(false);\r\n    const handleSnackbarOpen = () => setSnackbar(true);\r\n    const showLocker = async (net, lid) => {\r\n        props.history.push(`/lockers/${net.toLowerCase()}/${lid}`);\r\n    };\r\n    const showLockup = async () => {\r\n        return props.history.push(`/dashboard/`);\r\n    };\r\n    const _transfer_ownership = async (e) => {\r\n        _toggleOwnershipModal(modalInner, \"Ownership Transfer\", await getLockId(), await getNetwork());\r\n    };\r\n    useEffect(async () => {\r\n        if (!account) {\r\n            toggleDrawer();\r\n        };\r\n        if (chainName) {\r\n            changeNetwork(network_lower_to_proper[chainName]);\r\n            console.log('network: ', network);\r\n        } else {\r\n            if (!chainName || chainName == \"\" || chainName == undefined) {\r\n                showLockup();\r\n                console.log(\"chainName: \", chainName);\r\n            } else {\r\n                console.log(\"chainName: \", chainName);\r\n            };\r\n        };\r\n        const checkLocker = async (id, account, network) => {\r\n            return await getLocker(account, network);\r\n        };\r\n        const setDate = async (utcSeconds) => {\r\n            let d = new Date(0);\r\n            d.setUTCSeconds(utcSeconds);\r\n            setUnlockDate(d);\r\n            return d;\r\n        };\r\n\r\n        function epoch(date) {\r\n            return Date.parse(date)\r\n        };\r\n        const __dispatch = async (newData) => {\r\n            try {\r\n                dispatch({ type: TOKENLISTS, payload: newData });\r\n            } catch (e) {\r\n                console.log(e);\r\n            };\r\n        };\r\n        const __prepare = async (connector) => {\r\n            // eslint-disable-next-line\r\n            setModalInner(modalInner);\r\n            try {\r\n                connector.getChainId().then((chainId) => {\r\n                    setChainId(chainId);\r\n                    if (Number(chainId) === 1) setNetwork(\"Ethereum\");\r\n                    if (Number(chainId) === 3) setNetwork(\"Ropsten\");\r\n                    if (Number(chainId) === 5) setNetwork(\"Goerli\");\r\n                    if (Number(chainId) === 56) setNetwork(\"Binance Smart Chain\");\r\n                    if (Number(chainId) === 97) setNetwork(\"Binance_testnet\");\r\n                    if (Number(chainId) === 444) setNetwork(\"Frenchain_testnet\");\r\n                    if (Number(chainId) === 43114) setNetwork(\"Avalanche\");\r\n                    if (Number(chainId) === 43113) setNetwork(\"Avalanche_testnet\");\r\n                    if (Number(chainId) === 44444) setNetwork(\"Frenchain\");\r\n                    if (Number(chainId) === 420420) setNetwork(\"Kekchain\");\r\n                    if (Number(chainId) === 420666) setNetwork(\"Kekchain_testnet\");\r\n                });\r\n            } catch (e) {\r\n                console.log(\"err: \", e);\r\n            };\r\n        };\r\n        try {\r\n            let provider = await connector.getProvider();\r\n            getLockers(provider, account, network).then(async (newData) => {\r\n                if (newData) {\r\n                    setVesting(newData);\r\n                    __vesting.push(newData[0][\"getLock\"][0]);\r\n                    console.log(\"newData: \", newData[0][\"getLock\"][0]);\r\n                    for (const index_ in newData[0][\"getLock\"][0]) {\r\n                        console.log(\"indy: \", newData[0][\"getLock\"][0][index_]);\r\n                    };\r\n                    if (newData[0][\"getLock\"][0] !== undefined) {\r\n                        console.log(\"newData2: \", newData[0]);\r\n                        setReady(true);\r\n                    } else {\r\n                        setReady(false);\r\n                    };\r\n                    __dispatch(newData);\r\n                };\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        };\r\n        if (account) {\r\n            __prepare(connector);\r\n        } else {\r\n            //\r\n        };\r\n    }, [account, wallet, network])\r\n\r\n    const classes = useStyles.pools();\r\n    const mobileClasses = useStyles.mobile();\r\n    const isMobile = useMediaQuery('(max-width:600px)');\r\n\r\n    const change_Network = async () => {\r\n        if (account) {\r\n            const provider = window.ethereum; {\r\n                /*\r\n                    checkEtherBalance(provider, account);\r\n                */\r\n            }\r\n            const currentNetworkData = networks_data.filter((each) => each.name === network);\r\n            try {\r\n                await provider.request({\r\n                    method: 'wallet_switchEthereuChmain',\r\n                    params: [{ chainId: currentNetworkData[0].chainData.chainId }],\r\n                });\r\n                console.log(\"You have succefully switched to \", network)\r\n            } catch (switchError) {\r\n                {\r\n                    /*\r\n                    // This error code indicates that the chain has not been added to MetaMask.\r\n                    */\r\n                }\r\n                try {\r\n                    const params_network_add = {\r\n                        chainId: currentNetworkData[0].chainData.chainId,\r\n                        rpcUrls: [rpc_[currentNetworkData[0].chainData.chainId]],\r\n                        chainName: network_[currentNetworkData[0].chainData.chainId],\r\n                        nativeCurrency: { name: network_symbols[currentNetworkData[0].chainData.chainId], decimals: network_decimals[currentNetworkData[0].chainData.chainId], symbol: network_symbols[currentNetworkData[0].chainData.chainId] },\r\n                        blockExplorerUrls: [explorer_[currentNetworkData[0].chainData.chainId]],\r\n                        iconUrls: [icons_[currentNetworkData[0].chainData.chainId]]\r\n                    };\r\n                    console.log(\"params_network_add: \", switchError.code, params_network_add);\r\n                    if (switchError.code === 4902) {\r\n                        console.log(\"This network is not available in your metamask, please add it\");\r\n                        let provider = await connector.getProvider();\r\n                        provider.request({\r\n                            method: 'wallet_addEthereumChain',\r\n                            params: [{ ...params_network_add }]\r\n                        }).catch((error) => {\r\n                            console.log(\"provider_err: \", error);\r\n                        });\r\n                    } else if (switchError.code === 4001) {\r\n                        console.log(\"Switch Request has rejected\");\r\n                    } else if (switchError.code === 4200) {\r\n                        console.log(\"You have succefully switched to \", network)\r\n                    };\r\n                } catch (e) {\r\n                    console.log(\"error: \", e);\r\n                }\r\n            };\r\n        };\r\n    };\r\n    const changeNetwork = (name) => {\r\n        setNetwork(name);\r\n        dispatch({\r\n            type: TOKENDATA,\r\n            payload: {}\r\n        });\r\n        change_Network();\r\n    }\r\n\r\n    const fn = (val, decimal = 4) => {\r\n        if (!isNaN(Number(val))) {\r\n            const trimVal = Number(Number(val).toFixed(decimal));\r\n            const decimalVal = trimVal.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n            return decimalVal;\r\n        } else {\r\n            return Number(0);\r\n        }\r\n    }\r\n\r\n    const withdrawToken = async (lockId, id, receiver, isEth) => {\r\n        if (!account) return;\r\n        if (claimed) return;\r\n        let provider = await connector.getProvider();\r\n        let gasLimit;\r\n        w3(provider, network).then(async (W3) => {\r\n            let block = await W3.eth.getBlock(\"latest\");\r\n            console.log(\"(w3) block: \", block);\r\n            console.log(\"(w3) gasLimit: \", block.gasLimit);\r\n            gasLimit = block.gasLimit;\r\n            console.log(\"Processing withdrawal: \", id, gasLimit, isEth, lockId, account, receiver, network);\r\n            withdraw(provider, lockId, account, receiver, isEth, network, ownable, gasLimit).then(async (status) => {\r\n                const newData = JSON.parse(JSON.stringify(data));\r\n                if (status) {\r\n                    console.log(\"Withdrawal processed: \", newData);\r\n                    setClaimed(true);\r\n                    setIsWithdrawn(true);\r\n                    _toggleWithdrawalModal(\"Confirmed\", \"Transaction: \", id, network);\r\n                };\r\n            });\r\n        });\r\n    };\r\n    _transfer = withdrawToken;\r\n\r\n    const withdrawProperty = async (lockId, id) => {\r\n        console.log(\"withdrawProperty: \", id);\r\n        _toggleWithdrawalModal(\"Delegate a receiver wallet and submit the transfer\", \"Withdraw\", lockId, network);\r\n    }\r\n\r\n    const transferOwnership = async (lockId, id) => {\r\n        if (!account) return;\r\n        let provider = await connector.getProvider()\r\n        withdraw(provider, lockId, account, network).then(async (status) => {\r\n            const newData = JSON.parse(JSON.stringify(data));\r\n            if (status) console.log(\"Withdrawal processed: \", newData);\r\n        })\r\n    }\r\n\r\n    const Row = (props) => {\r\n        const { index, row } = props;\r\n        let nextUnlock, lockedTokenAmount = 0,\r\n            lockedLiquidity = false;\r\n        const currentTime = Date.now();\r\n        row.data.map(each => {\r\n            if (each.timestamp > currentTime / 1000) {\r\n                if (!nextUnlock) nextUnlock = each.timestamp;\r\n                else if (nextUnlock > each.timestamp) nextUnlock = each.timestamp;\r\n            }\r\n            if (!each.isWithdrawn && !each.isLiquidity) lockedTokenAmount += each.amount / Math.pow(10, each.decimals);\r\n            if (!each.isWithdrawn && each.isLiquidity) lockedLiquidity = true;\r\n        })\r\n\r\n        return ( < >\r\n            <TableRow\r\n                sx={{ '& > *': { borderBottom: 'unset' } }}\r\n                > \r\n                    <TableCell>\r\n                        {index + 1}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        <span style={{cursor: \"pointer\"}} onClick={()=>showLockup(row.token.address,index + 1)}>{row.token.symbol}</span>\r\n                        <CopyToClipboard text={row.token.address} onCopy={()=>handleSnackbarOpen(true)}>\r\n                            <Tooltip title=\"copy\">\r\n                                <IconButton>\r\n                                    <ContentCopyIcon/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </CopyToClipboard>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{lockedTokenAmount.toFixed(2)}</TableCell>\r\n                    <TableCell align=\"right\">{lockedLiquidity && <CheckIcon />}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                        {nextUnlock ? new Date(nextUnlock).toDateString() : ''}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                        <Button variant=\"contained\" color=\"secondary\" style={{width: '100%'}}  onClick={() => showLockup(row.token.address,index + 1)}>View</Button>\r\n                    </TableCell>\r\n                </TableRow> < />\r\n        )\r\n    }\r\n    return (\r\n        <Container className={classes.root} maxWidth=\"lg\" style={{paddingLeft:20, paddingRight:20}}>\r\n            <Box className={classes.info}>\r\n                <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\" >\r\n                    <Grid className={isMobile ? `${mobileClasses.root} grid text-center`  : \"grid text-center\"} style={{marginTop:40}} item xs={12} sm={12} md={6} >\r\n                        <div style={{maxWidth:400, display:'inline-block', textAlign:'left'}}>\r\n                            <h1>Did you know?</h1>\r\n                            <p>You could hire us to build for you. We engineer custom protocols, DApps, applications, SaaS platforms and more...</p>\r\n                            <br />\r\n                            <p>We specialize in Web3, blockchain technologies involving Ethereum Virtual Machine, and Monero</p>\r\n                            <Link\r\n                                href={`${websiteURI}`}\r\n                                target=\"_blank\"\r\n                                color=\"blue\"\r\n                                underline=\"none\"\r\n                                className={classes.button}\r\n                            ><Button variant=\"contained\">Powered by Interchained</Button></Link>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid className={isMobile ? `${mobileClasses.root} grid`  : \"grid\"} style={{marginTop:40}} item xs={12} sm={12} md={6} >\r\n                        <Card className=\"card\">\r\n                            <CardHeader\r\n                                className={dashboardClasses.cardHeader}\r\n                                title=\"Create New iLock\"\r\n                            />\r\n                            <CardContent >\r\n                                <img src=\"/lock.png\" />\r\n                                \r\n                    {\r\n                        lockerListEnabled ? <Grid className={isMobile ? `${mobileClasses.root} grid `  : \"grid\"} style={{marginTop:40}} item xs={12} sm={12} md={12} >\r\n                        <Card className=\"card\">\r\n                            <CardHeader\r\n                                className={dashboardClasses.cardHeader}\r\n                                title=\"Locked Token List\"\r\n                            />\r\n                            <CardContent >\r\n                            {/* <TextField\r\n                                id=\"outlined-search\"\r\n                                label=\"Search other wallet\"\r\n                                type=\"search\"\r\n                                variant=\"standard\"\r\n                                fullWidth={true}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onKeyPress={searchOtherWallet}\r\n                                value={searchWallet}\r\n                                onChange={onChangeSearchWallet}\r\n                                error={searchOtherWalletError}\r\n                                helperText={searchHelperText}\r\n                            /> */}\r\n                                {data.length == 0 && \r\n                                <div className=\"text-center\" style={{width:'100%', padding:\"20px 0px\"}}>\r\n                                    <img src=\"/mylock.png\" alt=\"My Lock\" style={{height:200}}/>\r\n                                    <h2 style={{marginBottom:0}}>No Locked Coin</h2>\r\n                                    <p style={{color:'grey',margin:0}}>You have not locked up any coins yet.</p>\r\n                                </div>}\r\n                                {data.length != 0 && <TableContainer component={Paper}>\r\n                                    <Table aria-label=\"collapsible table\">\r\n                                        <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>No</TableCell>\r\n                                            <TableCell>Token</TableCell>\r\n                                            <TableCell align=\"right\">Tokens Locked</TableCell>\r\n                                            <TableCell align=\"right\">Liquidity Locked</TableCell>\r\n                                            <TableCell align=\"right\">Next Unlock</TableCell>\r\n                                            <TableCell align=\"right\"></TableCell>\r\n                                        </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                        {data.map((row, index) => (\r\n                                            <Row key={`lockToken-${index}`} row={row} index={index} />\r\n                                        ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>}\r\n                            </CardContent>\r\n                        </Card>\r\n                        \r\n                    </Grid> : <Loader value={loaderText} />\r\n                    }\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    \r\n                    {networks_data.find((item)=>item.name==network) && <div style={{textAlign:'center'}}><img style={{width:\"50px\"}} src={networks_data.find((item)=>item.name==network).url} alt=\"network\" /></div>}\r\n                    <h3 id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" style={{textAlign:'center', marginTop:0}}>\r\n                        {modalTitle}\r\n                    </h3>\r\n                    <p id=\"modal-modal-description\" sx={{ mt: 2 }} style={{textAlign:'center', fontSize:12, color:'grey'}}>\r\n                        {modalDes}\r\n                    </p>\r\n                    <Button variant=\"contained\" color=\"error\" style={{width:'100%'}} onClick={handleClose}>Close</Button>\r\n                </Box>\r\n            </Modal>\r\n            <Snackbar\r\n                open={snackbar}\r\n                autoHideDuration={600}\r\n                style={{width:100}}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Successfully Copied to Clipboard\"\r\n                // action={action}\r\n            />\r\n        </Container >\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    statistics: state.statistics,\r\n    walletAddress: state.walletAddress\r\n})\r\n\r\n//connect function INJECTS dispatch function as a prop!!\r\nexport default connect(mapStateToProps)(MyLockers);"],"sourceRoot":""}