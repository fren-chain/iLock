{"version":3,"sources":["components/Loader.js","api.js","pages/Dashboard.js"],"names":["alterLoaderText","Loader","_ref","isLoading","useStyles","base","_React$useState","React","useState","_React$useState2","_slicedToArray","loaderText","setLoaderText","_React$useState3","_React$useState4","loaderBottomText","setLoaderBottomText","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","l_t","lb_t","wrap","_context","prev","next","console","log","length","abrupt","stop","_x","_x2","apply","arguments","_jsxs","Fragment","children","_jsx","Stack","spacing","style","padding","margin","Skeleton","variant","sx","fontSize","Typography","component","alignItems","textAlign","dangerouslySetInnerHTML","__html","width","height","getERC20Metadata","_callee2","provider","_chain","_tokenAddress","address","result","decimals","symbol","name","balanceOf","web3","contract","_web","_contract","_context2","Web3","t0","eth","Contract","erc20Abi","t1","sent","t2","methods","call","parseFloat","t3","t4","t5","t6","t7","_x3","_x4","_x5","_x6","getTokenMetadata","_ref3","_callee3","_context3","_x7","_x8","connect","state","statistics","props","_useWeb3React","useWeb3React","account","connector","chainId","_props$match$params","active","match","params","lockId","chainName","activeStep","setActiveStep","open","setOpen","_useState","_useState2","lockerListEnabled","_React$useState5","_React$useState6","snackbar","setSnackbar","_React$useState7","_React$useState8","_useState3","_useState4","network","setNetwork","_useState5","_useState6","modalTitle","setModalTitle","_useState7","_useState8","modalDes","setModalDes","_useState9","_useState10","tokenContract","setTokenContract","_useState11","_useState12","holder","setHolder","_useState13","_useState14","subMethod","setSubMethod","_useState15","_useState16","lockAmount","setLockAmount","_useState17","_useState18","tokenDecimals","setTokenDecimals","_useState19","_useState20","tokenSymbol","setTokenSymbol","_useState21","_useState22","setTokenName","_useState23","_useState24","etherBalance","setEtherBalance","_useState25","_useState26","tokenBalance","setTokenBalance","_useState27","_useState28","setTokenAllowance","_useState29","undefined","_useState30","withdrawDate","setWithdrawDate","_useState31","_useState32","dateUseful","setDateUseful","_useState33","_useState34","addressDemand","setAddressDemand","_useState35","_useState36","isAllowed","setIsAllowed","_useState37","_useState38","setLockAmountMax","theme","useTheme","classes","pools","mobileClasses","mobile","dashboardClasses","dashboard","isMobile","useMediaQuery","token","useSelector","userBalance","tokenData","data","tokenLists","test_data","dispatch","useDispatch","_React$useState9","tokenAddress","_React$useState10","values","setValues","selectToken","checkEtherBalance","_callee4","_context4","getEtherBalance","then","_ref4","ebf","fetchEtherBalance","handleNext","_ref5","_callee5","currentNetworkData","NETWORK","params_network_add","_provider","_context5","window","ethereum","networkData","filter","each","network_hex_to_dec","chainData","request","method","concat","handleOpen","prevActiveStep","rpcUrls","rpc_","network_","nativeCurrency","network_symbols","network_decimals","blockExplorerUrls","explorer_","iconUrls","icons_","code","getProvider","_objectSpread","catch","error","useEffect","_callee6","_context6","toggleDrawer","_callee7","able","_tokenBalance","data_","_provider2","allowanceAmount","allowanceAmountFormatted","lockAmountFormatted","_context7","getETHtoChecksum","getTokenBalance","_getUIfmt","toString","Math","pow","toFixed","alert","type","USERBALANCE","payload","t8","t9","t10","getERC20allowance","t11","t12","t13","t14","lockerAddress","t15","t16","finish","handleAllowance","_ref8","_callee8","e","_tokenBalance2","_provider3","allowanceAmountFormatted_UI","_context8","getERC20balance","_getBN","handleChange","_ref9","_callee9","event","contract_address","contractData","_context9","target","value","CHAINDATA","find","item","chain","TOKENDATA","JSON","parse","handleMouseDownPassword","preventDefault","eb","handleLockToken","_ref10","_callee12","nextMsg","_nextMsg","nextCount","_nextCount","_tokenBalance3","tokenBalanceFormatted","_context12","_callee11","ctr","tb","ta","count_lt","_context11","setTimeout","_x13","_x14","_x15","_callee10","lb","la","string_to_add","_context10","document","getElementById","_x10","_x11","_x12","_x9","handleClose","handleHolder","_ref11","_callee13","_context13","_x16","showLockup","_ref12","_callee14","_context14","history","push","toLowerCase","_x17","_x18","depositToken","_ref13","_callee18","tokenAmount","isEth","unlockDate","amountFormatted","amountFormatted_UI","balanceChecker","allSet","gasLimit","depositNetwork","depositHolder","depositCreator","restore","_context18","w3","_ref14","_callee16","W3","block","_context16","getBlock","deposit","_ref15","_callee15","results","newData","_context15","tokenId","getData","TOKENLISTS","_x21","_x20","blur","focus","focusVisible","_ref16","_callee17","_context17","_x19","handleNativeTokenMismatch","_ref17","_callee19","_context19","_x22","approveToken","_ref18","_callee20","ap","_context20","approve","status","networks_data","Row","nextUnlock","index","row","lockedTokenAmount","lockedLiquidity","currentTime","Date","now","map","timestamp","isWithdrawn","isLiquidity","amount","_Fragment","TableRow","borderBottom","TableCell","scope","cursor","onClick","CopyToClipboard","text","onCopy","Tooltip","title","IconButton","ContentCopyIcon","align","CheckIcon","toDateString","Button","color","Container","className","root","maxWidth","paddingLeft","paddingRight","Box","info","Grid","container","direction","justifyContent","marginTop","xs","sm","md","display","Link","href","websiteURI","underline","button","PROJECTNAME","Card","CardHeader","cardHeader","CardContent","src","RadioGroup","defaultValue","SwipeableViews","axis","onChangeIndex","step","networkSelector","border","borderRadius","networkImage","url","alt","networkTitle","ui_friendly_networks","networkDes","subtitle","backgroundColor","subData","subTitle","fillCircle","emptyCircle","FormControl","m","InputLabel","htmlFor","OutlinedInput","id","onChange","endAdornment","InputAdornment","position","onKeyDown","onMouseDown","edge","Search","label","textLeft","tokenImage","tokenTitle","textRight","balanceContainer","TextField","InputLabelProps","shrink","inputprops","min","max","InputProps","handleLocker","marginBottom","_amount","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","renderInput","datetimepicker","currentDate","handleDate","disabled","MobileStepper","mobileStepper","steps","nextButton","size","maxSteps","KeyboardArrowLeft","KeyboardArrowRight","backButton","TableContainer","Paper","Table","TableHead","TableBody","Modal","onClose","top","left","transform","bgcolor","boxShadow","p","mt","Snackbar","autoHideDuration","message"],"mappings":"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","file":"static/js/4.1ae340b8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\nimport clsx from \"clsx\";\r\nimport Paper from \"@mui/material/Box\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport useStyles from \"../assets/styles\";\r\nimport SpinnerLogoWhite from \"../assets/img/spinner-logo-white.png\";\r\n\r\nexport let alterLoaderText;\r\nconst Loader = ({ isLoading }) => {\r\n    const classes = useStyles.base();\r\n    const [loaderText,setLoaderText] = React.useState(\"\");\r\n    const [loaderBottomText,setLoaderBottomText] = React.useState(\"\");\r\n    alterLoaderText = async function(l_t,lb_t) {\r\n      console.log(\"l_t: \",l_t);\r\n      await setLoaderText(l_t);\r\n      if(lb_t) {\r\n        if(lb_t.length>0) {\r\n          await setLoaderBottomText(lb_t);\r\n        }\r\n      }\r\n      return l_t;\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n          <Stack spacing={1} style={{padding:50,margin:50}}>\r\n          {/* For variant=\"text\", adjust the height via font-size */}\r\n            <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\r\n          {/* For other variants, adjust the size with `width` and `height` */}\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <div dangerouslySetInnerHTML={{ __html: loaderText ? loaderText : 'SCANNING BLOCKCHAIN' }} />\r\n          </Typography>\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <Skeleton variant=\"circular\" width={40} height={40} /> \r\n          </Typography>\r\n          <Skeleton variant=\"rectangular\" width={210} height={60} />\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <div dangerouslySetInnerHTML={{ __html: loaderBottomText ? loaderBottomText : '...' }} />\r\n          </Typography>\r\n          <Skeleton variant=\"rounded\" width={210} height={60} />\r\n          </Stack>\r\n      </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import axios from 'axios';\r\nimport {\r\n    Multicall\r\n  } from 'ethereum-multicall';\r\n\r\nimport { erc20Abi, lockerContractAbi, lockerAddress } from \"./constants\";\r\nimport erc721Abi from \"./erc721_abi.json\";\r\nimport Web3 from \"web3\";\r\nimport dexscreener from 'dexscreener-api';\r\nimport { walletAddress } from './redux/reducers';\r\n\r\nimport { provider, explorer, serverApi, dexscreenerUrl_ } from \"./web3.js\";\r\n\r\nconst apiKey = 'SvMhtTsmQ239NmpwWjnnLWXtag5Jt8wYp7NF8F3Tear1QSaDRl9gnM34JZVXdLFV';\r\nconst apiConfig = {\r\n    headers: {\r\n        'x-api-key': apiKey\r\n    }\r\n}\r\nconst serverUrl = 'https://deep-index.moralis.io/api/v2';\r\n\r\nexport const getTokenPrice = async function (_chain, _tokenAddress) {\r\n    let price;\r\n    try {\r\n        const pairsResponse = await dexscreener.getPairInformationByChain(_chain, _tokenAddress); console.log(\"pairsResponse: \",pairsResponse);\r\n        price = 0;\r\n    } catch (e) {\r\n        price = 0;\r\n        {/*\r\n            *   // Get pair information by chain\r\n            *   // // Get pairs matching base token address\r\n            *   // const tokensResponse = await getPairsMatchingBaseTokenAddress(\"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\r\n            *   // // Search for pairs matching query\r\n            *   // const searchResponse = await searchPairsMatchingQuery(\"WBNB USDC\");\r\n            *   // await axios.get(`${serverUrl}/erc20/${_tokenAddress}/price?chain=${_chain}`, apiConfig);\r\n        */}\r\n    }\r\n    return price && price.data;\r\n}\r\nexport const getERC20Metadata = async function (provider, _chain, _tokenAddress, address) {\r\n    console.log(\"getERC20Metadata: \",_chain, _tokenAddress);\r\n    let result; let decimals; let symbol; let name; let balanceOf;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(await erc20Abi, _tokenAddress);\r\n        decimals = await contract.methods[\"decimals\"]().call();\r\n        symbol = await contract.methods[\"symbol\"]().call();\r\n        balanceOf = await contract.methods[\"balanceOf\"](address).call();\r\n        name = await contract.methods[\"name\"]().call();\r\n        result = [{\r\n            \"balanceOf\":parseFloat(balanceOf),\r\n            \"balance\":parseFloat(balanceOf),\r\n            \"userBalance\":parseFloat(balanceOf),\r\n            \"decimals\":parseFloat(decimals),\r\n            \"symbol\":symbol,\r\n            \"tokenTitle\":name,\r\n            \"name\":name\r\n        }]; \r\n    } catch(e) {\r\n        console.log(\"booting the backup\");\r\n        try {\r\n            let web3 = new Web3(provider);\r\n            let contract = new web3.eth.Contract(await erc20Abi, _tokenAddress[0]);\r\n            decimals = await contract.methods[\"decimals\"]().call();\r\n            symbol = await contract.methods[\"symbol\"]().call();\r\n            balanceOf = await contract.methods[\"balanceOf\"](address).call();\r\n            name = await contract.methods[\"name\"]().call();\r\n            result = [{\r\n                \"balanceOf\":parseFloat(balanceOf),\r\n                \"balance\":parseFloat(balanceOf),\r\n                \"userBalance\":parseFloat(balanceOf),\r\n                \"decimals\":parseFloat(decimals),\r\n                \"symbol\":symbol,\r\n                \"tokenTitle\":name,\r\n                \"name\":name\r\n            }]; \r\n        } catch(e) {\r\n            console.log(e);\r\n        } finally {\r\n            console.log(\"result: \",result);\r\n            // eslint-disable-next-line\r\n            return result;\r\n        }\r\n    } finally {\r\n        console.log(\"result: \",result);\r\n        // eslint-disable-next-line\r\n        return result;\r\n    };\r\n}\r\nexport const getTokenMetadata = async function (_chain, _tokenAddress) {\r\n        console.log(\"getTokenMetadata: \",_chain, _tokenAddress);\r\n    // replace moralis\r\n    // 1) call() to contract => BASE_URI \r\n    // 2) call() to contract => TOKEN_URI||TOKEN_ID \r\n    // = async (provider, id, account, network) => {\r\n    let result; let decimals; let symbol; let name;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        // let ERC721_contract = new web3.eth.Contract(erc721Abi, _tokenAddress);\r\n        let contract = new web3.eth.Contract(erc20Abi, _tokenAddress);\r\n        decimals = await contract.methods[\"decimals\"]().call();\r\n        symbol = await contract.methods[\"symbol\"]().call();\r\n        name = await contract.methods[\"name\"]().call();\r\n        result = {\r\n            \"decimals\":decimals,\r\n            \"symbol\":symbol,\r\n            \"name\":name\r\n        };\r\n        console.log(\"result: \",result);\r\n        return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\nexport const getMyLockers = async function (account, network) {\r\n    console.log(\"getMyLockers: \",account, network);\r\n    let result; let _my_locks;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc20Abi, lockerAddress[network]);\r\n        _my_locks = await contract.methods[\"_my_locks\"](account).call();\r\n        let _my_lockers = [];\r\n        for(let m = 0; m < _my_locks.length; m++) {\r\n            _my_lockers.push(_my_locks[m]);\r\n        };\r\n        let i = 0;\r\n        while(i<_my_lockers.length) {\r\n            if(i==_my_lockers.length-1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            };\r\n        };\r\n        _my_locks = await contract.methods[\"_my_locks\"](account).call();\r\n        result = {\r\n            \"_my_locks\":_my_locks\r\n        };\r\n        console.log(\"result: \",result);\r\n        return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\nexport const getNFTTokenMetadata = async function (_chain, _tokenAddress) {\r\n        console.log(\"getTokenMetadata: \",_chain, _tokenAddress);\r\n    // replace moralis\r\n    // 1) call() to contract => BASE_URI \r\n    // 2) call() to contract => TOKEN_URI||TOKEN_ID \r\n    // = async (provider, id, account, network) => {\r\n    let result;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc721Abi, _tokenAddress);\r\n        result = await contract.methods[\"tokenURI\"](1).call();\r\n        console.log(\"result: \",result);\r\n        return result.status;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\n\r\nexport const getTokenBalance = async function (provider, _chain, _tokenAddress, _walletAddress) {\r\n        console.log(\"getTokenBalance: \",_chain, _tokenAddress, _walletAddress);\r\n    // replace moralis\r\n    // call() to explorer => get_balance()\r\n    let result;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc20Abi, _tokenAddress);\r\n        result = await contract.methods[\"balanceOf\"](_walletAddress).call();\r\n        console.log(\"result: \",result);\r\n        return result.status;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const balances = await axios.get(`${serverUrl}/${_walletAddress}/erc20?chain=${_chain}&token_addresses=${_tokenAddress}`, apiConfig);\r\n    // return balances.data;\r\n}\r\n\r\nexport const runContractFunction = async function (_chain, _contractAddress, _functionName, _abi, _params) {\r\n        console.log(\"runContractFunction: \",_chain, _contractAddress, _functionName, _abi, _params);\r\n    // replace moralis\r\n    // injected web3 via ethersJS||web3.js\r\n    let result;\r\n    try {\r\n        // result = await axios.post(`${serverUrl}/${_contractAddress}/function?chain=${_chain}&function_name=${_functionName}`, {\r\n        //     \"abi\": _abi,\r\n        //     \"params\": _params\r\n        // }, apiConfig);\r\n    } catch (e) {\r\n        result = null;\r\n    }\r\n    return result ? result.data : null;\r\n}\r\n\r\nexport const getCurrentFee = async function (_chain, _tokenAddress, _walletAddress) {\r\n    const dynamicFeeAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getDynamicFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    if (await isExcludedFromFee(_chain, _tokenAddress, _walletAddress)) return 0;\r\n    const dynamicFee = await runContractFunction(_chain, _tokenAddress, 'getDynamicFee', dynamicFeeAbi, {from:_walletAddress});\r\n    return dynamicFee;\r\n}\r\n\r\nexport const isExcludedFromFee = async function (_chain, _tokenAddress, _walletAddress) {\r\n    const isExcludedFromFeeAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    return await runContractFunction(_chain, _tokenAddress, 'isExcludedFromFee', isExcludedFromFeeAbi, {account:_walletAddress});\r\n}\r\n\r\nexport const getCommonFee = async function (_chain, _tokenAddress) {\r\n    const liquidityAndMarketingFeeAbi = [{\"inputs\":[],\"name\":\"_liquidityAndMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const taxFeeAbi = [{\"inputs\":[],\"name\":\"_taxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    let commonFee = 0;\r\n    await Promise.all([\r\n        runContractFunction(_chain, _tokenAddress, '_liquidityAndMarketingFee', liquidityAndMarketingFeeAbi, {}),\r\n        runContractFunction(_chain, _tokenAddress, '_taxFee', taxFeeAbi, {})\r\n    ]).then(results => results.map(each => commonFee += Number(each)));\r\n    return commonFee;\r\n}\r\n\r\nexport const burntAndLeftTokenPercent = async function (_chain, _tokenAddress) {\r\n    const burntVsCirculatingSupplyAbi = [{\"inputs\":[],\"name\":\"burntVsCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burnt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"circulating\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const data = await runContractFunction(_chain, _tokenAddress, 'burntVsCirculatingSupply', burntVsCirculatingSupplyAbi);\r\n    return {burnt: Number(data[0]), left: Number(data[1]), leftPercent: data[1] / (Number(data[0]) + Number(data[1])) * 100};\r\n}\r\n\r\nexport const totalFees = async function (_chain, _tokenAddress) {\r\n    const totalFeesAbi = [{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const data = await runContractFunction(_chain, _tokenAddress, 'totalFees', totalFeesAbi);\r\n    return data;\r\n}\r\n\r\nexport const getTransactions = async function (_chain, _walletAddress) {\r\n    const transactions = await axios.get(`${serverUrl}/${_walletAddress}/erc20/transfers?chain=${_chain}&offset=0&oder=desc`, apiConfig);\r\n    return transactions.data;\r\n}\r\n\r\nexport const getLogsByAddress = async function (_chain, _tokenAddress) {\r\n    // replace moralis\r\n    // enable param *(topic_hash) { user supplied topic hash }\r\n    // add back (events) fn() from iStack tests\r\n    let offset = 0;\r\n    const response = await axios.get(`${serverUrl}/${_tokenAddress}/logs?chain=${_chain}&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&offset=${offset}&oder=desc`, apiConfig);\r\n    let logs = response.data.result;\r\n    const total = response.data.total;\r\n    const pages = Math.ceil(total / 500);\r\n    let page = 1;\r\n    let getLogFunctions = [];\r\n    while (page < pages) {\r\n        offset = page * 500;\r\n        getLogFunctions.push(axios.get(`${serverUrl}/${_tokenAddress}/logs?chain=${_chain}&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&offset=${offset}&oder=desc`, apiConfig));\r\n        page++;\r\n    }\r\n    if (getLogFunctions.length) {\r\n        await Promise.all(getLogFunctions).then(results => {\r\n            results.map(each => {\r\n                logs = logs.concat(each.data.result);\r\n            })\r\n        })\r\n    }\r\n    return logs;\r\n}\r\n\r\nfunction getAddress(topic) {\r\n    if (topic === null || topic === '') return '';\r\n    return `0x${topic.substring(topic.length - 40)}`;\r\n}\r\n\r\nfunction filterLogs(logs, _walletAddress) {\r\n    return logs.filter(each => getAddress(each.topic1) === _walletAddress.toLowerCase() || getAddress(each.topic2) === _walletAddress.toLowerCase());\r\n}\r\n\r\nfunction getValue(topic) {\r\n    return parseInt(topic, 16);\r\n}\r\n\r\nasync function calculateBuySell(logs, _chain, _tokenAddress, _walletAddress) {\r\n    let buy = 0, sell = 0, isFee = true;\r\n    if (await isExcludedFromFee(_chain, _tokenAddress, _walletAddress)) isFee = false;\r\n    logs.map(each => {\r\n        if (getAddress(each.topic1) === _walletAddress.toLowerCase()) {\r\n            if (isFee) {\r\n                sell += getValue(each.data) / 97 * 100;\r\n            } else {\r\n                sell += getValue(each.data);\r\n            }\r\n        } else buy += getValue(each.data);\r\n    })\r\n    let result = {buy: buy, sell: sell};\r\n    return result;\r\n}\r\n\r\nexport const walletExchange = async function(_chain, _tokenAddress, _walletAddress) {\r\n    let logs;\r\n    await getLogsByAddress(_chain, _tokenAddress).then(data=> {\r\n        logs = filterLogs(data, _walletAddress);\r\n    })\r\n    return await calculateBuySell(logs, _chain, _tokenAddress, _walletAddress);\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n// ** Import Material UI Components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Modal from '@mui/material/Modal';\r\nimport { RadioGroup } from \"@mui/material\";\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Search from '@mui/icons-material/Search';\r\nimport { Snackbar } from \"@mui/material\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { TextField, Table, TableHead, TableBody, TableRow, TableCell, TableContainer, Paper, Box, IconButton } from \"@mui/material\";\r\nimport Link from \"@mui/material/Link\";\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport { Tooltip } from \"@mui/material\";\r\nimport useStyles from \"../assets/styles\";\r\nimport { TOKENDATA, USERBALANCE, TOKENLISTS } from \"../redux/constants\";\r\nimport { CHAINDATA, networks_data, explorer_, rpc_, icons_, network_, lockerAddress, network_symbols, network_decimals, network_hex_to_dec, PROJECTNAME, websiteURI, ui_friendly_networks } from \"../constants\";\r\nimport { getTokenMetadata, getERC20Metadata } from \"../api\";\r\nimport { toggleDrawer } from '../components/Header';\r\nimport Loader from '../components/Loader';\r\nimport { alterLoaderText } from '../components/Loader';\r\nimport { deposit, approve, allowance, getTokenBalance, getERC20balance, getERC20allowance, getData, explorer, updateProfile, getEtherBalance, w3, getETHtoChecksum, _toBN, _getBN, _getUIfmt } from \"../web3\"\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    const { account, connector, chainId, active } = useWeb3React();\r\n    const { lockId, chainName } = props.match.params;\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [lockerListEnabled, setLockerListEnabled] = useState(false);\r\n    const [snackbar, setSnackbar] = React.useState(false);\r\n    const [loaderText, setLoaderText] = React.useState(\"\");\r\n    const [network, setNetwork] = useState(\"\");\r\n    const [modalTitle, setModalTitle] = useState(\"\");\r\n    const [modalDes, setModalDes] = useState(\"\");\r\n    const [tokenContract, setTokenContract] = useState(\"\");\r\n    const [holder, setHolder] = useState(\"\");\r\n    const [subMethod, setSubMethod] = useState(\"Project Tokens\");\r\n    const [lockAmount, setLockAmount] = useState(0);\r\n    const [tokenDecimals, setTokenDecimals] = useState(0);\r\n    const [tokenSymbol, setTokenSymbol] = useState(\"\");\r\n    const [tokenName, setTokenName] = useState(\"\");\r\n    const [etherBalance, setEtherBalance] = useState(0);\r\n    const [tokenBalance, setTokenBalance] = useState(0);\r\n    const [tokenAllowance, setTokenAllowance] = useState(0);\r\n    const [withdrawDate, setWithdrawDate] = useState(undefined);\r\n    const [dateUseful, setDateUseful] = useState(false);\r\n    const [addressDemand, setAddressDemand] = useState(false);\r\n    const [isAllowed, setIsAllowed] = useState(0); {\r\n        /*\r\n                // 0: checking, 1: not allowed, 2: allowed\r\n            */\r\n    }\r\n    const [lockAmountMax, setLockAmountMax] = useState(false);\r\n    const maxSteps = 4;\r\n    const theme = useTheme();\r\n    const classes = useStyles.pools();\r\n    const mobileClasses = useStyles.mobile();\r\n    const dashboardClasses = useStyles.dashboard();\r\n    const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n    const userBalance = useSelector(state => state.userBalance);\r\n    const token = useSelector(state => state.tokenData);\r\n    const data = useSelector(state => state.tokenLists);\r\n    const test_data = useSelector(state => state);\r\n    console.log(\"test_data: \", test_data, test_data.tokenData);\r\n    const dispatch = useDispatch();\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #fff',\r\n        borderRadius: '10px',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n\r\n    const [values, setValues] = React.useState({\r\n        tokenAddress: \"\",\r\n    });\r\n\r\n    const selectToken = async () => {\r\n        console.log(\"activeStep: \", activeStep);\r\n    };\r\n    const checkAllowance = async (token, account, network) => {\r\n        allowance(token, account, network).then(results => {\r\n            setTokenAllowance(results);\r\n            console.log(\"allowance: \", results, tokenAllowance);\r\n            return results;\r\n        });\r\n    };\r\n    const checkEtherBalance = async (provider, account) => {\r\n        getEtherBalance(provider, account, network).then(async (ebf) => {\r\n            console.log(\"ethereumBalance: \", ebf[0], ebf[1], ebf[2]);\r\n            fetchEtherBalance(ebf[2]);\r\n        });\r\n    };\r\n    const handleNext = async () => {\r\n        if (account) {\r\n            const provider = window.ethereum;\r\n            checkEtherBalance(provider, account);\r\n            const currentNetworkData = networkData.filter((each) => each.name === network);\r\n            try {\r\n                let NETWORK = chainId == network_hex_to_dec[currentNetworkData[0].chainData.chainId] ? true : false;\r\n                console.log(\"NETWORK: \", NETWORK, \"\\n existing: \", chainId, \"\\n requested \", network_hex_to_dec[currentNetworkData[0].chainData.chainId]);\r\n                if (NETWORK) {\r\n                    //\r\n                    console.log(\"You are already on the proper network:  \", network);\r\n                } else {\r\n                    await provider.request({\r\n                        method: 'wallet_switchEthereumChain',\r\n                        params: [{ chainId: currentNetworkData[0].chainData.chainId }],\r\n                    });\r\n                    console.log(\"You have successfully switched to \", network);\r\n                }\r\n                if (activeStep == 0) {\r\n                    if (account === undefined) {\r\n                        setModalTitle(\"Please connect Wallet\");\r\n                        setModalDes(`Before you can create a lock on ${network}, you must connect your wallet to ${network} network on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                        handleOpen();\r\n                    } else {\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    }\r\n                } else if (activeStep >= 2) {\r\n                    if (addressDemand && tokenContract == undefined || addressDemand && tokenContract == \"\") {\r\n                        setModalTitle(\"Please select Token\");\r\n                        setModalDes(`Before you can create a lock on ${network}, you must select token on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                        handleOpen();\r\n                    } else {\r\n                        console.log(activeStep);\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    }\r\n                } else {\r\n                    console.log(\"activeStep: \", activeStep);\r\n                    if (addressDemand && tokenContract == undefined || addressDemand && tokenContract == \"\") {\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                        // \r\n                    } else {\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 2);\r\n                    };\r\n                }\r\n            } catch (switchError) {\r\n                {\r\n                    /*\r\n                    // This error code indicates that the chain has not been added to MetaMask.\r\n                    */\r\n                }\r\n                try {\r\n                    const params_network_add = {\r\n                        chainId: currentNetworkData[0].chainData.chainId,\r\n                        rpcUrls: [rpc_[currentNetworkData[0].chainData.chainId]],\r\n                        chainName: network_[currentNetworkData[0].chainData.chainId],\r\n                        nativeCurrency: { name: network_symbols[currentNetworkData[0].chainData.chainId], decimals: network_decimals[currentNetworkData[0].chainData.chainId], symbol: network_symbols[currentNetworkData[0].chainData.chainId] },\r\n                        blockExplorerUrls: [explorer_[currentNetworkData[0].chainData.chainId]],\r\n                        iconUrls: [icons_[currentNetworkData[0].chainData.chainId]]\r\n                    };\r\n                    console.log(\"params_network_add: \", switchError.code, params_network_add);\r\n                    if (switchError.code === 4902) {\r\n                        console.log(\"This network is not available in your metamask, please add it\");\r\n                        let provider = await connector.getProvider();\r\n                        console.log(\"Switch Request has rejected:\", \"\\n network: \", network, \"\\n chainId:\", chainId);\r\n                        console.log(\"chainId: \", chainId);\r\n                        provider.request({\r\n                            method: 'wallet_addEthereumChain',\r\n                            params: [{ ...params_network_add }]\r\n                        }).catch((error) => {\r\n                            console.log(\"provider_err: \", error);\r\n                        });\r\n                    } else if (switchError.code === 4001) {\r\n                        console.log(\"Switch Request has rejected:\", \"\\n network: \", network, \"\\n chainId:\", chainId);\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    } else if (switchError.code === 4200) {\r\n                        console.log(\"You have succefully switched to \", network);\r\n                        if (activeStep == 0) {\r\n                            if (account === undefined) {\r\n                                setModalTitle(\"Please connect Wallet\");\r\n                                setModalDes(`Before you can create a lock on ${network}, you must connect your wallet to ${network} network on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                                handleOpen();\r\n                            } else {\r\n                                setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                            }\r\n                        } else if (activeStep == 2) {\r\n                            if (addressDemand && tokenContract == undefined || addressDemand && tokenContract == \"\") {\r\n                                setModalTitle(\"Please select Token\");\r\n                                setModalDes(`Before you can create a lock on ${network}, you must select token on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                                handleOpen();\r\n                            } else {\r\n                                console.log(activeStep);\r\n                                setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                            }\r\n                        } else {\r\n                            if (addressDemand && tokenContract == undefined || addressDemand && tokenContract == \"\") {\r\n                                setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                                // \r\n                            } else {\r\n                                setActiveStep((prevActiveStep) => prevActiveStep + 2);\r\n                            };\r\n                        };\r\n                    };\r\n                } catch (e) {\r\n                    console.log(\"err: \", e);\r\n                };\r\n            };\r\n        };\r\n    };\r\n\r\n    useEffect(async () => {\r\n        setLoaderText(\" ... \");\r\n        alterLoaderText(loaderText);\r\n        let able = false;\r\n        if (!network) {\r\n            return () => {\r\n                able = false;\r\n            };\r\n        } else {\r\n            if (!account) {\r\n                return () => {\r\n                    toggleDrawer();\r\n                    able = true;\r\n                };\r\n            } else {\r\n                return () => {\r\n                    able = false;\r\n                };\r\n            }\r\n        };\r\n    }, [account, network]);\r\n\r\n    useEffect(async () => {\r\n        let able = false;\r\n        if (!account) {\r\n                setIsAllowed(0);\r\n                alterLoaderText(\"Connect Wallet\");\r\n                able = false;\r\n                 return able;\r\n        } else if (account && !network && !tokenContract) {\r\n                able = false;\r\n                setIsAllowed(0);\r\n                alterLoaderText(\"Select Network\");\r\n                return able;\r\n        } else if (account && network && !tokenContract) {\r\n                able = false;\r\n                setIsAllowed(0);\r\n                alterLoaderText(\"Make a selection\");\r\n                return able;\r\n        } else {\r\n            try {\r\n                let provider = await connector.getProvider();\r\n                console.log(\"ETHtoChecksum: \", await getETHtoChecksum(provider, tokenContract));\r\n                const tokenBalance = await getTokenBalance(provider, await getETHtoChecksum(provider, tokenContract), account, network);\r\n                let CHECKED=false; \r\n                let data_ = await _getUIfmt(tokenBalance.toString(), tokenDecimals)\r\n                console.log(\"tokenBalance: \", tokenBalance, data_, (test_data.userBalance / Math.pow(10, tokenDecimals)).toFixed(2));\r\n                // eslint-disable-next-line\r\n                window.alert(\"Token Found! Balance: \" + (test_data.userBalance ? test_data.userBalance : tokenBalance / Math.pow(10, tokenDecimals)).toFixed(2));\r\n                dispatch({ type: USERBALANCE, payload: tokenBalance });\r\n            } catch (e) {\r\n                console.log(e);\r\n                window.alert(\"Token not found, please try again...\");\r\n            } finally {\r\n                if (!lockAmount) {\r\n                    window.alert(\"Awesome! Let's continue to create your iLocker smart contract...\");\r\n                } else {\r\n                    try {\r\n                        let provider = await connector.getProvider();\r\n                        console.log(\"ETHtoChecksum: \", await getETHtoChecksum(provider, tokenContract));\r\n                        const allowanceAmount = await getERC20allowance(provider, await getETHtoChecksum(provider, tokenContract), account, lockerAddress[network], network);\r\n                        const allowanceAmountFormatted = await _getUIfmt(allowanceAmount.toString(), tokenDecimals);\r\n                        const lockAmountFormatted = (lockAmount).toFixed(2).toString();\r\n                        console.log(\"allowanceAmount/lockAmount: \", lockAmountFormatted, allowanceAmountFormatted, parseFloat(allowanceAmount), lockAmount * 10 ** tokenDecimals);\r\n                        console.log(parseFloat(allowanceAmountFormatted) >= parseFloat(lockAmountFormatted), parseFloat(allowanceAmount) >= parseFloat(lockAmount * 10 ** tokenDecimals));\r\n                        setTokenAllowance(allowanceAmount);\r\n                        if (parseFloat(allowanceAmountFormatted) >= parseFloat(lockAmountFormatted)) {\r\n                            setIsAllowed(2);\r\n                            console.log(\"approved: \", allowanceAmount);\r\n                        } else {\r\n                            setIsAllowed(1);\r\n                            console.log(\"!approved: \", allowanceAmount);\r\n                        };\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    };\r\n                };\r\n            };\r\n        };\r\n    }, [account, tokenContract, connector, network]);\r\n\r\n    const handleAllowance = async (e) => {\r\n        if (!account || !tokenContract) return;\r\n        setIsAllowed(0);\r\n        try {\r\n            let provider = await connector.getProvider();\r\n            const tokenBalance = await getERC20balance(provider, tokenContract, account, network);\r\n            console.log(\"tokenBalance: \", tokenBalance);\r\n            dispatch({ type: USERBALANCE, payload: tokenBalance });\r\n        } catch (e) {\r\n            console.log(e);\r\n        } finally {\r\n            if (!lockAmount) {\r\n                //\r\n            } else {\r\n                try {\r\n                    let provider = await connector.getProvider();\r\n                    const allowanceAmount = await getERC20allowance(provider, tokenContract, account, lockerAddress[network], network);\r\n                    console.log(\"allowanceAmount/lockAmount: \", parseFloat(allowanceAmount), lockAmount * 10 ** tokenDecimals, parseFloat(allowanceAmount) >= parseFloat(lockAmount * 10 ** tokenDecimals));\r\n                    setTokenAllowance(allowanceAmount);\r\n                    let allowanceAmountFormatted = await _getBN(allowanceAmount, tokenDecimals);\r\n                    let allowanceAmountFormatted_UI = await _getUIfmt(allowanceAmount, tokenDecimals);\r\n                    console.log(\"allowanceAmountFormatted: \", allowanceAmount, parseFloat(allowanceAmountFormatted).toFixed(0), parseFloat(allowanceAmountFormatted_UI).toFixed(0));\r\n                    if (parseFloat(allowanceAmount) < parseFloat(lockAmount * 10 ** tokenDecimals)) {\r\n                        setIsAllowed(1);\r\n                    } else {\r\n                        setIsAllowed(2);\r\n                    };\r\n                } catch (e) {\r\n                    console.log(e);\r\n                };\r\n            };\r\n        };\r\n    };\r\n    const handleChange = async (event) => {\r\n        setValues({ tokenAddress: event.target.value });\r\n        if (event.target.value.length == 42) {\r\n            const contract_address = event.target.value;\r\n            try {\r\n                let provider = await connector.getProvider();\r\n                console.log(\"ETHtoChecksum: \", await getETHtoChecksum(provider, contract_address));\r\n                const contractData = await getERC20Metadata(provider, CHAINDATA.find((item) => item.name == network).chain, await getETHtoChecksum(provider, contract_address), await getETHtoChecksum(provider, account));\r\n                let tokenData = contractData;\r\n                dispatch({\r\n                    type: TOKENDATA,\r\n                    payload: tokenData[0]\r\n                });\r\n                setTokenDecimals(parseFloat(JSON.parse(contractData[0][\"decimals\"])).toFixed(0));\r\n                setTokenBalance(parseFloat(JSON.parse(contractData[0][\"balanceOf\"])).toFixed(2));\r\n                setTokenSymbol(contractData[0][\"symbol\"].toString());\r\n                setTokenName(contractData[0][\"name\"].toString());\r\n            } catch (e) {\r\n                //\r\n                console.log(\"e: \", e);\r\n            };\r\n        } else {\r\n            window.alert(\"Token not found, please try again...\");\r\n        };\r\n    };\r\n\r\n    const handleClickSearch = () => {\r\n        setValues({\r\n            ...values,\r\n            showPassword: !values.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    const fetchEtherBalance = (eb) => {\r\n        setEtherBalance(eb);\r\n    };\r\n\r\n    const selectLockAmountMax = () => {\r\n        const _amount = addressDemand ? (test_data.userBalance / Math.pow(10, tokenDecimals)).toFixed(2) : etherBalance;\r\n        setLockAmount(_amount);\r\n        console.log(\"_amount: \", lockAmount);\r\n        setLockAmountMax(true);\r\n    }\r\n\r\n    function handleLocker(e) {\r\n        setLockAmount(parseFloat(e.target.value));\r\n        setLockAmountMax(false);\r\n        handleAllowance(e);\r\n        console.log(\"_amount: \", lockAmount);\r\n    }\r\n    const handleLockAmount = (e) => {\r\n        console.log(\"e.target.value: \", e.target.value);\r\n        handleLocker(e);\r\n    };\r\n    const handleTokenDecimals = (e) => {\r\n        console.log(\"balance: \", test_data.userBalance / Math.pow(10, e.target.value));\r\n        setTokenDecimals(parseFloat(e.target.value).toFixed(0));\r\n    };\r\n    const handleLockToken = async (e) => {\r\n        async function nextMsg(ctr, lb, la) {\r\n            // eslint-disable-next-line\r\n            let string_to_add = lb == true ? \"there is no balance \" : \"there is a balance \";\r\n            // eslint-disable-next-line\r\n            string_to_add = la == true ? string_to_add + \"this wallet has a low iLocker allowance... \" : string_to_add + \"\";\r\n            let final_string = lb == true ? \"Transfer that Token to this wallet, \" : \"\";\r\n            final_string = la == true ? \"increase allowance on the next page, \" : \"\";\r\n            let provider = await connector.getProvider();\r\n            switch (ctr) {\r\n                case 0:\r\n                    break;\r\n                case 1:\r\n                    window.alert(\"Good news friends...\");\r\n                    nextCount(ctr, lb, la);\r\n                    break;\r\n                case 2:\r\n                    // eslint-disable-next-line\r\n                    window.alert(\"Token Found! \")\r\n                    nextCount(ctr, lb, la);\r\n                    break;\r\n                case 3:\r\n                    // eslint-disable-next-line\r\n                    if (la == true && lb == false) {\r\n                        window.alert(\"Savings Token Selected\");\r\n                        setTokenContract(await getETHtoChecksum(provider, document.getElementById(\"digital-asset-erc20-compatible-interchained-ilock\").value));\r\n                    } else if (la == false && lb == false) {\r\n                        window.alert(\"Savings Token Selected\");\r\n                        setTokenContract(await getETHtoChecksum(provider, document.getElementById(\"digital-asset-erc20-compatible-interchained-ilock\").value));\r\n                    } else if (la == true && lb == true) {\r\n                        window.alert(string_to_add);\r\n                    } else {\r\n                        window.alert(string_to_add);\r\n                    };\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n        nextMsg(0);\r\n        async function nextCount(ctr, tb, ta) {\r\n            let count_lt = ctr > 0 ? ctr : 0;\r\n            let limit_lt = 3;\r\n            count_lt = count_lt > limit_lt ? 0 : count_lt += 1;\r\n            setTimeout(await nextMsg, 1024, count_lt, parseFloat(tb) > 0, parseFloat(ta) > 0);\r\n        };\r\n        try {\r\n            if (!network) {\r\n                window.alert(\"Hey there friends, Network was not detected... Are your connected to a Blockchain via Web3?\");\r\n                return false;\r\n            };\r\n            if (!account) {\r\n                window.alert(\"Hi friends, Web3 was not detected... Are you connected to a network?\");\r\n                return false;\r\n            };\r\n            let provider = await connector.getProvider();\r\n            console.log(\"ETHtoChecksum: \", await getETHtoChecksum(provider, document.getElementById(\"digital-asset-erc20-compatible-interchained-ilock\").value));\r\n            let tokenBalance = await getTokenBalance(provider, await getETHtoChecksum(provider, document.getElementById(\"digital-asset-erc20-compatible-interchained-ilock\").value), account, network);\r\n            const allowanceAmount = await getERC20allowance(provider, await getETHtoChecksum(provider, document.getElementById(\"digital-asset-erc20-compatible-interchained-ilock\").value), account, lockerAddress[network], network);\r\n            const allowanceAmountFormatted = await _getUIfmt(allowanceAmount.toString(), tokenDecimals);\r\n            const tokenBalanceFormatted = await _getUIfmt(tokenBalance.toString(), tokenDecimals);\r\n            const lockAmountFormatted = (lockAmount).toFixed(2).toString();\r\n            console.log(\"tokenBalance: \", tokenBalance, tokenBalanceFormatted, parseFloat(tokenBalance) > 0);\r\n            console.log(\"allowanceAmount/lockAmount: \", lockAmountFormatted, allowanceAmountFormatted, parseFloat(allowanceAmount), lockAmount * 10 ** tokenDecimals);\r\n            if (parseFloat(allowanceAmount) > 0) {\r\n                window.alert(\"Savings Token Selected\");\r\n                setTokenContract(await getETHtoChecksum(provider, document.getElementById(\"digital-asset-erc20-compatible-interchained-ilock\").value));\r\n            } else {\r\n                await nextCount(0, parseFloat(tokenBalanceFormatted), parseFloat(allowanceAmountFormatted));\r\n            };\r\n        } catch (e) {\r\n            console.log(\"e: \", e);\r\n            window.alert(\"Valued member, Web3 could not detect this token... Please try another token.\");\r\n            //\r\n        };\r\n    };\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const handleSnackbarClose = () => setSnackbar(false);\r\n    const handleSnackbarOpen = () => setSnackbar(true);\r\n    const handleHolder = async (e) => {\r\n        setHolder(e.target.value);\r\n        console.log(\"holder: \", holder);\r\n    };\r\n\r\n    const handleDate = (value) => {\r\n        const currentDate = new Date();\r\n        console.log(\"DATETIME: \", value, value > currentDate)\r\n        if (value > currentDate) {\r\n            setDateUseful(true);\r\n            setWithdrawDate(value);\r\n        } else {\r\n            setDateUseful(false);\r\n        };\r\n    };\r\n\r\n    const showLockup = async (network, lockId) => {\r\n        props.history.push(`/lockers/${network.toLowerCase()}/${lockId}`);\r\n    };\r\n\r\n    const depositToken = async (e) => {\r\n        try {\r\n            let tokenAmount;\r\n            tokenAmount = lockAmount;\r\n            let isEth = false;\r\n            let unlockDate = withdrawDate;\r\n            if (addressDemand == true) {\r\n                isEth = false;\r\n            } else {\r\n                isEth = true;\r\n            };\r\n            if (holder == undefined) {\r\n                console.log(\"holder unset! Defaulting \", holder);\r\n                setHolder(account);\r\n            };\r\n            let amountFormatted = await _getBN(tokenAmount, tokenDecimals);\r\n            let amountFormatted_UI = await _getUIfmt(amountFormatted, tokenDecimals);\r\n            console.log(\"amountFormatted_UI: \", parseFloat(amountFormatted_UI).toFixed(0));\r\n            console.log(\"tokenBalance_UI: \", tokenBalance / 10 ** tokenDecimals);\r\n            console.log(\"etherBalance_UI: \", etherBalance, etherBalance / 10 ** tokenDecimals);\r\n            console.log(\"amountFormatted: \", amountFormatted);\r\n            const balanceChecker = isEth && etherBalance >= parseFloat(amountFormatted_UI).toFixed(0) ? true : tokenBalance / 10 ** tokenDecimals >= parseFloat(amountFormatted_UI).toFixed(0) ? true : false;\r\n            console.log(\"balance:\", balanceChecker);\r\n            if (balanceChecker == true) {\r\n                console.log(\"depositToken: \", amountFormatted, e.target.value, addressDemand, tokenAmount, unlockDate, account, holder, network);\r\n                let unset = true;\r\n                let allSet = false;\r\n                let gasLimit;\r\n                let depositAmount;\r\n                let depositNetwork;\r\n                let depositHolder;\r\n                let depositCreator;\r\n                if (unset) {\r\n                    depositAmount = tokenAmount;\r\n                    depositNetwork = network;\r\n                    depositHolder = holder;\r\n                    depositCreator = account;\r\n                    unset = false;\r\n                    allSet = true;\r\n                };\r\n                if (allSet) {\r\n                    let provider = await connector.getProvider();\r\n                    w3(provider, network).then(async (W3) => {\r\n                        let block = await W3.eth.getBlock(\"latest\");\r\n                        console.log(\"(w3) block: \", block);\r\n                        console.log(\"(w3) gasLimit: \", block.gasLimit);\r\n                        console.log(\"(ERC-20) tokenSymbol: \", tokenSymbol);\r\n                        gasLimit = block.gasLimit;\r\n                        deposit(provider, tokenSymbol, isEth, tokenContract, amountFormatted.toString(), unlockDate, depositCreator, depositHolder, depositNetwork, gasLimit).then(async (results) => {\r\n                            setWithdrawDate(undefined);\r\n                            setDateUseful(false);\r\n                            try {\r\n                                console.log(\"events: (Transfer)\", parseFloat(results[\"events\"][\"Transfer\"][\"returnValues\"].tokenId));\r\n                                console.log(\"events (LockCreated): \", parseFloat(results[\"events\"][\"LockCreated\"][\"returnValues\"].lockId));\r\n                                showLockup(network, parseFloat(results[\"events\"][\"Transfer\"][\"returnValues\"].tokenId));\r\n                            } catch (e) {\r\n                                dispatch({\r\n                                    type: TOKENDATA,\r\n                                    payload: {}\r\n                                })\r\n                                setActiveStep(0);\r\n                                window.alert(\"Transaction error, check block explorer for more intel.\");\r\n                                console.log(\"err: \", e);\r\n                            } finally {\r\n                                const newData = await getData(provider, account, network);\r\n                                dispatch({ type: TOKENLISTS, payload: newData });\r\n                            };\r\n                        });\r\n                    });\r\n                };\r\n            } else {\r\n                try {\r\n                    window.alert(\"ERC20 insufficient balance. Reduce amount or fund balance to process specified token amount.\");\r\n                    document.getElementById(\"iLockerDeploy\").blur();\r\n                    document.getElementById(\"standard-number-amount\").focus({ focusVisible: true });\r\n                    const restore = async () => {\r\n                        document.getElementById(\"iLockerDeploy\").focus();\r\n                    };\r\n                    setTimeout(restore, 7777);\r\n                } catch (e) {\r\n                    console.log(\"err: \", e);\r\n                };\r\n            };\r\n        } catch (e) {\r\n            console.log(e);\r\n        };\r\n    };\r\n\r\n    const handleNativeTokenMismatch = async (e) => {\r\n        if (e !== \"Project Tokens\") {\r\n            console.log(\"NATIVE: \", e);\r\n            setAddressDemand(false);\r\n        } else {\r\n            console.log(\"ERC-20: \", e);\r\n            setAddressDemand(true);\r\n        };\r\n    };\r\n\r\n    const approveToken = async () => {\r\n        let ap = lockAmount * 10 ** tokenDecimals;\r\n        let amountFormatted = await _getBN(lockAmount, tokenDecimals);\r\n        console.log(\"approving: \", lockAmount, tokenDecimals, ap, \"\\n \", amountFormatted);\r\n        let provider = await connector.getProvider();\r\n        approve(provider, tokenContract, account, amountFormatted, network).then((status) => {\r\n            if (status) setIsAllowed(2);\r\n        });\r\n    };\r\n\r\n    const networkData = networks_data;\r\n\r\n    const changeNetwork = (name) => {\r\n        setNetwork(name);\r\n    };\r\n\r\n    const Row = (props) => {\r\n        const { index, row } = props;\r\n        let nextUnlock, lockedTokenAmount = 0,\r\n            lockedLiquidity = false;\r\n        const currentTime = Date.now();\r\n        row.data.map(each => {\r\n            if (each.timestamp > currentTime / 1000) {\r\n                if (!nextUnlock) nextUnlock = each.timestamp;\r\n                else if (nextUnlock > each.timestamp) nextUnlock = each.timestamp;\r\n            }\r\n            if (!each.isWithdrawn && !each.isLiquidity) lockedTokenAmount += each.amount / Math.pow(10, each.decimals);\r\n            if (!each.isWithdrawn && each.isLiquidity) lockedLiquidity = true;\r\n        })\r\n\r\n        return ( <\r\n            >\r\n            <TableRow\r\n                sx={{ '& > *': { borderBottom: 'unset' } }}\r\n                > \r\n                    <TableCell>\r\n                        {index + 1}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        <span style={{cursor: \"pointer\"}} onClick={()=>showLockup(row.token.address,index + 1)}>{row.token.symbol}</span>\r\n                        <CopyToClipboard text={row.token.address} onCopy={()=>handleSnackbarOpen(true)}>\r\n                            <Tooltip title=\"copy\">\r\n                                <IconButton>\r\n                                    <ContentCopyIcon/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </CopyToClipboard>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{lockedTokenAmount.toFixed(2)}</TableCell>\r\n                    <TableCell align=\"right\">{lockedLiquidity && <CheckIcon />}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                        {nextUnlock ? new Date(nextUnlock).toDateString() : ''}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                        <Button variant=\"contained\" color=\"secondary\" style={{width: '100%'}}  onClick={() => showLockup(row.token.address,index + 1)}>View</Button>\r\n                    </TableCell>\r\n                </TableRow> {\r\n                /* <TableRow>\r\n                                    <TableCell colSpan={2}></TableCell>\r\n                                    <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\r\n                                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                                        <Box sx={{ margin: 1 }}>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                History\r\n                                            </Typography>\r\n                                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell>Withdrawable Date</TableCell>\r\n                                                        <TableCell align=\"right\">Amount</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                {row.vesting.map((vestingRow) => (\r\n                                                    <TableRow key={vestingRow[0]}>\r\n                                                        <TableCell component=\"th\" scope=\"row\">\r\n                                                            {new Date(vestingRow[0] * 1000).toDateString()}\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"right\">{(vestingRow[1] / Math.pow(10, row.decimals)).toFixed(2)}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </Box>\r\n                                    </Collapse>\r\n                                    </TableCell>\r\n                                </TableRow> */\r\n            } <\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <Container className={classes.root} maxWidth=\"lg\" style={{paddingLeft:20, paddingRight:20}}>\r\n            <Box className={classes.info}>\r\n                <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\" >\r\n                    <Grid className={isMobile ? `${mobileClasses.root} grid text-center`  : \"grid text-center\"} style={{marginTop:40}} item xs={12} sm={12} md={6} >\r\n                        <div style={{maxWidth:400, display:'inline-block', textAlign:'left'}}>\r\n                            <h1>Create your own custom TimeLock instantly.</h1>\r\n                            <p>All digital assets are locked into your very own TimeLock enabled smart contract which has been specially engineered by the top devs and tested to serve this purpose. TimeLock certified digital assets can only be withdrawn after the preset time lock expires.</p>\r\n                            <Link\r\n                                href={`${websiteURI}`}\r\n                                target=\"_blank\"\r\n                                color=\"blue\"\r\n                                underline=\"none\"\r\n                                className={classes.button}\r\n                            ><Button variant=\"contained\">Powered by {`${PROJECTNAME}`}</Button></Link>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid className={isMobile ? `${mobileClasses.root} grid`  : \"grid\"} style={{marginTop:40}} item xs={12} sm={12} md={6} >\r\n                        <Card className=\"card\">\r\n                            <CardHeader\r\n                                className={dashboardClasses.cardHeader}\r\n                                title=\"Create New iLock\"\r\n                            />\r\n                            <CardContent >\r\n                                <img src=\"/lock.png\" />\r\n                                <RadioGroup\r\n                                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                    defaultValue=\"female\"\r\n                                    name=\"radio-buttons-group\"\r\n                                >\r\n                                    <SwipeableViews\r\n                                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                                        index={activeStep}\r\n                                        onChangeIndex={handleStepChange}\r\n                                    >\r\n                                       \r\n                                        <div key={1} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <p style={{textAlign:'center'}} color=\"textSecondary\">\r\n                                                Choose the blockchain network.\r\n                                            </p>\r\n                                            {\r\n                                                networkData ? networkData.map((item)=>\r\n                                                <Grid\r\n                                                    className={classes.networkSelector}\r\n                                                    container\r\n                                                    direction=\"row\"\r\n                                                    justifyContent=\"space-evenly\"\r\n                                                    alignItems=\"center\"\r\n                                                    style={{padding:\"10px 0px\", border:item.name==network?\"1px solid #fff\":\"1px solid transparent\", borderRadius:'5px'}}\r\n                                                    key={item.name}\r\n                                                    onClick = {()=>changeNetwork(item.name)}\r\n                                                >\r\n                                                    <Grid item  xs={10} sm={11} md={11}>\r\n                                                        <Grid \r\n                                                            container\r\n                                                            direction=\"row\"\r\n                                                            alignItems=\"center\"\r\n                                                        >\r\n                                                            <Grid item className=\"text-center\" xs={3} sm={2} md={2}>\r\n                                                                <img className={dashboardClasses.networkImage} src={item.url} alt=\"network\" />\r\n                                                            </Grid>\r\n                                                            <Grid item   xs={9} sm={10} md={10}>\r\n                                                                <p  color=\"textSecondary\" className={dashboardClasses.networkTitle}>\r\n                                                                    {ui_friendly_networks[item.name]}\r\n                                                                </p>\r\n                                                                <p color=\"textSecondary\" className={dashboardClasses.networkDes}>\r\n                                                                    {item.subtitle}\r\n                                                                </p>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                    <Grid item  className=\"text-center\" xs={2} sm={1} md={1}>\r\n                                                        {item.name==network ? <div style={{width:\"20px\", height:'20px', borderRadius:\"10px\", backgroundColor:'#fff', display:'inline-block'}} />: <div style={{width:\"20px\", height:'20px', borderRadius:\"10px\", border:'1px solid #fff', display:'inline-block'}} />}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                )\r\n                                            : <></> }\r\n                                        </div>\r\n                                        <div key={2} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <p style={{textAlign:'center'}} color=\"textSecondary\">\r\n                                                Select the type of token you would like to create a lock for.\r\n                                                You can create multiple locks with different settings for each one.\r\n                                            </p>\r\n                                            {\r\n                                                network !=\"\" && networkData.find((item)=>item.name==network).subData.map((each)=><Grid\r\n                                                className={classes.networkSelector}\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-evenly\"\r\n                                                alignItems=\"center\"\r\n                                                style={{padding:\"10px 0px\", border:each.name==subMethod?\"1px solid #fff\":\"1px solid transparent\", borderRadius:'5px'}}\r\n                                                key={each.name}\r\n                                                onClick = {\r\n                                                    ()=>{\r\n                                                        setSubMethod(each.name)\r\n                                                        handleNativeTokenMismatch(each.name)\r\n                                                    }\r\n                                                }\r\n                                            >\r\n                                                <Grid item  xs={10} sm={11} md={11}>\r\n                                                    <Grid \r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        alignItems=\"center\"\r\n                                                    >\r\n                                                        <Grid item className=\"text-center\" xs={3} sm={2} md={2}>\r\n                                                            <img className={dashboardClasses.networkImage} src={each.url} alt=\"network\" />\r\n                                                        </Grid>\r\n                                                        <Grid item   xs={9} sm={10} md={10}>\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.networkTitle}>\r\n                                                                {each.name}\r\n                                                            </p>\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.networkDes}>\r\n                                                                {each.subTitle}\r\n                                                            </p>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item  className=\"text-center\" xs={2} sm={1} md={1}>\r\n                                                    {each.name==subMethod ? <div className={dashboardClasses.fillCircle} />: <div className={dashboardClasses.emptyCircle} />}\r\n                                                </Grid>\r\n                                            </Grid>)\r\n                                            }\r\n                                        </div>\r\n                                        { addressDemand ? <div key={3} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <p className=\"text-center\" color=\"textSecondary\">\r\n                                                Enter the token address you would like to lock for\r\n                                            </p>\r\n                                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\" style={{width:'-webkit-fill-available'}}>\r\n                                                <InputLabel htmlFor=\"digital-asset-erc20-compatible-interchained-ilock\">Address</InputLabel>\r\n                                                <OutlinedInput\r\n                                                    id=\"digital-asset-erc20-compatible-interchained-ilock\"\r\n                                                    type=\"text\"\r\n                                                    value={values.tokenAddress}\r\n                                                    onChange={handleChange}\r\n                                                    endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                        aria-label=\"toggle search\"\r\n                                                        onClick={handleLockToken}\r\n                                                        onKeyDown={handleMouseDownPassword}\r\n                                                        onMouseDown={handleMouseDownPassword}\r\n                                                        edge=\"end\"\r\n                                                        >\r\n                                                        <Search />\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                    }\r\n                                                    label=\"Password\"\r\n                                                />\r\n                                            </FormControl>\r\n                                            \r\n                                            {\r\n                                                tokenContract && token.symbol ? \r\n                                                <div style={{paddingLeft:20, paddingRight:20}}>\r\n                                                    <p style={{margin:\"0px\"}}>Token Found</p>\r\n                                                    <Grid \r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        justifyContent=\"space-between\"\r\n                                                        alignItems=\"center\"\r\n                                                    >\r\n                                                        <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                            <img className={dashboardClasses.tokenImage} src=\"/lock.png\" alt=\"network\" />\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.tokenTitle}>\r\n                                                                {token.symbol}\r\n                                                            </p>\r\n                                                        </Grid>\r\n                                                        <Grid item className={dashboardClasses.textRight}  xs={6} sm={6} md={6}>\r\n                                                            <Button variant=\"contained\" color=\"error\" sm={12} onClick={selectToken}>Select</Button>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </div> : <></>\r\n                                            }\r\n                                            \r\n                                        </div> : handleNext && <></> }\r\n                                        <div id=\"iLockerDeploy\" key={4} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <br />\r\n                                            { addressDemand ? <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        id=\"standard-number-decimals\"\r\n                                                        label=\"Token Decimals\"\r\n                                                        type=\"number\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 0, max: 18 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 0, max: 18 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleTokenDecimals}\r\n                                                        value={tokenDecimals}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid> : <span></span> }\r\n                                            <br />\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        id=\"standard-number-amount\"\r\n                                                        label=\"Lock Amount\"\r\n                                                        type=\"number\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 1 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 1 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleLockAmount}\r\n                                                        value={lockAmount}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item className={dashboardClasses.textRight}  xs={6} sm={6} md={6}>\r\n                                                    <p style={{marginBottom:2, marginTop:0, fontSize: \"10px\"}}>Balance: {addressDemand ? (test_data.userBalance / Math.pow(10, tokenDecimals)).toFixed(2) : etherBalance}</p>\r\n                                                    <Grid \r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        justifyContent=\"space-between\"\r\n                                                        alignItems=\"center\"\r\n                                                    >\r\n                                                        <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                            <Button variant=\"contained\" color=\"error\" sm={12} onClick={selectLockAmountMax}>Max</Button>\r\n                                                        </Grid>\r\n                                                        <Grid item className={dashboardClasses.textRight} xs={6} sm={6} md={6}>\r\n                                                            <img style={{height:30}} src=\"/lock.png\" alt=\"network\" />\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.tokenTitle}>\r\n                                                                {token.symbol}\r\n                                                            </p>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <br />\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        id=\"standard-holder\"\r\n                                                        label=\"Holder\"\r\n                                                        type=\"text\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 1 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 1 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleHolder}\r\n                                                        value={holder}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <br />\r\n                                            <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={!isMobile ? `${dashboardClasses.balanceContainer}` : `${mobileClasses.balanceContainer}`}\r\n                                            >\r\n                                                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                                        <DateTimePicker\r\n                                                            id=\"standard-number-date\"\r\n                                                            label=\"Unlock Date\"\r\n                                                            renderInput={(props) => <TextField {...props} className={isMobile ? `${mobileClasses.datetimepicker}` : ``} />}\r\n                                                            value={withdrawDate}\r\n                                                            onChange={(value) => handleDate(value)}\r\n                                                        />\r\n                                                    </LocalizationProvider>\r\n                                                    <div>\r\n                                                    {\r\n                                                        !addressDemand || isAllowed == 2 ? <Button variant=\"contained\" color=\"secondary\" sm={12} disabled={!dateUseful} value={addressDemand} onClick={depositToken} className={isMobile ? `${mobileClasses.button}` : ``}>Deposit</Button>\r\n                                                        : (isAllowed == 1 ? <Button variant=\"contained\" color=\"secondary\" sm={12} onClick={approveToken} className={isMobile ? `${mobileClasses.button}` : ``}>Approve</Button> : <Button variant=\"contained\" color=\"secondary\" sm={12} onClick={approveToken} className={isMobile ? `${mobileClasses.button}` : ``}>Approve</Button>)\r\n                                                    }\r\n                                                    </div>\r\n                                            </Grid>\r\n                                        </div>\r\n                                    </SwipeableViews>\r\n                                    <MobileStepper\r\n                                        className={dashboardClasses.mobileStepper}\r\n                                        steps={maxSteps}\r\n                                        position=\"static\"\r\n                                        activeStep={activeStep}\r\n                                        nextButton={\r\n                                        <Button\r\n                                            size=\"small\"\r\n                                            onClick={handleNext}\r\n                                            disabled={activeStep === maxSteps - 1}\r\n                                        >\r\n                                            Next\r\n                                            {theme.direction === 'rtl' ? (\r\n                                            <KeyboardArrowLeft />\r\n                                            ) : (\r\n                                            <KeyboardArrowRight />\r\n                                            )}\r\n                                        </Button>\r\n                                        }\r\n                                        backButton={\r\n                                        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                                            {theme.direction === 'rtl' ? (\r\n                                            <KeyboardArrowRight />\r\n                                            ) : (\r\n                                            <KeyboardArrowLeft />\r\n                                            )}\r\n                                            Back\r\n                                        </Button>\r\n                                        }\r\n                                    />\r\n                                </RadioGroup>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    {\r\n                        lockerListEnabled ? <Grid className={isMobile ? `${mobileClasses.root} grid `  : \"grid\"} style={{marginTop:40}} item xs={12} sm={12} md={12} >\r\n                        <Card className=\"card\">\r\n                            <CardHeader\r\n                                className={dashboardClasses.cardHeader}\r\n                                title=\"Locked Token List\"\r\n                            />\r\n                            <CardContent >\r\n                            {/* <TextField\r\n                                id=\"outlined-search\"\r\n                                label=\"Search other wallet\"\r\n                                type=\"search\"\r\n                                variant=\"standard\"\r\n                                fullWidth={true}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onKeyPress={searchOtherWallet}\r\n                                value={searchWallet}\r\n                                onChange={onChangeSearchWallet}\r\n                                error={searchOtherWalletError}\r\n                                helperText={searchHelperText}\r\n                            /> */}\r\n                                {data.length == 0 && \r\n                                <div className=\"text-center\" style={{width:'100%', padding:\"20px 0px\"}}>\r\n                                    <img src=\"/mylock.png\" alt=\"My Lock\" style={{height:200}}/>\r\n                                    <h2 style={{marginBottom:0}}>No Locked Coin</h2>\r\n                                    <p style={{color:'grey',margin:0}}>You have not locked up any coins yet.</p>\r\n                                </div>}\r\n                                {data.length != 0 && <TableContainer component={Paper}>\r\n                                    <Table aria-label=\"collapsible table\">\r\n                                        <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>No</TableCell>\r\n                                            <TableCell>Token</TableCell>\r\n                                            <TableCell align=\"right\">Tokens Locked</TableCell>\r\n                                            <TableCell align=\"right\">Liquidity Locked</TableCell>\r\n                                            <TableCell align=\"right\">Next Unlock</TableCell>\r\n                                            <TableCell align=\"right\"></TableCell>\r\n                                        </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                        {data.map((row, index) => (\r\n                                            <Row key={`lockToken-${index}`} row={row} index={index} />\r\n                                        ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>}\r\n                            </CardContent>\r\n                        </Card>\r\n                        \r\n                    </Grid> : <Loader value={loaderText} />\r\n                    }\r\n                </Grid>\r\n            </Box>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    \r\n                    {networkData.find((item)=>item.name==network) && <div style={{textAlign:'center'}}><img style={{width:\"50px\"}} src={networkData.find((item)=>item.name==network).url} alt=\"network\" /></div>}\r\n                    <h3 id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" style={{textAlign:'center', marginTop:0}}>\r\n                        {modalTitle}\r\n                    </h3>\r\n                    <p id=\"modal-modal-description\" sx={{ mt: 2 }} style={{textAlign:'center', fontSize:12, color:'grey'}}>\r\n                        {modalDes}\r\n                    </p>\r\n                    <Button variant=\"contained\" color=\"error\" style={{width:'100%'}} onClick={handleClose}>Close</Button>\r\n                </Box>\r\n            </Modal>\r\n            <Snackbar\r\n                open={snackbar}\r\n                autoHideDuration={600}\r\n                style={{width:100}}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Successfully Copied to Clipboard\"\r\n                // action={action}\r\n            />\r\n        </Container >\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    statistics: state.statistics,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Dashboard);"],"sourceRoot":""}