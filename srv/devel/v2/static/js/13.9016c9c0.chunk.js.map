{"version":3,"sources":["pages/MyLockers.js","api.js","components/Loader.js","components/TransferOwnership.js","components/Checkbox.js","components/Transfer.js","pages/LockUp.js"],"names":["getLockId","getAccount","getNetwork","_transfer","styled","LinearProgress","theme","height","borderRadius","linearProgressClasses","colorPrimary","backgroundColor","palette","grey","mode","bar","connect","state","statistics","walletAddress","props","match","params","chainName","wallet","useWeb3React","account","connector","useState","React","open","setOpen","setVesting","chainId","setChainId","network","setNetwork","ownable","setReady","snackbar","setSnackbar","lockerListEnabled","claimed","setClaimed","setUnlockDate","loaderText","dashboardClasses","useStyles","dashboard","modalTitle","modalDes","setIsWithdrawn","modalInner","setModalInner","dispatch","useDispatch","data","useSelector","tokenLists","__vesting","console","log","network_lower_to_proper","network_to_chain","explorer_","network_dec_to_hex","a","handleClose","showLockup","history","push","useEffect","date","Date","parse","toggleDrawer","changeNetwork","undefined","id","getLocker","utcSeconds","d","setUTCSeconds","__dispatch","newData","type","TOKENLISTS","payload","e","__prepare","getChainId","then","Number","getProvider","provider","getLockers","index_","classes","pools","mobileClasses","mobile","isMobile","useMediaQuery","change_Network","window","ethereum","currentNetworkData","networks_data","filter","each","name","request","method","chainData","params_network_add","rpcUrls","rpc_","network_","nativeCurrency","network_symbols","decimals","network_decimals","symbol","blockExplorerUrls","iconUrls","icons_","code","catch","error","TOKENDATA","lockId","receiver","isEth","w3","W3","eth","getBlock","block","gasLimit","withdraw","status","JSON","stringify","_toggleWithdrawalModal","Row","nextUnlock","index","row","lockedTokenAmount","lockedLiquidity","currentTime","now","map","timestamp","isWithdrawn","isLiquidity","amount","Math","pow","sx","borderBottom","component","scope","style","cursor","onClick","token","address","text","onCopy","title","align","toFixed","toDateString","variant","color","width","className","root","maxWidth","paddingLeft","paddingRight","info","container","direction","justifyContent","alignItems","marginTop","item","xs","sm","md","display","textAlign","href","websiteURI","target","underline","button","cardHeader","src","length","padding","alt","marginBottom","margin","Paper","value","onClose","position","top","left","transform","bgcolor","border","boxShadow","p","find","url","mt","fontSize","autoHideDuration","message","getERC20Metadata","_chain","_tokenAddress","web3","Web3","Contract","erc20Abi","contract","methods","call","balanceOf","result","parseFloat","getTokenMetadata","alterLoaderText","Loader","isLoading","base","setLoaderText","loaderBottomText","setLoaderBottomText","l_t","lb_t","Fragment","spacing","dangerouslySetInnerHTML","__html","_toggleOwnershipModal","TransferOwnershipModal","headerText","setHeaderText","toggleText","setToggleText","setLockId","headHolder","setHeadHolder","closeModal","changeHeaderText","header_Text","changeToggleText","toggle_Text","l_lockId","l_network","handleHeadHolder","get_holder","iLock_transferOwnership_helper","_wrap","wrapped","balanceContainer","textLeft","label","InputLabelProps","shrink","inputprops","min","InputProps","onChange","onKeyUp","getChecked","ControlledCheckbox","checked","setChecked","Checkbox","event","inputProps","WithdrawModal","setReceiver","setSymbol","handleReceiver","get_receiver","iLock_transfer_helper","transferred","Typography","Modal","Box","Grid","TextField","Button","connector_","isNaN","setAmount","_token","set_Token","lockToken","setLockToken","status_","setStatus_","setOwnable","ready","ether","setEther","notMiner","setNotMiner","unlockDate","theHolder","setTheHolder","theCreator","setTheCreator","setTokenDecimals","tokenBalance","setTokenBalance","etherBalance","setEtherBalance","unlockAble","setUnlockAble","doneForSure","setDoneForSure","tokenSet","setTokenSet","unlockTimestamp","setUnlockTimestamp","holdingContract","setHoldingContract","currentTimestamp","setCurrentTimestamp","ownerOf","tokenData","to","transferOwnership_iLock","ownershipTransfer","_transfer_ownership","epoch","setDate","timer","setTimeout","iLock","getTokenBalance","tokenBalance_holding_contract","tokenBalance_account","clearInterval","lock_props","props_out","setInterval","bytes","getEtherBalance","_0x","_0x0","_0x1","toString","unlockAbleCheck","dateToday","unlock_Timestamp","unlock_able","unlock_Date","isLockClaimed","claimed_already","withdrawProperty","findIndex","eachLiquidity","token0","token1","locked","totalSupply","severity"],"mappings":"mZAsDWA,EACAC,EACAC,EAEAC,E,qbAEkBC,YAAOC,IAAPD,EAAuB,kBAAGE,EAAH,EAAGA,MAAH,UAChDC,OAAQ,GACRC,aAAc,GAFkC,0BAG1CC,IAAsBC,cAAiB,CACzCC,gBAAiBL,EAAMM,QAAQC,KAA4B,UAAvBP,EAAMM,QAAQE,KAAmB,IAAM,OAJ/B,2BAMzCL,IAAsBM,KAAQ,CACjCP,aAAc,EACdG,gBAAwC,UAAvBL,EAAMM,QAAQE,KAAmB,UAAY,YARlB,KAqcrCE,uBANS,SAAAC,GAAK,MAAK,CAC9BC,WAAYD,EAAMC,WAClBC,cAAeF,EAAME,iBAIVH,EAvbG,SAACI,GACf,MAA8BA,EAAMC,MAAMC,OAAlCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,EAA+BC,cAAvBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UACJA,EACb,MAA4BC,mBAAS,GAArC,mBACA,GADA,UACwBC,IAAMD,UAAS,IAAvC,mBAAOE,EAAP,KAAaC,GAAb,KACA,GAA4BH,mBAAS,IAArC,qBACA,IADA,YAC8BA,mBAAS,KAAvC,qBAAgBI,IAAhB,aACA,GAAkCJ,mBAAS,IAA3C,qBACA,IADA,YAC8BA,mBAAS,IAAvC,qBAAOK,GAAP,MAAgBC,GAAhB,MACA,GAA8BN,mBAAS,IAAvC,qBAAOO,GAAP,MAAgBC,GAAhB,MACA,GAA8BR,oBAAS,GAAvC,qBACA,IADA,YAC8BA,oBAAS,IAAvC,qBAAOS,GAAP,MACA,IADA,MAC0BT,oBAAS,IAAnC,qBAAcU,IAAd,aACA,GAA0BV,oBAAS,GAAnC,qBACA,IADA,YACgCA,oBAAS,IAAzC,qBACA,IADA,YACgCA,oBAAS,IAAzC,qBAAOW,GAAP,MAAiBC,GAAjB,MACA,GAAkDZ,oBAAS,GAA3D,qBAAOa,GAAP,MACA,IADA,MAC8Bb,oBAAS,IAAvC,qBAAOc,GAAP,MAAgBC,GAAhB,MACA,GAAoCf,mBAAS,IAA7C,qBAAmBgB,IAAnB,aACA,GAAkChB,mBAAS,IAA3C,qBACA,IADA,YACoCA,mBAAS,KAA7C,qBACA,IADA,YACsCA,mBAAS,IAA/C,qBACA,IADA,YACoCC,IAAMD,SAAS,KAAnD,qBAAOiB,GAAP,MACA,IADA,MAC0CjB,mBAAS,IAAnD,qBACA,IADA,YACwCA,mBAAS,IAAjD,qBACMkB,IADN,YACyBC,IAAUC,aACnC,GAAoCpB,mBAAS,IAA7C,qBAAOqB,GAAP,MACA,IADA,MACgCrB,mBAAS,KAAzC,qBAAOsB,GAAP,MACA,IADA,MACwCtB,mBAAS,IAAjD,qBACA,IADA,YACsCA,mBAAS,KAA/C,qBAAoBuB,IAApB,aACA,GAAoCvB,oBAAS,GAA7C,qBACA,IADA,YACsCA,oBAAS,IAA/C,qBACA,IADA,YACgCA,oBAAS,IAAzC,qBACA,IADA,YAC8CA,mBAAS,KAAvD,qBACA,IADA,YACoCA,mBAAS,+DAA7C,qBAAOwB,GAAP,MAAmBC,GAAnB,MACA,GAA8CzB,mBAAS,IAAvD,qBACA,IADA,YACgDA,mBAAS,KAAzD,qBACM0B,IADN,YACiBC,eACXC,GAAOC,aAAY,SAAAxC,GAAK,OAAIA,EAAMyC,cAEpCC,GAAY,GAGZxB,IACAyB,QAAQC,IAAI,QAASnC,EAASoC,IAAwBvC,GAAYwC,IAAiB5B,IAAU6B,IAAUC,IAAmBhC,MAgB9HhC,EAAU,uCAAG,sBAAAiE,EAAA,+EACFxC,GADE,2CAAH,qDAGVxB,EAAU,uCAAG,sBAAAgE,EAAA,+EACF/B,IADE,2CAAH,qDAGV,IACMgC,GAAc,kBAAMpC,IAAQ,IAM5BqC,GAAU,uCAAG,sBAAAF,EAAA,+EACR9C,EAAMiD,QAAQC,KAAd,gBADQ,2CAAH,qDAMhBC,oBAAS,sBAAC,gCAAAL,EAAA,sEAyBSM,GACX,OAAOC,KAAKC,MAAMF,IAzBjB9C,GACDiD,cAEApD,GACAqD,GAAcd,IAAwBvC,IACtCqC,QAAQC,IAAI,YAAa1B,MAEpBZ,GAA0B,IAAbA,QAAgCsD,GAAbtD,GACjC6C,KAGAR,QAAQC,IAAI,cAAetC,IAZ7B,+BAAA2C,EAAA,MAec,WAAOY,EAAIpD,EAASS,GAApB,SAAA+B,EAAA,sEACHa,YAAUrD,EAASS,GADhB,mFAfd,yFAAA+B,EAAA,MAkBU,WAAOc,GAAP,eAAAd,EAAA,6DACRe,EAAI,IAAIR,KAAK,IACfS,cAAcF,GAChBpC,GAAcqC,GAHF,kBAILA,GAJK,2CAlBV,sDA4BAE,EA5BA,+BAAAjB,EAAA,MA4Ba,WAAOkB,GAAP,SAAAlB,EAAA,sDACf,IACIZ,GAAS,CAAE+B,KAAMC,IAAYC,QAASH,IACxC,MAAOI,GACL5B,QAAQC,IAAI2B,GAJD,2CA5Bb,sDAmCAC,EAnCA,+BAAAvB,EAAA,MAmCY,WAAOvC,GAAP,SAAAuC,EAAA,sDAEdb,GAAcD,IACd,IACIzB,EAAU+D,aAAaC,MAAK,SAAC1D,GACzBC,GAAWD,GACa,IAApB2D,OAAO3D,IAAgBG,GAAW,YACd,IAApBwD,OAAO3D,IAAgBG,GAAW,WACd,IAApBwD,OAAO3D,IAAgBG,GAAW,UACd,KAApBwD,OAAO3D,IAAiBG,GAAW,uBACf,KAApBwD,OAAO3D,IAAiBG,GAAW,mBACf,MAApBwD,OAAO3D,IAAkBG,GAAW,qBAChB,QAApBwD,OAAO3D,IAAoBG,GAAW,aAClB,QAApBwD,OAAO3D,IAAoBG,GAAW,qBAClB,QAApBwD,OAAO3D,IAAoBG,GAAW,aAClB,SAApBwD,OAAO3D,IAAqBG,GAAW,YACnB,SAApBwD,OAAO3D,IAAqBG,GAAW,uBAEjD,MAAOoD,GACL5B,QAAQC,IAAI,QAAS2B,GAnBX,2CAnCZ,0EA0DmB7D,EAAUkE,cA1D7B,QA0DEC,EA1DF,OA2DFC,YAAWD,EAAUpE,EAASS,IAASwD,KAAvC,uCAA4C,WAAOP,GAAP,eAAAlB,EAAA,sDACxC,GAAIkB,EAAS,CAIT,IAAWY,KAHXhE,GAAWoD,GACXzB,GAAUW,KAAKc,EAAQ,GAAR,QAAsB,IACrCxB,QAAQC,IAAI,YAAauB,EAAQ,GAAR,QAAsB,IAC1BA,EAAQ,GAAR,QAAsB,GACvCxB,QAAQC,IAAI,SAAUuB,EAAQ,GAAR,QAAsB,GAAGY,SAElBnB,IAA7BO,EAAQ,GAAR,QAAsB,IACtBxB,QAAQC,IAAI,aAAcuB,EAAQ,IAClC9C,IAAS,IAETA,IAAS,GAEb6C,EAAWC,GAdyB,2CAA5C,uDA3DE,mDA6EFxB,QAAQC,IAAR,MA7EE,QA+EFnC,GACA+D,EAAU9D,GAhFR,2DAoFP,CAACD,EAASF,EAAQW,KAErB,IAAM8D,GAAUlD,IAAUmD,QACpBC,GAAgBpD,IAAUqD,SAC1BC,GAAWC,YAAc,qBAEzBC,GAAc,uCAAG,gCAAArC,EAAA,0DACfxC,EADe,wBAEToE,EAAWU,OAAOC,SAKlBC,EAAqBC,IAAcC,QAAO,SAACC,GAAD,OAAUA,EAAKC,OAAS3E,MAPzD,kBASL2D,EAASiB,QAAQ,CACnBC,OAAQ,6BACR1F,OAAQ,CAAC,CAAEW,QAASyE,EAAmB,GAAGO,UAAUhF,YAX7C,OAaX2B,QAAQC,IAAI,mCAAoC1B,IAbrC,6DAqBD+E,EAAqB,CACvBjF,QAASyE,EAAmB,GAAGO,UAAUhF,QACzCkF,QAAS,CAACC,IAAKV,EAAmB,GAAGO,UAAUhF,UAC/CV,UAAW8F,IAASX,EAAmB,GAAGO,UAAUhF,SACpDqF,eAAgB,CAAER,KAAMS,IAAgBb,EAAmB,GAAGO,UAAUhF,SAAUuF,SAAUC,IAAiBf,EAAmB,GAAGO,UAAUhF,SAAUyF,OAAQH,IAAgBb,EAAmB,GAAGO,UAAUhF,UAC/M0F,kBAAmB,CAAC3D,IAAU0C,EAAmB,GAAGO,UAAUhF,UAC9D2F,SAAU,CAACC,IAAOnB,EAAmB,GAAGO,UAAUhF,WAEtD2B,QAAQC,IAAI,uBAAwB,KAAYiE,KAAMZ,GAC7B,OAArB,KAAYY,KA9BT,wBA+BHlE,QAAQC,IAAI,iEA/BT,UAgCkBlC,EAAUkE,cAhC5B,eAiCMkB,QAAQ,CACbC,OAAQ,0BACR1F,OAAQ,CAAC,eAAK4F,MACfa,OAAM,SAACC,GACNpE,QAAQC,IAAI,iBAAkBmE,MArC/B,wBAuCyB,OAArB,KAAYF,KACnBlE,QAAQC,IAAI,+BACgB,OAArB,KAAYiE,MACnBlE,QAAQC,IAAI,mCAAoC1B,IA1C7C,2DA6CPyB,QAAQC,IAAI,UAAZ,MA7CO,iFAAH,qDAkDde,GAAgB,SAACkC,GACnB1E,GAAW0E,GACXxD,GAAS,CACL+B,KAAM4C,IACN1C,QAAS,KAEbgB,MAmCJpG,EAtBmB,uCAAG,WAAO+H,EAAQpD,EAAIqD,EAAUC,GAA7B,iBAAAlE,EAAA,yDACbxC,EADa,qDAEdgB,GAFc,iEAGGf,EAAUkE,cAHb,OAGdC,EAHc,OAKlBuC,YAAGvC,EAAU3D,IAASwD,KAAtB,uCAA2B,WAAO2C,GAAP,eAAApE,EAAA,sEACLoE,EAAGC,IAAIC,SAAS,UADX,OACnBC,EADmB,OAEvB7E,QAAQC,IAAI,eAAgB4E,GAC5B7E,QAAQC,IAAI,kBAAmB4E,EAAMC,UACrCA,EAAWD,EAAMC,SACjB9E,QAAQC,IAAI,0BAA2BiB,EAAI4D,EAAUN,EAAOF,EAAQxG,EAASyG,EAAUhG,IACvFwG,YAAS7C,EAAUoC,EAAQxG,EAASyG,EAAUC,EAAOjG,GAASE,GAASqG,GAAU/C,KAAjF,uCAAsF,WAAOiD,GAAP,eAAA1E,EAAA,sDAC5EkB,EAAUyD,KAAKnE,MAAMmE,KAAKC,UAAUtF,KACtCoF,IACAhF,QAAQC,IAAI,yBAA0BuB,GACtCzC,IAAW,GACXQ,IAAe,GACf4F,YAAuB,YAAa,gBAAiBjE,EAAI3C,KANqB,2CAAtF,uDANuB,2CAA3B,uDALkB,2CAAH,4DAwBnB,IAcM6G,GAAM,SAAC5H,GACT,IACI6H,EADIC,EAAe9H,EAAf8H,MAAOC,EAAQ/H,EAAR+H,IACCC,EAAoB,EAChCC,GAAkB,EAChBC,EAAc7E,KAAK8E,MAUzB,OATAJ,EAAI3F,KAAKgG,KAAI,SAAA3C,GACLA,EAAK4C,UAAYH,EAAc,MAC1BL,EACIA,EAAapC,EAAK4C,YAAWR,EAAapC,EAAK4C,WADvCR,EAAapC,EAAK4C,WAGlC5C,EAAK6C,aAAgB7C,EAAK8C,cAAaP,GAAqBvC,EAAK+C,OAASC,KAAKC,IAAI,GAAIjD,EAAKW,YAC5FX,EAAK6C,aAAe7C,EAAK8C,cAAaN,GAAkB,MAGxD,qCACL,eAAC,IAAD,CACIU,GAAI,CAAE,QAAS,CAAEC,aAAc,UADnC,UAGQ,cAAC,IAAD,UACKd,EAAQ,IAEb,eAAC,IAAD,CAAWe,UAAU,KAAKC,MAAM,MAAhC,UACI,sBAAMC,MAAO,CAACC,OAAQ,WAAYC,QAAS,kBAAIjG,GAAW+E,EAAImB,MAAMC,QAAQrB,EAAQ,IAApF,SAAyFC,EAAImB,MAAM5C,SACnG,cAAC,kBAAD,CAAiB8C,KAAMrB,EAAImB,MAAMC,QAASE,OAAQ,kBAtOrCjI,IAAY,IAsOzB,SACI,cAAC,IAAD,CAASkI,MAAM,OAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,aAKhB,cAAC,IAAD,CAAWC,MAAM,QAAjB,SAA0BvB,EAAkBwB,QAAQ,KACpD,cAAC,IAAD,CAAWD,MAAM,QAAjB,SAA0BtB,GAAmB,cAAC,IAAD,MAC7C,cAAC,IAAD,CAAWsB,MAAM,QAAjB,SACK1B,EAAa,IAAIxE,KAAKwE,GAAY4B,eAAiB,KAExD,cAAC,IAAD,CAAWF,MAAM,QAAjB,SACI,cAAC,IAAD,CAAQG,QAAQ,YAAYC,MAAM,YAAYZ,MAAO,CAACa,MAAO,QAAUX,QAAS,kBAAMjG,GAAW+E,EAAImB,MAAMC,QAAQrB,EAAQ,IAA3H,uBAvBP,QA4Bb,OACI,eAAC,IAAD,CAAW+B,UAAWhF,GAAQiF,KAAMC,SAAS,KAAKhB,MAAO,CAACiB,YAAY,GAAIC,aAAa,IAAvF,UACI,cAAC,IAAD,CAAKJ,UAAWhF,GAAQqF,KAAxB,SACI,eAAC,IAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,eAAe,eAAeC,WAAW,SAAzE,UACI,cAAC,IAAD,CAAMT,UAAW5E,GAAQ,UAAMF,GAAc+E,KAApB,qBAA+C,mBAAoBf,MAAO,CAACwB,UAAU,IAAKC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAA5I,SACI,sBAAK5B,MAAO,CAACgB,SAAS,IAAKa,QAAQ,eAAgBC,UAAU,QAA7D,UACI,+CACA,kJACA,uBACA,8HACA,cAAC,IAAD,CACIC,KAAI,UAAKC,KACTC,OAAO,SACPrB,MAAM,OACNsB,UAAU,OACVpB,UAAWhF,GAAQqG,OALvB,SAMC,cAAC,IAAD,CAAQxB,QAAQ,YAAhB,4CAGT,cAAC,IAAD,CAAMG,UAAW5E,GAAQ,UAAMF,GAAc+E,KAApB,SAAmC,OAAQf,MAAO,CAACwB,UAAU,IAAKC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAApH,SACI,eAAC,IAAD,CAAMd,UAAU,OAAhB,UACI,cAAC,IAAD,CACIA,UAAWnI,GAAiByJ,WAC5B7B,MAAM,qBAEV,eAAC,IAAD,WACI,qBAAK8B,IAAI,cAGjB/J,GAAoB,cAAC,IAAD,CAAMwI,UAAW5E,GAAQ,UAAMF,GAAc+E,KAApB,UAAoC,OAAQf,MAAO,CAACwB,UAAU,IAAKC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAArH,SACpB,eAAC,IAAD,CAAMd,UAAU,OAAhB,UACI,cAAC,IAAD,CACIA,UAAWnI,GAAiByJ,WAC5B7B,MAAM,sBAEV,eAAC,IAAD,WAeoB,GAAflH,GAAKiJ,QACN,sBAAKxB,UAAU,cAAcd,MAAO,CAACa,MAAM,OAAQ0B,QAAQ,YAA3D,UACI,qBAAKF,IAAI,cAAcG,IAAI,UAAUxC,MAAO,CAAC5J,OAAO,OACpD,oBAAI4J,MAAO,CAACyC,aAAa,GAAzB,4BACA,mBAAGzC,MAAO,CAACY,MAAM,OAAO8B,OAAO,GAA/B,sDAEY,GAAfrJ,GAAKiJ,QAAe,cAAC,IAAD,CAAgBxC,UAAW6C,IAA3B,SACjB,eAAC,IAAD,CAAO,aAAW,oBAAlB,UACI,cAAC,IAAD,UACA,eAAC,IAAD,WACI,cAAC,IAAD,iBACA,cAAC,IAAD,oBACA,cAAC,IAAD,CAAWnC,MAAM,QAAjB,2BACA,cAAC,IAAD,CAAWA,MAAM,QAAjB,8BACA,cAAC,IAAD,CAAWA,MAAM,QAAjB,yBACA,cAAC,IAAD,CAAWA,MAAM,eAGrB,cAAC,IAAD,UACCnH,GAAKgG,KAAI,SAACL,EAAKD,GAAN,OACN,cAACF,GAAD,CAAgCG,IAAKA,EAAKD,MAAOA,GAAjD,oBAAuBA,sBAQrC,cAAC,IAAD,CAAQ6D,MAAOlK,kBAOjC,cAAC,IAAD,CACIf,KAAMA,EACNkL,QAAS7I,GACT,kBAAgB,oBAChB,mBAAiB,0BAJrB,SAMI,eAAC,IAAD,CAAK4F,GAzWH,CACVkD,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXpC,MAAO,IACPqC,QAAS,mBACTC,OAAQ,iBACR9M,aAAc,OACd+M,UAAW,GACXC,EAAG,GA+VK,UAEK7G,IAAc8G,MAAK,SAAC7B,GAAD,OAAQA,EAAK9E,MAAM3E,OAAY,qBAAKgI,MAAO,CAAC8B,UAAU,UAAvB,SAAkC,qBAAK9B,MAAO,CAACa,MAAM,QAASwB,IAAK7F,IAAc8G,MAAK,SAAC7B,GAAD,OAAQA,EAAK9E,MAAM3E,MAASuL,IAAKf,IAAI,cAC9K,oBAAI7H,GAAG,oBAAoBgG,QAAQ,KAAKb,UAAU,KAAKE,MAAO,CAAC8B,UAAU,SAAUN,UAAU,GAA7F,SACK1I,KAEL,mBAAG6B,GAAG,0BAA0BiF,GAAI,CAAE4D,GAAI,GAAKxD,MAAO,CAAC8B,UAAU,SAAU2B,SAAS,GAAI7C,MAAM,QAA9F,SACK7H,KAEL,cAAC,IAAD,CAAQ4H,QAAQ,YAAYC,MAAM,QAAQZ,MAAO,CAACa,MAAM,QAASX,QAASlG,GAA1E,wBAGR,cAAC,IAAD,CACIrC,KAAMS,GACNsL,iBAAkB,IAClB1D,MAAO,CAACa,MAAM,KACdgC,QArWgB,kBAAMxK,IAAY,IAsWlCsL,QAAQ,4C,2MC9cXC,EAAgB,uCAAG,WAAgBjI,EAAUkI,EAAQC,EAAe1D,GAAjD,+BAAArG,EAAA,6DAC5BN,QAAQC,IAAI,qBAAqBmK,EAAQC,GADb,SAIpBC,EAAO,IAAIC,IAAKrI,GAJI,KAKLoI,EAAK3F,IAAI6F,SALJ,SAKmBC,IALnB,+BAK6BJ,EAAjDK,EALoB,8BAMPA,EAASC,QAAT,WAA+BC,OANxB,eAMxBhH,EANwB,iBAOT8G,EAASC,QAAT,SAA6BC,OAPpB,eAOxB9G,EAPwB,iBAQN4G,EAASC,QAAT,UAA8BhE,GAASiE,OARjC,eAQxBC,EARwB,iBASXH,EAASC,QAAT,OAA2BC,OAThB,QASxB1H,EATwB,OAUxB4H,EAAS,CAAC,CACN,UAAYC,WAAWF,GACvB,QAAUE,WAAWF,GACrB,YAAcE,WAAWF,GACzB,SAAWE,WAAWnH,GACtB,OAASE,EACT,WAAaZ,EACb,KAAOA,IAjBa,yDAoBxBlD,QAAQC,IAAI,sBApBY,UAsBhBqK,EAAO,IAAIC,IAAKrI,GAtBA,KAuBDoI,EAAK3F,IAAI6F,SAvBR,UAuBuBC,IAvBvB,gCAuBiCJ,EAAc,GAA/DK,EAvBgB,8BAwBHA,EAASC,QAAT,WAA+BC,OAxB5B,eAwBpBhH,EAxBoB,iBAyBL8G,EAASC,QAAT,SAA6BC,OAzBxB,eAyBpB9G,EAzBoB,iBA0BF4G,EAASC,QAAT,UAA8BhE,GAASiE,OA1BrC,eA0BpBC,EA1BoB,iBA2BPH,EAASC,QAAT,OAA2BC,OA3BpB,QA2BpB1H,EA3BoB,OA4BpB4H,EAAS,CAAC,CACN,UAAYC,WAAWF,GACvB,QAAUE,WAAWF,GACrB,YAAcE,WAAWF,GACzB,SAAWE,WAAWnH,GACtB,OAASE,EACT,WAAaZ,EACb,KAAOA,IAnCS,mDAsCpBlD,QAAQC,IAAR,MAtCoB,yBAwCpBD,QAAQC,IAAI,WAAW6K,GAxCH,kBA0CbA,GA1Ca,yBA6CxB9K,QAAQC,IAAI,WAAW6K,GA7CC,kBA+CjBA,GA/CiB,sFAAH,4DAkDhBE,EAAgB,uCAAG,WAAgBZ,EAAQC,GAAxB,yBAAA/J,EAAA,6DACxBN,QAAQC,IAAI,qBAAqBmK,EAAQC,GADjB,SAQpBC,EAAO,IAAIC,IAAKrI,KAEhBwI,EAAW,IAAIJ,EAAK3F,IAAI6F,SAASC,IAAUJ,GAVvB,SAWPK,EAASC,QAAT,WAA+BC,OAXxB,cAWxBhH,EAXwB,gBAYT8G,EAASC,QAAT,SAA6BC,OAZpB,cAYxB9G,EAZwB,iBAaX4G,EAASC,QAAT,OAA2BC,OAbhB,eAaxB1H,EAbwB,OAcxB4H,EAAS,CACL,SAAWlH,EACX,OAASE,EACT,KAAOZ,GAEXlD,QAAQC,IAAI,WAAW6K,GAnBC,kBAoBjBA,GApBiB,kCAsBxB9K,QAAQC,IAAR,MAtBwB,kEAAH,yD,kvEC/ElBgL,E,2GAyCIC,IAxCA,SAAC,GAAkB,EAAhBC,UACEhM,IAAUiM,OADK,IAE/B,EAAmCnN,IAAMD,SAAS,IAAlD,mBAAOiB,EAAP,KAAkBoM,EAAlB,KACA,EAA+CpN,IAAMD,SAAS,IAA9D,mBAAOsN,EAAP,KAAwBC,EAAxB,KAWA,OAVAN,EAAe,uCAAG,WAAeO,EAAIC,GAAnB,SAAAnL,EAAA,6DAChBN,QAAQC,IAAI,QAAQuL,GADJ,SAEVH,EAAcG,GAFJ,WAGbC,EAHa,qBAIXA,EAAK5C,OAAO,GAJD,gCAKN0C,EAAoBE,GALd,gCAQTD,GARS,2CAAH,wDAWX,eAAC,IAAME,SAAP,WACI,uBACA,uBACA,uBACA,uBACF,eAAC,IAAD,CAAOC,QAAS,EAAGpF,MAAO,CAACuC,QAAQ,GAAGG,OAAO,IAA7C,UAEE,cAAC,IAAD,CAAU/B,QAAQ,OAAOf,GAAI,CAAE6D,SAAU,UAE3C,cAAC,IAAD,CAAY3D,UAAU,OAAOE,MAAO,CAAC0C,OAAO,OAAQnB,WAAW,SAAUO,UAAU,UAAnF,SACE,qBAAKuD,wBAAyB,CAAEC,OAAQ5M,GAA0B,2BAEpE,cAAC,IAAD,CAAYoH,UAAU,OAAOE,MAAO,CAAC0C,OAAO,OAAQnB,WAAW,SAAUO,UAAU,UAAnF,SACE,cAAC,IAAD,CAAUnB,QAAQ,WAAWE,MAAO,GAAIzK,OAAQ,OAElD,cAAC,IAAD,CAAUuK,QAAQ,cAAcE,MAAO,IAAKzK,OAAQ,KACpD,cAAC,IAAD,CAAY0J,UAAU,OAAOE,MAAO,CAAC0C,OAAO,OAAQnB,WAAW,SAAUO,UAAU,UAAnF,SACE,qBAAKuD,wBAAyB,CAAEC,OAAQP,GAAsC,WAEhF,cAAC,IAAD,CAAUpE,QAAQ,UAAUE,MAAO,IAAKzK,OAAQ,a,uECtB/CmP,E,sHAZLvF,EAAQ,CACV8C,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXpC,MAAO,IACPqC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GA2GQmC,IAvGf,WACI,MAAwB9N,YAAe,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCH,mBAAS,cAA7C,mBAAOgO,EAAP,KAAmBC,EAAnB,KACA,EAAoCjO,mBAAS,cAA7C,mBAAOkO,EAAP,KAAmBC,EAAnB,KACA,EAA4BnO,mBAAS,IAArC,mBAAOsG,EAAP,KAAe8H,EAAf,KACA,EAAoCpO,mBAAS,IAA7C,mBAAOqO,EAAP,KAAmBC,EAAnB,KACA,EAA8BtO,mBAAS,IAAvC,mBACA,GADA,UAC8BA,mBAAS,KAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEM+N,EAAa,kBAAMpO,GAAQ,IAC3BqO,EAAmB,SAACC,GAAD,OAAiBR,EAAcQ,IAClDC,EAAmB,SAACC,GAAD,OAAiBR,EAAcQ,IAKlDzN,EAAmBC,IAAUC,YACnC0M,EAAqB,uCAAG,WAAOa,EAAaF,EAAaG,EAAUC,GAA3C,SAAAvM,EAAA,2DACFW,IAAhBwL,IACAzM,QAAQC,IAAI,WAAW2M,EAAUC,GACjCH,EAAiBC,GACjBH,EAAiBC,QACDxL,IAAb2L,GAAuC,KAAbA,IAPGR,EAQjBQ,GACb5M,QAAQC,IAAI,WAAWqE,EAAOsI,SAEf3L,IAAd4L,GAAyC,KAAdA,IAdGrO,EAejBqO,GACd7M,QAAQC,IAAI,YAAY1B,KAGzBL,EACAqO,IAxBiBpO,GAAQ,GASR,2CAAH,4DAiBrB,IAAM2O,EAAgB,uCAAG,WAAMlL,GAAN,SAAAtB,EAAA,sDApBCyM,EAqBLnL,EAAE4G,OAAOW,MArBWmD,EAAcS,GAsBnD/M,QAAQC,IAAI,WAAWoM,GAFF,iCApBA,IAACU,IAoBD,OAAH,sDAIhBC,EAA8B,uCAAG,WAAMpL,GAAN,SAAAtB,EAAA,sDACrC2M,gBAAMZ,GAAYtK,KAAlB,uCAAuB,WAAMmL,GAAN,SAAA5M,EAAA,sDACrBN,QAAQC,IAAI,YAAYiN,GADH,2CAAvB,uDADqC,2CAAH,sDAKpC,OACE,cAAC,IAAD,CAAY7G,UAAU,OAAtB,SACA,cAAC,IAAD,CACEnI,KAAMA,EACNkL,QAASmD,EACT,kBAAgB,oBAChB,mBAAiB,0BAJnB,SAME,eAAC,IAAD,CAAKpG,GAAII,EAAT,UAEqC,cAAC,IAAD,CACGoB,WAAS,EACTC,UAAU,MACVE,WAAW,SACXT,UAAWnI,EAAiBiO,iBAJ/B,SAMG,eAAC,IAAD,CAAMnF,MAAI,EAACX,UAAWnI,EAAiBkO,SAAUnF,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAArE,UACE,cAAC,IAAD,CAAYjH,GAAG,oBAAoBgG,QAAQ,KAAKb,UAAU,KAA1D,SACE,cAAC,IAAD,CAAYA,UAAW,OAAQuF,wBAAyB,CAACC,OAAQ,CAACG,QAGpE,cAAC,IAAD,CAAY9K,GAAG,0BAA0BiF,GAAI,CAAE4D,GAAI,GAAnD,SACE,cAAC,IAAD,CAAY1D,UAAW,OAAQuF,wBAAyB,CAACC,OAAQ,CAACK,aAKzE,eAAC,IAAD,CACGvE,WAAS,EACTC,UAAU,MACVE,WAAW,SACXT,UAAWnI,EAAiBiO,iBAJ/B,UAMG,cAAC,IAAD,CAAMnF,MAAI,EAACX,UAAWnI,EAAiBkO,SAAUnF,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAArE,SACI,cAAC,IAAD,CACIjH,GAAG,uBACHmM,MAAM,YACN5L,KAAK,OACL6L,gBAAiB,CACbC,QAAQ,EACRC,WAAY,CAAEC,IAAK,IAEvBC,WAAY,CAAEF,WAAY,CAAEC,IAAK,IACjCvG,QAAQ,WACRyG,SAAUb,EACVc,QAASd,EACT3D,MAAOkD,MAGf,cAAC,IAAD,CAAMrE,MAAI,EAACX,UAAWnI,EAAiBkO,SAAUnF,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAArE,SACE,cAAC,IAAD,CAAQ1B,QAAS,kBAAMuG,KAAvB,8C,uEC1GvCa,ECeA1I,E,sIDII2I,EAlBY,WACzB,MAA8B7P,IAAMD,UAAS,GAA7C,mBAAO+P,EAAP,KAAgBC,EAAhB,KACgB7O,IAAUiM,OAC1ByC,EAAU,uCAAG,sBAAAvN,EAAA,+EACJyN,GADI,2CAAH,qDAOV,OACE,cAACE,EAAA,EAAD,CACEF,QAASA,EACTJ,SAPiB,SAACO,GACpBF,EAAWE,EAAM1F,OAAOuF,UAOtBI,WAAY,CAAE,aAAc,iB,0BCZ5B5H,EAAQ,CACV8C,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXpC,MAAO,IACPqC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAuIQwE,IAnIf,WACI,MAAwBnQ,YAAe,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCH,mBAAS,cAA7C,mBAAOgO,EAAP,KAAmBC,EAAnB,KACA,EAAoCjO,mBAAS,cAA7C,mBAAOkO,EAAP,KAAmBC,EAAnB,KACA,EAA4BnO,mBAAS,IAArC,mBAAOsG,EAAP,KAAe8H,EAAf,KACA,EAAgCpO,mBAAS,IAAzC,mBAAOuG,EAAP,KAAiB8J,EAAjB,KACA,EAA8BrQ,mBAAS,IAAvC,mBACA,GADA,UAC8BA,mBAAS,KAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAgCR,oBAAS,GAAzC,mBACA,GADA,UAC4BA,mBAAS,KAArC,mBAAO8F,EAAP,KAAewK,EAAf,KACA,EAAsCtQ,mBAAS,IAA/C,mBAEMuO,GAFN,UAEmB,kBAAMpO,GAAQ,KAC3BqO,EAAmB,SAACC,GAAD,OAAiBR,EAAcQ,IAClDC,GAAmB,SAACC,GAAD,OAAiBR,EAAcQ,IAKlDzN,GAAmBC,IAAUC,YACnC+F,EAAsB,uCAAG,WAAOwH,EAAaF,EAAaG,EAAUC,GAA3C,SAAAvM,EAAA,8DACDW,IAAhBwL,EADiB,oBAEjBzM,QAAQC,IAAI,WAAY2M,EAAUC,GAClCH,GAAiBC,GACjBH,EAAiBC,QACAxL,IAAb2L,GAAuC,KAAbA,IAPAR,EAQbQ,GACb5M,QAAQC,IAAI,WAAYqE,EAAQsI,SAElB3L,IAAd4L,GAAyC,KAAdA,EATd,iCALcrO,EAePqO,GAVP,cAWbrO,EAAWqO,GAXE,UAYPyB,EAAU3K,IAAgBxD,IAAiB0M,KAZpC,QAab7M,QAAQC,IAAI,2BAA4B6D,GACxC9D,QAAQC,IAAI,YAAa1B,EAASsO,GAdrB,gBAiBhB3O,EACAqO,IA3BepO,GAAQ,GASP,4CAAH,4DAoBtB,IAAMoQ,GAAc,uCAAG,WAAO3M,GAAP,SAAAtB,EAAA,sDAvBCkO,EAwBL5M,EAAE4G,OAAOW,MAxBakF,EAAYG,GAyBjDxO,QAAQC,IAAI,aAAcsE,GAFP,iCAvBA,IAACiK,IAuBD,OAAH,sDAIdC,GAAqB,uCAAG,WAAO7M,GAAP,SAAAtB,EAAA,kEAC5BN,QAD4B,SACA6N,IADA,+BACpB5N,IADoB,UAChB,UADgB,WAE1B1D,YAF0B,KAEhB+H,EAFgB,KAETC,EAFS,UAEMsJ,IAFN,6CAEoB9L,KAFpB,+BAAAzB,EAAA,MAEyB,WAAOoO,GAAP,SAAApO,EAAA,sDAC/CN,QAAQC,IAAI,gBAAiByO,GADkB,2CAFzB,mGAAH,sDAM3B,OACI,cAACC,EAAA,EAAD,CAAYtI,UAAU,OAAtB,SACF,cAACuI,EAAA,EAAD,CACE1Q,KAAMA,EACNkL,QAASmD,EACT,kBAAgB,oBAChB,mBAAiB,0BAJnB,SAME,eAACsC,EAAA,EAAD,CAAK1I,GAAII,EAAT,UAEqC,cAACuI,EAAA,EAAD,CACGnH,WAAS,EACTC,UAAU,MACVE,WAAW,SACXT,UAAWnI,GAAiBiO,iBAJ/B,SAMG,eAAC2B,EAAA,EAAD,CAAM9G,MAAI,EAACX,UAAWnI,GAAiBkO,SAAUnF,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAArE,UACE,cAACwG,EAAA,EAAD,CAAYzN,GAAG,oBAAoBgG,QAAQ,KAAKb,UAAU,KAA1D,SACE,cAACsI,EAAA,EAAD,CAAYtI,UAAW,OAAQuF,wBAAyB,CAACC,OAAQ,CAACG,QAGpE,cAAC2C,EAAA,EAAD,CAAYzN,GAAG,0BAA0BiF,GAAI,CAAE4D,GAAI,GAAnD,SACE,cAAC4E,EAAA,EAAD,CAAYtI,UAAW,OAAQuF,wBAAyB,CAACC,OAAQ,CAACK,aAKzE,eAAC4C,EAAA,EAAD,CACGnH,WAAS,EACTC,UAAU,MACVE,WAAW,SACXT,UAAWnI,GAAiBiO,iBAJ/B,UAMG,cAAC2B,EAAA,EAAD,CAAM9G,MAAI,EAACX,UAAWnI,GAAiBiO,iBAAkBlF,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA7E,SACI,eAAC2G,EAAA,EAAD,CAAM9G,MAAI,EACVF,WAAW,SACXT,UAAWnI,GAAiBkO,SAF5B,UAIF,cAAC,EAAD,IAJE,aAI+BtJ,EAJ/B,KAKF,4BAGF,cAACgL,EAAA,EAAD,CAAM9G,MAAI,EAACX,UAAWnI,GAAiBiO,iBAAkBlF,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA7E,SACI,eAAC2G,EAAA,EAAD,CAAM9G,MAAI,EACVF,WAAW,SACXT,UAAWnI,GAAiBkO,SAF5B,UAIF,cAAC2B,EAAA,EAAD,CACM7N,GAAG,uBACHmM,MAAM,WACN5L,KAAK,OACL6L,gBAAiB,CACbC,QAAQ,EACRC,WAAY,CAAEC,IAAK,IAEvBC,WAAY,CAAEF,WAAY,CAAEC,IAAK,IACjCvG,QAAQ,WACRyG,SAAUY,GACVX,QAASW,GACTpF,MAAO5E,IAEb,4BAGF,uBACC,eAACuK,EAAA,EAAD,CAAM9G,MAAI,EACPF,WAAW,SACXT,UAAWnI,GAAiBkO,SAC5B7G,MAAO,CAAC0C,OAAQ,OAAOnB,WAAW,UAHrC,UAKD,uBACE,cAACkH,EAAA,EAAD,CAAQvI,QAASgI,GAAjB,qC,6RClH9CQ,EACOhC,EACA7Q,EACAC,EACAC,EAEAC,E,mRACkBC,YAAOC,IAAPD,EAAuB,kBAAGE,EAAH,EAAGA,MAAH,UAChDC,OAAQ,GACRC,aAAc,GAFkC,0BAG1CC,IAAsBC,cAAiB,CACzCC,gBAAiBL,EAAMM,QAAQC,KAA4B,UAAvBP,EAAMM,QAAQE,KAAmB,IAAM,OAJ/B,2BAMzCL,IAAsBM,KAAQ,CACjCP,aAAc,EACdG,gBAAwC,UAAvBL,EAAMM,QAAQE,KAAmB,UAAY,YARlB,KAurBrCE,uBANS,SAAAC,GAAK,MAAK,CAC9BC,WAAYD,EAAMC,WAClBC,cAAeF,EAAME,iBAIVH,EAzqBA,SAACI,GACZ,MAA6CA,EAAMC,MAAMC,OAAjD4G,EAAR,EAAQA,OAAQ1G,EAAhB,EAAgBA,OAAeD,GAA/B,EAAwB+I,MAAxB,EAA+B/I,WAC5BuR,MAAM5K,IACL9G,EAAMiD,QAAQC,KAAd,eAEJ,MAA+B7C,cAAvBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UACjBkR,EAAalR,EACb,MAA4BC,mBAAS,GAArC,mBAAOgI,EAAP,KAAemJ,EAAf,KACA,EAA4BnR,mBAAS,IAArC,mBAAOoR,EAAP,KAAeC,EAAf,KACA,EAAkCrR,mBAAS,IAA3C,mBAAOsR,EAAP,KAAkBC,EAAlB,KACA,EAA8BvR,mBAAS,GAAvC,mBAAgBM,IAAhB,WACA,GAA8BN,mBAAS,IAAvC,qBAAOO,GAAP,MAAgBC,GAAhB,MACA,GAA8BR,oBAAS,GAAvC,qBAAOwR,GAAP,MAAgBC,GAAhB,MACA,GAA8BzR,oBAAS,GAAvC,qBAAOS,GAAP,MAAgBiR,GAAhB,MACA,GAA0B1R,oBAAS,GAAnC,qBAAO2R,GAAP,MAAcjR,GAAd,MACA,GAA0BV,oBAAS,GAAnC,qBAAO4R,GAAP,MAAcC,GAAd,MACA,GAAgC7R,oBAAS,GAAzC,qBAAO8R,GAAP,MAAiBC,GAAjB,MACA,GAA8B/R,oBAAS,GAAvC,qBAAOc,GAAP,MAAgBC,GAAhB,MACA,GAAoCf,mBAAS,IAA7C,qBAAOgS,GAAP,MAAmBhR,GAAnB,MACA,GAAkChB,mBAAS,IAA3C,qBAAOiS,GAAP,MAAkBC,GAAlB,MACA,GAAoClS,mBAAS,IAA7C,qBAAOmS,GAAP,MAAmBC,GAAnB,MACA,GAAsCpS,mBAAS,GAA/C,qBACA,IADA,YAC0CA,mBAAS,IAAnD,qBAAsBqS,IAAtB,aACA,GAAwCrS,mBAAS,GAAjD,qBAAOsS,GAAP,MAAqBC,GAArB,MACA,GAAwCvS,mBAAS,GAAjD,qBAAOwS,GAAP,MAAqBC,GAArB,MACA,GAAsCzS,mBAAS,IAA/C,qBAAoBuB,IAApB,aACA,GAAoCvB,oBAAS,GAA7C,qBAAO0S,GAAP,MAAmBC,GAAnB,MACA,GAAsC3S,oBAAS,GAA/C,qBAAO4S,GAAP,MAAoBC,GAApB,MACA,GAAgC7S,oBAAS,GAAzC,qBAAO8S,GAAP,MAAiBC,GAAjB,MACA,GAA8C/S,mBAAS,IAAvD,qBAAOgT,GAAP,MAAwBC,GAAxB,MACA,GAAoCjT,mBAAS,8DAA7C,qBAAOwB,GAAP,MAAmBC,GAAnB,MACA,GAA8CzB,mBAAS,IAAvD,qBAAOkT,GAAP,MAAwBC,GAAxB,MACA,GAAgDnT,mBAAS,IAAzD,qBAAOoT,GAAP,MAAyBC,GAAzB,MACM3R,GAAWC,cACXC,GAAOC,aAAY,SAAAxC,GAAK,OAAIA,EAAMyC,cACpCwR,QAAUrQ,EACVsQ,QAAYtQ,EACZ1C,IACAyB,QAAQC,IAAI,QAASnC,EAASoC,IAAwBvC,GAAYwC,IAAiB5B,IAAU6B,IAAUD,IAAiB5B,MAI5HnC,EAAS,uCAAG,sBAAAkE,EAAA,+EACDgE,GADC,2CAAH,qDAGTjI,EAAU,uCAAG,sBAAAiE,EAAA,+EACFxC,GADE,2CAAH,qDAGVxB,EAAU,uCAAG,sBAAAgE,EAAA,+EACF/B,IADE,2CAAH,qDAGV0O,EAAK,uCAAG,WAAOuE,GAAP,eAAAlR,EAAA,6DACJN,QAAQC,IAAI,UAAWuR,GADnB,SAEiBvC,EAAWhN,cAF5B,cAEAC,EAFA,qBAIAuP,IAJA,KAIwBvP,EAJxB,KAIkCoC,EAJlC,KAI0CxG,EAJ1C,KAImD0T,EAJnD,UAI6DlV,IAJ7D,8DAI2EyF,MAAK,SAAC2P,GAC7E1R,QAAQC,IAAI,sBAAuByR,MALvC,KAOA5F,IAPA,UAOoD1P,IAPpD,qCAOuEE,IAPvE,6BAOsB,SAAU,aAPhC,6DASA0D,QAAQC,IAAI,QAAZ,MATA,iCAWG,gBAXH,0DAAH,sDAaL,IAAM0R,GAAmB,uCAAG,WAAO/P,GAAP,SAAAtB,EAAA,kEACxBwL,IADwB,KACFtM,GADE,SACsCpD,IADtC,mCACyDE,IADzD,iCACU,qBADV,sDAAH,sDAGzBqE,oBAAS,sBAAC,mBA4BGiR,EA5BH,qBAAAtR,EAAA,yDA4BGsR,EA5BH,SA4BShR,GACX,OAAOC,KAAKC,MAAMF,KA5BlB9B,KAAW8R,GADT,uBAEFC,IAAe,GAEf5F,YAAgB,WAJd,mBAKK,GALL,OAOGnN,QAAsBmD,GAAXnD,EAIZmN,YAAgB,8BAHhBA,YAAgB,kBAChBlK,eATF,UAcFpD,IACAqD,GAAcd,IAAwBvC,IACtCqC,QAAQC,IAAI,YAAa1B,KAhBvB,+BAAA+B,EAAA,MAkBc,WAAOY,EAAIpD,EAASS,GAApB,SAAA+B,EAAA,sEACHa,YAAUrD,EAASS,GADhB,mFAlBd,0DAqBAsT,EArBA,+BAAAvR,EAAA,MAqBU,WAAOc,GAAP,eAAAd,EAAA,6DACRe,EAAI,IAAIR,KAAK,IACfS,cAAcF,GAChBpC,GAAcqC,GAHF,kBAILA,GAJK,2CArBV,sDA+BAE,EA/BA,+BAAAjB,EAAA,MA+Ba,WAAOkB,GAAP,SAAAlB,EAAA,sDACf,IACIZ,GAAS,CAAE+B,KAAMC,IAAYC,QAASH,IACxC,MAAOI,GACL5B,QAAQC,IAAI2B,GAJD,2CA/Bb,sDAsCAC,EAtCA,+BAAAvB,EAAA,MAsCY,WAAOvC,GAAP,SAAAuC,EAAA,sDAEdb,GAAcD,IACd,IACIzB,EAAU+D,aAAaC,MAAK,SAAC1D,GACzBC,GAAWD,GACa,IAApB2D,OAAO3D,IAAgBG,GAAW,YACd,IAApBwD,OAAO3D,IAAgBG,GAAW,UACd,KAApBwD,OAAO3D,IAAiBG,GAAW,uBACf,KAApBwD,OAAO3D,IAAiBG,GAAW,mBACf,QAApBwD,OAAO3D,IAAoBG,GAAW,aAClB,QAApBwD,OAAO3D,IAAoBG,GAAW,qBAClB,MAApBwD,OAAO3D,IAAkBG,GAAW,WAChB,QAApBwD,OAAO3D,IAAoBG,GAAW,mBAClB,MAApBwD,OAAO3D,IAAkBG,GAAW,qBAChB,QAApBwD,OAAO3D,IAAoBG,GAAW,aAClB,SAApBwD,OAAO3D,IAAqBG,GAAW,YACnB,SAApBwD,OAAO3D,IAAqBG,GAAW,uBAEjD,MAAOoD,GACL5B,QAAQC,IAAI,QAAS2B,GApBX,2CAtCZ,uDA6DF0C,EA7DE,oBAiEFwN,EAAQC,WAAU,sBAAC,kCAAAzR,EAAA,yDASS,MARlB0R,EAAQ,CACV,OAAUpU,EACV,UAAakB,GACb,gBAAmBkS,GACnB,OAAU5B,EACV,OAAUpJ,EACV,gBAAmBkL,KAEd,QAAyC,IAApBc,EAAK,QAAiD,KAA7BA,EAAK,gBAT7C,wBAUXvC,IAAW,GAVA,SAYPzP,QAAQC,IAAI,iBAAkBqP,EAAW4B,GAAiBpT,EAASS,IAZ5D,SAacR,EAAUkE,cAbxB,cAaHC,EAbG,iBAcqC+P,YAAgB/P,EAAUoN,EAAW4B,GAAiB3S,IAd3F,eAcD2T,EAdC,iBAe4BD,YAAgB/P,EAAUoN,EAAWxR,EAASS,IAf1E,QAeD4T,EAfC,OAgBPnS,QAAQC,IAAI,iBAAkBiS,EAA+BC,GAhBtD,kDAkBPnS,QAAQC,IAAR,MAlBO,gCAqBXwP,IAAW,GArBA,aAuBPD,GAvBO,QAwBN,IAxBM,SA2BN,IA3BM,gCAyBP4C,cAAcC,GAzBP,oCA4BPC,EAAUD,GA5BH,2HAiChB,MAEHC,EAAS,uCAAG,WAAOD,GAAP,SAAA/R,EAAA,sDACR+R,EAAaE,YAAW,sBAAC,4BAAAjS,EAAA,+EAEIvC,EAAUkE,cAFd,OAEbC,EAFa,OAGjBf,YAAUe,EAAUoC,EAAQxG,EAASS,IAASwD,KAA9C,uCAAmD,WAAOP,GAAP,uCAAAlB,EAAA,0DAC3CkB,EAD2C,0BAEVP,IAA7BO,EAAQ,GAAR,QAAsB,GAFiB,qBAGvCxB,QAAQC,IAAI,aAAcuB,EAAQ,GAAR,SAC1BxB,QAAQC,IAAI,aAAcuB,EAAQ,MAC9BuJ,WAAWvJ,EAAQ,GAAR,QAAwB,GALA,oBAMR,GAAvBA,EAAQ,GAAR,MAN+B,0CAQT2I,YAAiBjI,EAAU3D,GAASiD,EAAQ,GAAR,MAAqB1D,GARhD,YAQvB0U,EARuB,0CAUjBnC,GAAiBmC,EAAM,GAAN,UAVA,QAWvBrD,EAAU3N,EAAQ,GAAR,gBAAuB,GAAMuJ,WAAWyH,EAAM,GAAN,UAAsBxL,QAAQ,KAChFhH,QAAQC,IAAI,WAAY+F,GAZD,0DAe3BhG,QAAQC,IAAI,UAAZ,MAf2B,mBAmBnCuB,EAAQ,GAAR,eACA6N,EAAU7N,EAAQ,GAAR,gBAEVA,EAAQ,GAAR,gBAtBmC,kCAuBPiR,YAAgBvQ,EAAUV,EAAQ,GAAR,gBAA+BjD,IAvBlD,oCAuB9BmU,EAvB8B,KAuB1BC,EAvB0B,KAuBrBC,EAvBqB,KAwBnC5S,QAAQC,IAAI,OAAOyS,EAAIC,EAAKC,GAC5BnC,GAAgBmC,GAChBzB,GAAmB3P,EAAQ,GAAR,iBA1BgB,WA4BvCxB,QAAQC,IAAI,UAAWuB,EAAQ,GAAR,OACnBA,EAAQ,GAAR,OACAqO,GAASrO,EAAQ,GAAR,QAETA,EAAQ,GAAR,OAAmC,GAAZsP,GAhCY,wBAiCnCvB,EAAa/N,EAAQ,GAAR,OAjCsB,oBAmCVzD,EAAUkE,cAnCA,eAmC3BC,EAnC2B,iBAoCXiI,YAAiBjI,EAAU3D,GAASiD,EAAQ,GAAR,MAAqBA,EAAQ,GAAR,iBApC9C,aAoCzBgR,EApCyB,0CAsCrBnC,GAAiBmC,EAAM,GAAN,UAtCI,QAuC3BjC,GAAgBxF,WAAWyH,EAAM,GAAN,mBAAwB,GAAMA,EAAM,GAAN,WAAsBxL,QAAQ,IACvFhH,QAAQC,IAAI,iBAAkBqQ,IAxCH,QA0C/BS,IAAY,GA1CmB,mDA4C/B/Q,QAAQC,IAAI,UAAZ,MA5C+B,mBA+CnC8K,WAAWvJ,EAAQ,GAAR,iBAAiC,IAC5CyP,GAAmBzP,EAAQ,GAAR,iBACnBqQ,EAAQrQ,EAAQ,GAAR,mBAERA,EAAQ,GAAR,OAnDmC,wBAoDnCxB,QAAQC,IAAI,WAAWuB,EAAQ,GAAR,OAAqBqR,YApDT,UAqD7B3C,GAAa1O,EAAQ,GAAR,OAAqBqR,YArDL,WAsDhCrR,EAAQ,GAAR,OAAqBqR,YAAc/U,EAAQ+U,WAtDX,kCAuDzBnD,IAAW,GAvDc,QAwD/B1P,QAAQC,IAAI,YAAauB,EAAQ,GAAR,OAAqBqR,YAAc/U,EAAQ+U,WAAWpU,IAxDhD,WA0DnC6S,GAAU9P,EAAQ,GAAR,OAAqBqR,YAAc/U,EAAQ+U,WACjDrR,EAAQ,GAAR,OAAqBqR,YAAc/U,EAAQ+U,WA3DZ,kCA4DzB5H,YAAgB,aA5DS,iDA8DzBA,YAAgB,UA9DS,YAiEnCzJ,EAAQ,GAAR,QAjEmC,wBAkEnCxB,QAAQC,IAAI,YAAauB,EAAQ,GAAR,SAlEU,UAmE7B4O,GAAc5O,EAAQ,GAAR,SAnEe,YAqEnCA,EAAQ,GAAR,QArEmC,qBAsEnCzC,GAAWyC,EAAQ,GAAR,UACPA,EAAQ,GAAR,QAvE+B,qBAwEF,GAAzBA,EAAQ,GAAR,QAxE2B,yBAyE3BxB,QAAQC,IAAI,iBAAiBuB,EAAQ,GAAR,SAzEF,UA0ErBqP,IAAe,GA1EM,yBA2ErBuB,cAAcN,GA3EO,yBA4ErBM,cAAcC,GA5EO,yBA6ErBD,cAAcU,GA7EO,0BA8ErB7H,YAAgB,WA9EK,mCA+EpB,GA/EoB,YAiFZ,GAAXqG,GAjFuB,oCAkFjB5B,IAAW,GAlFM,2BAmFjBzE,YAAgB,aAnFC,qDAqFjBA,YAAgB,UArFC,2BA0FjCvM,IAAS,GA1FwB,qDA4FjCA,IAAS,GA5FwB,SA8FrCqU,EAAY,IAAIlS,KACtB,IACUgF,EAAY+L,EAAMmB,GACxB1B,GAAoBxL,GAEdmN,EAAmBhC,GACrBiC,EAAcpN,GAFZqN,EAAclD,IAGpBhQ,QAAQC,IAAI,gBAAiBgT,EAAapN,EAAWmK,GAAYgB,GAAiBgC,GAC9E9D,MAAMgE,IAAgBhE,MAAMrJ,IAC5B8K,IAAc,GACd3Q,QAAQC,IAAI,6BAEZ0Q,GAAcsC,GAElBH,EAAkBf,WAAU,uCAAC,WAAO7P,EAAUoC,EAAQxG,EAASS,GAAlC,eAAA+B,EAAA,sDAYzB,GAXA6S,YAAcjR,EAAUoC,EAAQxG,EAASS,GAASwD,KAAlD,uCAAuD,WAAOqR,GAAP,SAAA9S,EAAA,0DAC/C8S,EAD+C,iCAG3CpT,QAAQC,IAAI,8BAA+BmT,EAAe,SAHf,SAIrCrU,GAAWqU,EAAe,SAJW,uDAM3CpT,QAAQC,IAAI,MAAZ,MAN2C,yDAAvD,uDAUAD,QAAQC,IAAI,qBAAsB4F,EAAWuL,IACzC8B,EACA,IACQD,EAAcpN,EAAYmN,EAC9BhT,QAAQC,IAAI,gBAAiBgT,EAAapN,EAAWqN,EAAahE,MAAMgE,GAAchE,MAAMrJ,IAC5F8K,GAAcsC,GAChB,MAAOrR,GACL5B,QAAQC,IAAI,QAAS2B,GAlBJ,2CAAD,4DAqBzB,IAAOM,EAAUoC,EAAQxG,EAASS,IACrCwR,GAAYT,EAAUuD,aAAe1C,IAAcb,EAAUuD,aAAe5C,IAAaX,EAAUuD,aAAe/U,GAClHkC,QAAQC,IAAI,WAAYqE,GACxBtE,QAAQC,IAAI,YAAanC,GACzBkC,QAAQC,IAAI,YAAa1B,IACzByB,QAAQC,IAAI,YAAa4F,GACzB7F,QAAQC,IAAI,cAAe4F,GAC3B7F,QAAQC,IAAI,cAAegQ,IAC3BjQ,QAAQC,IAAI,eAAgB+P,IAC5BhQ,QAAQC,IAAI,eAAgByQ,IAC5B1Q,QAAQC,IAAI,gBAAiBgT,GAC7BjT,QAAQC,IAAI,gBAAiBiT,GAC7BlT,QAAQC,IAAI,qBAAsB+S,GAClChT,QAAQC,IAAI,cAAe4F,EAAYqN,GACzC,MAAOtR,GACL5B,QAAQC,IAAI,QAAS2B,GAEzBL,EAAWC,GAlJgC,4EAAnD,uDAHiB,gDAyJjBxB,QAAQC,IAAR,MAzJiB,iEA2JtB,KA5JK,2CAAH,uDA8JLnC,EAlQF,iBAmQE+D,EAAU9D,GAnQZ,kDAqQS,kBAAMqU,cAAcN,MArQ7B,4DAwQP,CAAChU,EAASF,EAAQ0G,EAAQ/F,KAE7B,IAAM8D,GAAUlD,IAAUmD,QACpBC,GAAgBpD,IAAUqD,SAC1BC,GAAWC,YAAc,qBAEzBC,GAAc,uCAAG,gCAAArC,EAAA,0DACfxC,EADe,wBAEToE,EAAWU,OAAOC,SAKlBC,EAAqBC,IAAcC,QAAO,SAACC,GAAD,OAAUA,EAAKC,OAAS3E,MAPzD,kBASL2D,EAASiB,QAAQ,CACnBC,OAAQ,6BACR1F,OAAQ,CAAC,CAAEW,QAASyE,EAAmB,GAAGO,UAAUhF,YAX7C,OAaX2B,QAAQC,IAAI,mCAAoC1B,IAbrC,6DAqBD+E,EAAqB,CACvBjF,QAASyE,EAAmB,GAAGO,UAAUhF,QACzCkF,QAAS,CAACC,IAAKV,EAAmB,GAAGO,UAAUhF,UAC/CV,UAAW8F,IAASX,EAAmB,GAAGO,UAAUhF,SACpDqF,eAAgB,CAAER,KAAMS,IAAgBb,EAAmB,GAAGO,UAAUhF,SAAUuF,SAAUC,IAAiBf,EAAmB,GAAGO,UAAUhF,SAAUyF,OAAQH,IAAgBb,EAAmB,GAAGO,UAAUhF,UAC/M0F,kBAAmB,CAAC3D,IAAU0C,EAAmB,GAAGO,UAAUhF,UAC9D2F,SAAU,CAACC,IAAOnB,EAAmB,GAAGO,UAAUhF,WAEtD2B,QAAQC,IAAI,uBAAwB,KAAYiE,KAAMZ,GAC7B,OAArB,KAAYY,KA9BT,wBA+BHlE,QAAQC,IAAI,iEA/BT,UAgCkBlC,EAAUkE,cAhC5B,eAiCMkB,QAAQ,CACbC,OAAQ,0BACR1F,OAAQ,CAAC,eAAK4F,MACfa,OAAM,SAACC,GACNpE,QAAQC,IAAI,iBAAkBmE,MArC/B,wBAuCyB,OAArB,KAAYF,KACnBlE,QAAQC,IAAI,+BACgB,OAArB,KAAYiE,MACnBlE,QAAQC,IAAI,mCAAoC1B,IA1C7C,2DA6CPyB,QAAQC,IAAI,UAAZ,MA7CO,iFAAH,qDAkDde,GAAgB,SAACkC,GACnB1E,GAAW0E,GACXxD,GAAS,CACL+B,KAAM4C,IACN1C,QAAS,KAEbgB,MAmCJpG,EAtBmB,uCAAG,WAAO2E,EAAIqD,EAAUC,GAArB,iBAAAlE,EAAA,yDACbxC,EADa,qDAEdgB,GAFc,iEAGGf,EAAUkE,cAHb,OAGdC,EAHc,OAKlBuC,YAAGvC,EAAU3D,IAASwD,KAAtB,uCAA2B,WAAO2C,GAAP,eAAApE,EAAA,sEACLoE,EAAGC,IAAIC,SAAS,UADX,OACnBC,EADmB,OAEvB7E,QAAQC,IAAI,eAAgB4E,GAC5B7E,QAAQC,IAAI,kBAAmB4E,EAAMC,UACrCA,EAAWD,EAAMC,SACjB9E,QAAQC,IAAI,0BAA2BiB,EAAI4D,EAAUN,EAAOF,EAAQxG,EAASyG,EAAUhG,IACvFwG,YAAS7C,EAAUoC,EAAQxG,EAASyG,EAAUC,EAAOjG,GAASE,GAASqG,GAAU/C,KAAjF,uCAAsF,WAAOiD,GAAP,eAAA1E,EAAA,sDAC5EkB,EAAUyD,KAAKnE,MAAMmE,KAAKC,UAAUtF,KACtCoF,IACAhF,QAAQC,IAAI,yBAA0BuB,GACtCzC,IAAW,GACXQ,IAAe,GACf4F,YAAuB,YAAa,gBAAiBjE,EAAI3C,KANqB,2CAAtF,uDANuB,2CAA3B,uDALkB,2CAAH,0DAwBnB,IAAM8U,GAAgB,uCAAG,WAAOnS,GAAP,SAAAZ,EAAA,sDACrBN,QAAQC,IAAI,qBAAsBiB,GAClCiE,YAAuB,qDAAsD,WAAYjE,EAAI3C,IAFxE,2CAAH,sDAiElBkH,GAAkB,GAStB,OARI8L,IAAWA,GAAU3R,KAAKgG,KAAI,SAAA3C,IACzBA,EAAK6C,aAAgB7C,EAAK8C,aAAkC9C,EAAK+C,OAASC,KAAKC,IAAI,GAAIjD,EAAKW,WAC5FX,EAAK6C,aAAe7C,EAAK8C,gBAEX,IADHN,GAAgB6N,WAAU,SAAAC,GAAa,OAAIA,EAAcC,OAAO7M,UAAY1D,EAAKuQ,OAAO7M,SAAW4M,EAAcE,OAAO9M,UAAY1D,EAAKwQ,OAAO9M,WAC1IlB,GAAgBiO,QAAwB,IAAdzQ,EAAK+C,OAAe/C,EAAK0Q,YAChElO,GAAgB/E,KAAK,CAAE8S,OAAQvQ,EAAKuQ,OAAQC,OAAQxQ,EAAKwQ,OAAQC,OAAsB,IAAdzQ,EAAK+C,OAAe/C,EAAK0Q,kBAI3G,eAAC,IAAD,CAAWtM,UAAWhF,GAAQiF,KAAMC,SAAS,KAA7C,UACI,cAAC,IAAD,CAAKF,UAAWhF,GAAQqF,KAAxB,SACI,cAAC,IAAD,CAAMC,WAAS,EAACgE,QAAS,EAAzB,SAEQ7M,KAAYhB,EAAU,eAAC,IAAD,CAAYuI,UAAU,OAAOE,MAAO,CAAC0C,OAAO,OAAQnB,WAAW,SAAUO,UAAU,UAAnF,cAA+F,cAAC,IAAD,IAA/F,OAA0HvK,IAAYgB,IAAW6Q,GAAQ,cAAC,IAAD,CAAMtI,UAAW5E,GAAQ,UAAMF,GAAc+E,KAApB,SAAmC,OAAQU,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA7F,SAC/K,cAAC,IAAD,CAAMd,UAAU,OAAhB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAYA,UAAU,QAAQF,MAAM,gBAApC,+BAGA,uBACErI,GAAU,6BAASA,IAAoB,GAAT8Q,IAYtBV,MAAMoB,IAAgB,8BAZiB,eAAC,IAAD,CAC7C3I,WAAS,EACTC,UAAU,MACVC,eAAe,gBACfC,WAAW,SAJkC,UAM7C,cAAC,IAAD,CAAME,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,SACI,mDAEJ,cAAC,IAAD,CAAML,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,mBACIiI,SAGR,eAAC,IAAD,CACoC3I,WAAS,EACTC,UAAU,MACVC,eAAe,gBACfC,WAAW,SAJ/C,UAMoC,cAAC,IAAD,CAAME,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,SACI,2CAEJ,cAAC,IAAD,CAAML,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,mBACIuH,SAGtC9Q,GAAU,6BAASA,IAAoB,GAAT8Q,IAYtBV,MAAMsB,IAAgB,8BAZgB,eAAC,IAAD,CAC5C7I,WAAS,EACTC,UAAU,MACVC,eAAe,gBACfC,WAAW,SAJiC,UAM5C,cAAC,IAAD,CAAME,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,SACI,iDAEJ,cAAC,IAAD,CAAML,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,mBACI6G,MAAMsB,IAAgB,EAAIA,SAGhC1R,GAAU,6BAAQ,eAAC,IAAD,CAChB6I,WAAS,EACTC,UAAU,MACVC,eAAe,gBACfC,WAAW,SAJK,UAMhB,cAAC,IAAD,CAAME,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,SACI,gDAEJ,cAAC,IAAD,CAAML,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,6DAIQ2H,UAGTlR,IAAoB,GAAT8Q,KAAmB9Q,IAAuB,GAAZgR,GAAmB,eAAC,IAAD,CAC3BnI,WAAS,EACTC,UAAU,MACVC,eAAe,gBACfC,WAAW,SAJgB,UAM3B,cAAC,IAAD,CAAME,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,SACI,oDAEJ,cAAC,IAAD,CAAML,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,mBACQiH,QAEF,6BACxCxQ,GAAU,6BAAQ,eAAC,IAAD,CAChB6I,WAAS,EACTC,UAAU,MACVC,eAAe,gBACfC,WAAW,SAJK,UAMhB,cAAC,IAAD,CAAME,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,SACI,+CAEJ,cAAC,IAAD,CAAML,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,mBACQ+G,QAGVtQ,GAAU,6BAAQ,eAAC,IAAD,CAChB6I,WAAS,EACTC,UAAU,MACVC,eAAe,gBACfC,WAAW,SAJK,UAMhB,cAAC,IAAD,CAAME,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,SACI,sDAEJ,cAAC,IAAD,CAAML,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,mBACQ6I,SAGVpS,GAAU,6BAAQ,eAAC,IAAD,CAChB6I,WAAS,EACTC,UAAU,MACVC,eAAe,gBACfC,WAAW,SAJK,UAMhB,cAAC,IAAD,CAAME,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,SACI,6CAEJ,cAAC,IAAD,CAAML,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,mBACQvJ,SAGVA,GAAU,6BAAQ,eAAC,IAAD,CAChB6I,WAAS,EACTC,UAAU,MACVC,eAAe,gBACfC,WAAW,SAJK,UAMhB,cAAC,IAAD,CAAME,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,SACI,4CAEJ,cAAC,IAAD,CAAML,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,mBACQ4H,SAGZ,uBACA,cAAC,IAAD,CACItI,WAAS,EACTC,UAAU,MACVC,eAAe,gBACfC,WAAW,SAJf,SAMI,eAAC,IAAD,CAAME,MAAI,EAAEC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI5B,MAAO,CAAC8B,UAAU,UAAtD,UACI,+CAEKvJ,IAAyB,GAAd4R,GAA+F,cAAC,IAAD,CAAOkD,SAAS,UAAUrN,MAAO,CAAC8B,UAAU,UAA5C,oBAA1E,cAAC,IAAD,CAAOuL,SAAS,UAAUrN,MAAO,CAAC8B,UAAU,UAA5C,2BAI7C,uBACUvJ,GAAU,iCAAM,uBAAM,uBAAM,cAAC,IAAD,CAAO8U,SAAS,UAAUrN,MAAO,CAAC8B,UAAU,UAA5C,4CAAoGvK,GAAWmS,IAAcnR,GAGzG,cAAC,IAAD,CAAYuH,UAAU,OAAOE,MAAO,CAAC0C,OAAO,OAAQnB,WAAW,SAAUO,UAAU,UAAnF,SACV,cAAC,IAAD,MAJ6H,eAAC,IAAD,CAAML,MAAI,EAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG5B,MAAO,CAAC8B,UAAU,UAAnD,UACxH,cAAC,IAAD,CAAQ9B,MAAO,CAACuC,QAAQ,EAAEG,OAAO,GAAIxC,QAAS,kBAAM4M,GAAiB/O,IAArE,sBACA,cAAC,IAAD,CAAQiC,MAAO,CAACuC,QAAQ,EAAEG,OAAO,GAAIxC,QAAS,kBAAMkL,GAAoBzD,QAAxE,0CAMvD,cAAC,IAAD,CAAY7H,UAAU,OAAOE,MAAO,CAAC0C,OAAO,OAAQnB,WAAW,SAAUO,UAAU,UAAnF,SACN,cAAC,IAAD,UAOZ,eAAC,IAAD,CAAYhC,UAAU,OAAtB,UACI,cAAC,IAAD,IACA,cAAC,IAAD","file":"static/js/13.9016c9c0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\n// ** Import Material UI Components\r\nimport Modal from '@mui/material/Modal';\r\nimport { RadioGroup } from \"@mui/material\";\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Search from '@mui/icons-material/Search';\r\nimport { Snackbar } from \"@mui/material\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport { getTokenMetadata } from \"../api\";\r\nimport { Collapse } from '@mui/material';\r\nimport { deposit, approve, allowance, getERC20allowance, updateProfile } from \"../web3\"\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport Button from \"@mui/material/Button\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport useStyles from '../assets/styles';\r\nimport { TOKENDATA, USERBALANCE, TOKENLISTS, LOCKERDATA, LOCKERSDATA } from \"../redux/constants\";\r\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\r\nimport { explorer_, networks_data, network_dec_to_hex, network_to_chain, network_lower_to_proper, rpc_, icons_, network_, network_symbols, network_decimals, network_hex_to_dec, websiteURI } from '../constants';\r\nimport Loader from '../components/Loader';\r\nimport { alterLoaderText } from '../components/Loader';\r\nimport { toggleDrawer } from '../components/Header';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport TransferOwnershipModal from '../components/TransferOwnership.js';\r\nimport { Tooltip } from \"@mui/material\";\r\nimport WithdrawModal from '../components/Transfer.js';\r\nimport { _toggleOwnershipModal } from '../components/TransferOwnership.js';\r\nimport { TextField, Table, TableHead, TableBody, TableRow, TableCell, TableContainer, Paper, IconButton } from \"@mui/material\";\r\nimport { _toggleWithdrawalModal } from '../components/Transfer.js';\r\nimport { transferOwnership_iLock, w3, isLockClaimed, getERC20balance, getEtherBalance, getLocker, getLockers, getData, withdraw, explorer, getTokenBalance } from '../web3';\r\nimport { getERC20Metadata } from \"../api\";\r\nexport let _wrap;\r\nexport let getLockId;\r\nexport let getAccount;\r\nexport let getNetwork;\r\nexport let linkWeb3;\r\nexport let _transfer;\r\nlet connector_;\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n    height: 10,\r\n    borderRadius: 5,\r\n    [`&.${linearProgressClasses.colorPrimary}`]: {\r\n        backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\r\n    },\r\n    [`& .${linearProgressClasses.bar}`]: {\r\n        borderRadius: 5,\r\n        backgroundColor: theme.palette.mode === 'light' ? '#1a90ff' : '#308fe8',\r\n    },\r\n}));\r\nconst dateTime = async (date) => {\r\n    return date.toLocaleString();\r\n};\r\nconst MyLockers = (props) => {\r\n    const { chainName, wallet } = props.match.params;\r\n    const { account, connector } = useWeb3React();\r\n    connector_ = connector;\r\n    const [amount, setAmount] = useState(0);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [_token, set_Token] = useState(\"\");\r\n    const [vesting, setVesting] = useState(\"\");\r\n    const [lockToken, setLockToken] = useState(\"\");\r\n    const [chainId, setChainId] = useState(0);\r\n    const [network, setNetwork] = useState(\"\");\r\n    const [status_, setStatus_] = useState(false);\r\n    const [ownable, setOwnable] = useState(false);\r\n    const [ready, setReady] = useState(false);\r\n    const [ether, setEther] = useState(false);\r\n    const [notMiner, setNotMiner] = useState(false);\r\n    const [snackbar, setSnackbar] = useState(false);\r\n    const [lockerListEnabled, setLockerListEnabled] = useState(false);\r\n    const [claimed, setClaimed] = useState(false);\r\n    const [unlockDate, setUnlockDate] = useState(\"\");\r\n    const [theHolder, setTheHolder] = useState(\"\");\r\n    const [theCreator, setTheCreator] = useState(\"\");\r\n    const [totalSupply, setTotalSupply] = useState(0);\r\n    const [loaderText, setLoaderText] = React.useState(\"\");\r\n    const [tokenDecimals, setTokenDecimals] = useState(0);\r\n    const [tokenBalance, setTokenBalance] = useState(0);\r\n    const dashboardClasses = useStyles.dashboard();\r\n    const [modalTitle, setModalTitle] = useState(\"\");\r\n    const [modalDes, setModalDes] = useState(\"\");\r\n    const [etherBalance, setEtherBalance] = useState(0);\r\n    const [isWithdrawn, setIsWithdrawn] = useState(\"\");\r\n    const [unlockAble, setUnlockAble] = useState(false);\r\n    const [doneForSure, setDoneForSure] = useState(false);\r\n    const [tokenSet, setTokenSet] = useState(false);\r\n    const [unlockTimestamp, setUnlockTimestamp] = useState(\"\");\r\n    const [modalInner, setModalInner] = useState(\"Transferring Ownership is irreversible. Provide an Address\");\r\n    const [holdingContract, setHoldingContract] = useState(\"\");\r\n    const [currentTimestamp, setCurrentTimestamp] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.tokenLists);\r\n    let index = 0;\r\n    let __vesting = [];\r\n    let nextUnlock = 0;\r\n    let tokenData = undefined;\r\n    if (network) {\r\n        console.log(\"net: \", account, network_lower_to_proper[chainName], network_to_chain[network], explorer_[network_dec_to_hex[chainId]]);\r\n    } else {\r\n        //\r\n    };\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #fff',\r\n        borderRadius: '10px',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n    getAccount = async () => {\r\n        return account;\r\n    };\r\n    getNetwork = async () => {\r\n        return network;\r\n    };\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const handleSnackbarClose = () => setSnackbar(false);\r\n    const handleSnackbarOpen = () => setSnackbar(true);\r\n    const showLocker = async (net, lid) => {\r\n        props.history.push(`/lockers/${net.toLowerCase()}/${lid}`);\r\n    };\r\n    const showLockup = async () => {\r\n        return props.history.push(`/dashboard/`);\r\n    };\r\n    const _transfer_ownership = async (e) => {\r\n        _toggleOwnershipModal(modalInner, \"Ownership Transfer\", await getLockId(), await getNetwork());\r\n    };\r\n    useEffect(async () => {\r\n        if (!account) {\r\n            toggleDrawer();\r\n        };\r\n        if (chainName) {\r\n            changeNetwork(network_lower_to_proper[chainName]);\r\n            console.log('network: ', network);\r\n        } else {\r\n            if (!chainName || chainName == \"\" || chainName == undefined) {\r\n                showLockup();\r\n                console.log(\"chainName: \", chainName);\r\n            } else {\r\n                console.log(\"chainName: \", chainName);\r\n            };\r\n        };\r\n        const checkLocker = async (id, account, network) => {\r\n            return await getLocker(account, network);\r\n        };\r\n        const setDate = async (utcSeconds) => {\r\n            let d = new Date(0);\r\n            d.setUTCSeconds(utcSeconds);\r\n            setUnlockDate(d);\r\n            return d;\r\n        };\r\n\r\n        function epoch(date) {\r\n            return Date.parse(date)\r\n        };\r\n        const __dispatch = async (newData) => {\r\n            try {\r\n                dispatch({ type: TOKENLISTS, payload: newData });\r\n            } catch (e) {\r\n                console.log(e);\r\n            };\r\n        };\r\n        const __prepare = async (connector) => {\r\n            // eslint-disable-next-line\r\n            setModalInner(modalInner);\r\n            try {\r\n                connector.getChainId().then((chainId) => {\r\n                    setChainId(chainId);\r\n                    if (Number(chainId) === 1) setNetwork(\"Ethereum\");\r\n                    if (Number(chainId) === 3) setNetwork(\"Ropsten\");\r\n                    if (Number(chainId) === 5) setNetwork(\"Goerli\");\r\n                    if (Number(chainId) === 56) setNetwork(\"Binance Smart Chain\");\r\n                    if (Number(chainId) === 97) setNetwork(\"Binance_testnet\");\r\n                    if (Number(chainId) === 444) setNetwork(\"Frenchain_testnet\");\r\n                    if (Number(chainId) === 43114) setNetwork(\"Avalanche\");\r\n                    if (Number(chainId) === 43113) setNetwork(\"Avalanche_testnet\");\r\n                    if (Number(chainId) === 44444) setNetwork(\"Frenchain\");\r\n                    if (Number(chainId) === 420420) setNetwork(\"Kekchain\");\r\n                    if (Number(chainId) === 420666) setNetwork(\"Kekchain_testnet\");\r\n                });\r\n            } catch (e) {\r\n                console.log(\"err: \", e);\r\n            };\r\n        };\r\n        try {\r\n            let provider = await connector.getProvider();\r\n            getLockers(provider, account, network).then(async (newData) => {\r\n                if (newData) {\r\n                    setVesting(newData);\r\n                    __vesting.push(newData[0][\"getLock\"][0]);\r\n                    console.log(\"newData: \", newData[0][\"getLock\"][0]);\r\n                    for (const index_ in newData[0][\"getLock\"][0]) {\r\n                        console.log(\"indy: \", newData[0][\"getLock\"][0][index_]);\r\n                    };\r\n                    if (newData[0][\"getLock\"][0] !== undefined) {\r\n                        console.log(\"newData2: \", newData[0]);\r\n                        setReady(true);\r\n                    } else {\r\n                        setReady(false);\r\n                    };\r\n                    __dispatch(newData);\r\n                };\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        };\r\n        if (account) {\r\n            __prepare(connector);\r\n        } else {\r\n            //\r\n        };\r\n    }, [account, wallet, network])\r\n\r\n    const classes = useStyles.pools();\r\n    const mobileClasses = useStyles.mobile();\r\n    const isMobile = useMediaQuery('(max-width:600px)');\r\n\r\n    const change_Network = async () => {\r\n        if (account) {\r\n            const provider = window.ethereum; {\r\n                /*\r\n                    checkEtherBalance(provider, account);\r\n                */\r\n            }\r\n            const currentNetworkData = networks_data.filter((each) => each.name === network);\r\n            try {\r\n                await provider.request({\r\n                    method: 'wallet_switchEthereuChmain',\r\n                    params: [{ chainId: currentNetworkData[0].chainData.chainId }],\r\n                });\r\n                console.log(\"You have succefully switched to \", network)\r\n            } catch (switchError) {\r\n                {\r\n                    /*\r\n                    // This error code indicates that the chain has not been added to MetaMask.\r\n                    */\r\n                }\r\n                try {\r\n                    const params_network_add = {\r\n                        chainId: currentNetworkData[0].chainData.chainId,\r\n                        rpcUrls: [rpc_[currentNetworkData[0].chainData.chainId]],\r\n                        chainName: network_[currentNetworkData[0].chainData.chainId],\r\n                        nativeCurrency: { name: network_symbols[currentNetworkData[0].chainData.chainId], decimals: network_decimals[currentNetworkData[0].chainData.chainId], symbol: network_symbols[currentNetworkData[0].chainData.chainId] },\r\n                        blockExplorerUrls: [explorer_[currentNetworkData[0].chainData.chainId]],\r\n                        iconUrls: [icons_[currentNetworkData[0].chainData.chainId]]\r\n                    };\r\n                    console.log(\"params_network_add: \", switchError.code, params_network_add);\r\n                    if (switchError.code === 4902) {\r\n                        console.log(\"This network is not available in your metamask, please add it\");\r\n                        let provider = await connector.getProvider();\r\n                        provider.request({\r\n                            method: 'wallet_addEthereumChain',\r\n                            params: [{ ...params_network_add }]\r\n                        }).catch((error) => {\r\n                            console.log(\"provider_err: \", error);\r\n                        });\r\n                    } else if (switchError.code === 4001) {\r\n                        console.log(\"Switch Request has rejected\");\r\n                    } else if (switchError.code === 4200) {\r\n                        console.log(\"You have succefully switched to \", network)\r\n                    };\r\n                } catch (e) {\r\n                    console.log(\"error: \", e);\r\n                }\r\n            };\r\n        };\r\n    };\r\n    const changeNetwork = (name) => {\r\n        setNetwork(name);\r\n        dispatch({\r\n            type: TOKENDATA,\r\n            payload: {}\r\n        });\r\n        change_Network();\r\n    }\r\n\r\n    const fn = (val, decimal = 4) => {\r\n        if (!isNaN(Number(val))) {\r\n            const trimVal = Number(Number(val).toFixed(decimal));\r\n            const decimalVal = trimVal.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n            return decimalVal;\r\n        } else {\r\n            return Number(0);\r\n        }\r\n    }\r\n\r\n    const withdrawToken = async (lockId, id, receiver, isEth) => {\r\n        if (!account) return;\r\n        if (claimed) return;\r\n        let provider = await connector.getProvider();\r\n        let gasLimit;\r\n        w3(provider, network).then(async (W3) => {\r\n            let block = await W3.eth.getBlock(\"latest\");\r\n            console.log(\"(w3) block: \", block);\r\n            console.log(\"(w3) gasLimit: \", block.gasLimit);\r\n            gasLimit = block.gasLimit;\r\n            console.log(\"Processing withdrawal: \", id, gasLimit, isEth, lockId, account, receiver, network);\r\n            withdraw(provider, lockId, account, receiver, isEth, network, ownable, gasLimit).then(async (status) => {\r\n                const newData = JSON.parse(JSON.stringify(data));\r\n                if (status) {\r\n                    console.log(\"Withdrawal processed: \", newData);\r\n                    setClaimed(true);\r\n                    setIsWithdrawn(true);\r\n                    _toggleWithdrawalModal(\"Confirmed\", \"Transaction: \", id, network);\r\n                };\r\n            });\r\n        });\r\n    };\r\n    _transfer = withdrawToken;\r\n\r\n    const withdrawProperty = async (lockId, id) => {\r\n        console.log(\"withdrawProperty: \", id);\r\n        _toggleWithdrawalModal(\"Delegate a receiver wallet and submit the transfer\", \"Withdraw\", lockId, network);\r\n    }\r\n\r\n    const transferOwnership = async (lockId, id) => {\r\n        if (!account) return;\r\n        let provider = await connector.getProvider()\r\n        withdraw(provider, lockId, account, network).then(async (status) => {\r\n            const newData = JSON.parse(JSON.stringify(data));\r\n            if (status) console.log(\"Withdrawal processed: \", newData);\r\n        })\r\n    }\r\n\r\n    const Row = (props) => {\r\n        const { index, row } = props;\r\n        let nextUnlock, lockedTokenAmount = 0,\r\n            lockedLiquidity = false;\r\n        const currentTime = Date.now();\r\n        row.data.map(each => {\r\n            if (each.timestamp > currentTime / 1000) {\r\n                if (!nextUnlock) nextUnlock = each.timestamp;\r\n                else if (nextUnlock > each.timestamp) nextUnlock = each.timestamp;\r\n            }\r\n            if (!each.isWithdrawn && !each.isLiquidity) lockedTokenAmount += each.amount / Math.pow(10, each.decimals);\r\n            if (!each.isWithdrawn && each.isLiquidity) lockedLiquidity = true;\r\n        })\r\n\r\n        return ( < >\r\n            <TableRow\r\n                sx={{ '& > *': { borderBottom: 'unset' } }}\r\n                > \r\n                    <TableCell>\r\n                        {index + 1}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        <span style={{cursor: \"pointer\"}} onClick={()=>showLockup(row.token.address,index + 1)}>{row.token.symbol}</span>\r\n                        <CopyToClipboard text={row.token.address} onCopy={()=>handleSnackbarOpen(true)}>\r\n                            <Tooltip title=\"copy\">\r\n                                <IconButton>\r\n                                    <ContentCopyIcon/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </CopyToClipboard>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{lockedTokenAmount.toFixed(2)}</TableCell>\r\n                    <TableCell align=\"right\">{lockedLiquidity && <CheckIcon />}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                        {nextUnlock ? new Date(nextUnlock).toDateString() : ''}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                        <Button variant=\"contained\" color=\"secondary\" style={{width: '100%'}}  onClick={() => showLockup(row.token.address,index + 1)}>View</Button>\r\n                    </TableCell>\r\n                </TableRow> < />\r\n        )\r\n    }\r\n    return (\r\n        <Container className={classes.root} maxWidth=\"lg\" style={{paddingLeft:20, paddingRight:20}}>\r\n            <Box className={classes.info}>\r\n                <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\" >\r\n                    <Grid className={isMobile ? `${mobileClasses.root} grid text-center`  : \"grid text-center\"} style={{marginTop:40}} item xs={12} sm={12} md={6} >\r\n                        <div style={{maxWidth:400, display:'inline-block', textAlign:'left'}}>\r\n                            <h1>Did you know?</h1>\r\n                            <p>You could hire us to build for you. We engineer custom protocols, DApps, applications, SaaS platforms and more...</p>\r\n                            <br />\r\n                            <p>We specialize in Web3, blockchain technologies involving Ethereum Virtual Machine, and Monero</p>\r\n                            <Link\r\n                                href={`${websiteURI}`}\r\n                                target=\"_blank\"\r\n                                color=\"blue\"\r\n                                underline=\"none\"\r\n                                className={classes.button}\r\n                            ><Button variant=\"contained\">Powered by Interchained</Button></Link>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid className={isMobile ? `${mobileClasses.root} grid`  : \"grid\"} style={{marginTop:40}} item xs={12} sm={12} md={6} >\r\n                        <Card className=\"card\">\r\n                            <CardHeader\r\n                                className={dashboardClasses.cardHeader}\r\n                                title=\"Create New iLock\"\r\n                            />\r\n                            <CardContent >\r\n                                <img src=\"/lock.png\" />\r\n                                \r\n                    {\r\n                        lockerListEnabled ? <Grid className={isMobile ? `${mobileClasses.root} grid `  : \"grid\"} style={{marginTop:40}} item xs={12} sm={12} md={12} >\r\n                        <Card className=\"card\">\r\n                            <CardHeader\r\n                                className={dashboardClasses.cardHeader}\r\n                                title=\"Locked Token List\"\r\n                            />\r\n                            <CardContent >\r\n                            {/* <TextField\r\n                                id=\"outlined-search\"\r\n                                label=\"Search other wallet\"\r\n                                type=\"search\"\r\n                                variant=\"standard\"\r\n                                fullWidth={true}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onKeyPress={searchOtherWallet}\r\n                                value={searchWallet}\r\n                                onChange={onChangeSearchWallet}\r\n                                error={searchOtherWalletError}\r\n                                helperText={searchHelperText}\r\n                            /> */}\r\n                                {data.length == 0 && \r\n                                <div className=\"text-center\" style={{width:'100%', padding:\"20px 0px\"}}>\r\n                                    <img src=\"/mylock.png\" alt=\"My Lock\" style={{height:200}}/>\r\n                                    <h2 style={{marginBottom:0}}>No Locked Coin</h2>\r\n                                    <p style={{color:'grey',margin:0}}>You have not locked up any coins yet.</p>\r\n                                </div>}\r\n                                {data.length != 0 && <TableContainer component={Paper}>\r\n                                    <Table aria-label=\"collapsible table\">\r\n                                        <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>No</TableCell>\r\n                                            <TableCell>Token</TableCell>\r\n                                            <TableCell align=\"right\">Tokens Locked</TableCell>\r\n                                            <TableCell align=\"right\">Liquidity Locked</TableCell>\r\n                                            <TableCell align=\"right\">Next Unlock</TableCell>\r\n                                            <TableCell align=\"right\"></TableCell>\r\n                                        </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                        {data.map((row, index) => (\r\n                                            <Row key={`lockToken-${index}`} row={row} index={index} />\r\n                                        ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>}\r\n                            </CardContent>\r\n                        </Card>\r\n                        \r\n                    </Grid> : <Loader value={loaderText} />\r\n                    }\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    \r\n                    {networks_data.find((item)=>item.name==network) && <div style={{textAlign:'center'}}><img style={{width:\"50px\"}} src={networks_data.find((item)=>item.name==network).url} alt=\"network\" /></div>}\r\n                    <h3 id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" style={{textAlign:'center', marginTop:0}}>\r\n                        {modalTitle}\r\n                    </h3>\r\n                    <p id=\"modal-modal-description\" sx={{ mt: 2 }} style={{textAlign:'center', fontSize:12, color:'grey'}}>\r\n                        {modalDes}\r\n                    </p>\r\n                    <Button variant=\"contained\" color=\"error\" style={{width:'100%'}} onClick={handleClose}>Close</Button>\r\n                </Box>\r\n            </Modal>\r\n            <Snackbar\r\n                open={snackbar}\r\n                autoHideDuration={600}\r\n                style={{width:100}}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Successfully Copied to Clipboard\"\r\n                // action={action}\r\n            />\r\n        </Container >\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    statistics: state.statistics,\r\n    walletAddress: state.walletAddress\r\n})\r\n\r\n//connect function INJECTS dispatch function as a prop!!\r\nexport default connect(mapStateToProps)(MyLockers);","import axios from 'axios';\r\nimport {\r\n    Multicall\r\n  } from 'ethereum-multicall';\r\n\r\nimport { erc20Abi, lockerContractAbi, lockerAddress } from \"./constants\";\r\nimport erc721Abi from \"./erc721_abi.json\";\r\nimport Web3 from \"web3\";\r\nimport dexscreener from 'dexscreener-api';\r\nimport { walletAddress } from './redux/reducers';\r\n\r\nimport { provider, explorer, serverApi, dexscreenerUrl_ } from \"./web3.js\";\r\n\r\nconst apiKey = 'SvMhtTsmQ239NmpwWjnnLWXtag5Jt8wYp7NF8F3Tear1QSaDRl9gnM34JZVXdLFV';\r\nconst apiConfig = {\r\n    headers: {\r\n        'x-api-key': apiKey\r\n    }\r\n}\r\nconst serverUrl = 'https://deep-index.moralis.io/api/v2';\r\n\r\nexport const getTokenPrice = async function (_chain, _tokenAddress) {\r\n    let price;\r\n    try {\r\n        const pairsResponse = await dexscreener.getPairInformationByChain(_chain, _tokenAddress); console.log(\"pairsResponse: \",pairsResponse);\r\n        price = 0;\r\n    } catch (e) {\r\n        price = 0;\r\n        {/*\r\n            *   // Get pair information by chain\r\n            *   // // Get pairs matching base token address\r\n            *   // const tokensResponse = await getPairsMatchingBaseTokenAddress(\"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\r\n            *   // // Search for pairs matching query\r\n            *   // const searchResponse = await searchPairsMatchingQuery(\"WBNB USDC\");\r\n            *   // await axios.get(`${serverUrl}/erc20/${_tokenAddress}/price?chain=${_chain}`, apiConfig);\r\n        */}\r\n    }\r\n    return price && price.data;\r\n}\r\nexport const getERC20Metadata = async function (provider, _chain, _tokenAddress, address) {\r\n    console.log(\"getERC20Metadata: \",_chain, _tokenAddress);\r\n    let result; let decimals; let symbol; let name; let balanceOf;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(await erc20Abi, _tokenAddress);\r\n        decimals = await contract.methods[\"decimals\"]().call();\r\n        symbol = await contract.methods[\"symbol\"]().call();\r\n        balanceOf = await contract.methods[\"balanceOf\"](address).call();\r\n        name = await contract.methods[\"name\"]().call();\r\n        result = [{\r\n            \"balanceOf\":parseFloat(balanceOf),\r\n            \"balance\":parseFloat(balanceOf),\r\n            \"userBalance\":parseFloat(balanceOf),\r\n            \"decimals\":parseFloat(decimals),\r\n            \"symbol\":symbol,\r\n            \"tokenTitle\":name,\r\n            \"name\":name\r\n        }]; \r\n    } catch(e) {\r\n        console.log(\"booting the backup\");\r\n        try {\r\n            let web3 = new Web3(provider);\r\n            let contract = new web3.eth.Contract(await erc20Abi, _tokenAddress[0]);\r\n            decimals = await contract.methods[\"decimals\"]().call();\r\n            symbol = await contract.methods[\"symbol\"]().call();\r\n            balanceOf = await contract.methods[\"balanceOf\"](address).call();\r\n            name = await contract.methods[\"name\"]().call();\r\n            result = [{\r\n                \"balanceOf\":parseFloat(balanceOf),\r\n                \"balance\":parseFloat(balanceOf),\r\n                \"userBalance\":parseFloat(balanceOf),\r\n                \"decimals\":parseFloat(decimals),\r\n                \"symbol\":symbol,\r\n                \"tokenTitle\":name,\r\n                \"name\":name\r\n            }]; \r\n        } catch(e) {\r\n            console.log(e);\r\n        } finally {\r\n            console.log(\"result: \",result);\r\n            // eslint-disable-next-line\r\n            return result;\r\n        }\r\n    } finally {\r\n        console.log(\"result: \",result);\r\n        // eslint-disable-next-line\r\n        return result;\r\n    };\r\n}\r\nexport const getTokenMetadata = async function (_chain, _tokenAddress) {\r\n        console.log(\"getTokenMetadata: \",_chain, _tokenAddress);\r\n    // replace moralis\r\n    // 1) call() to contract => BASE_URI \r\n    // 2) call() to contract => TOKEN_URI||TOKEN_ID \r\n    // = async (provider, id, account, network) => {\r\n    let result; let decimals; let symbol; let name;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        // let ERC721_contract = new web3.eth.Contract(erc721Abi, _tokenAddress);\r\n        let contract = new web3.eth.Contract(erc20Abi, _tokenAddress);\r\n        decimals = await contract.methods[\"decimals\"]().call();\r\n        symbol = await contract.methods[\"symbol\"]().call();\r\n        name = await contract.methods[\"name\"]().call();\r\n        result = {\r\n            \"decimals\":decimals,\r\n            \"symbol\":symbol,\r\n            \"name\":name\r\n        };\r\n        console.log(\"result: \",result);\r\n        return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\nexport const getMyLockers = async function (account, network) {\r\n    console.log(\"getMyLockers: \",account, network);\r\n    let result; let _my_locks;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc20Abi, lockerAddress[network]);\r\n        _my_locks = await contract.methods[\"_my_locks\"](account).call();\r\n        let _my_lockers = [];\r\n        for(let m = 0; m < _my_locks.length; m++) {\r\n            _my_lockers.push(_my_locks[m]);\r\n        };\r\n        let i = 0;\r\n        while(i<_my_lockers.length) {\r\n            if(i==_my_lockers.length-1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            };\r\n        };\r\n        _my_locks = await contract.methods[\"_my_locks\"](account).call();\r\n        result = {\r\n            \"_my_locks\":_my_locks\r\n        };\r\n        console.log(\"result: \",result);\r\n        return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\nexport const getNFTTokenMetadata = async function (_chain, _tokenAddress) {\r\n        console.log(\"getTokenMetadata: \",_chain, _tokenAddress);\r\n    // replace moralis\r\n    // 1) call() to contract => BASE_URI \r\n    // 2) call() to contract => TOKEN_URI||TOKEN_ID \r\n    // = async (provider, id, account, network) => {\r\n    let result;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc721Abi, _tokenAddress);\r\n        result = await contract.methods[\"tokenURI\"](1).call();\r\n        console.log(\"result: \",result);\r\n        return result.status;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\n\r\nexport const getTokenBalance = async function (provider, _chain, _tokenAddress, _walletAddress) {\r\n        console.log(\"getTokenBalance: \",_chain, _tokenAddress, _walletAddress);\r\n    // replace moralis\r\n    // call() to explorer => get_balance()\r\n    let result;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc20Abi, _tokenAddress);\r\n        result = await contract.methods[\"balanceOf\"](_walletAddress).call();\r\n        console.log(\"result: \",result);\r\n        return result.status;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const balances = await axios.get(`${serverUrl}/${_walletAddress}/erc20?chain=${_chain}&token_addresses=${_tokenAddress}`, apiConfig);\r\n    // return balances.data;\r\n}\r\n\r\nexport const runContractFunction = async function (_chain, _contractAddress, _functionName, _abi, _params) {\r\n        console.log(\"runContractFunction: \",_chain, _contractAddress, _functionName, _abi, _params);\r\n    // replace moralis\r\n    // injected web3 via ethersJS||web3.js\r\n    let result;\r\n    try {\r\n        // result = await axios.post(`${serverUrl}/${_contractAddress}/function?chain=${_chain}&function_name=${_functionName}`, {\r\n        //     \"abi\": _abi,\r\n        //     \"params\": _params\r\n        // }, apiConfig);\r\n    } catch (e) {\r\n        result = null;\r\n    }\r\n    return result ? result.data : null;\r\n}\r\n\r\nexport const getCurrentFee = async function (_chain, _tokenAddress, _walletAddress) {\r\n    const dynamicFeeAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getDynamicFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    if (await isExcludedFromFee(_chain, _tokenAddress, _walletAddress)) return 0;\r\n    const dynamicFee = await runContractFunction(_chain, _tokenAddress, 'getDynamicFee', dynamicFeeAbi, {from:_walletAddress});\r\n    return dynamicFee;\r\n}\r\n\r\nexport const isExcludedFromFee = async function (_chain, _tokenAddress, _walletAddress) {\r\n    const isExcludedFromFeeAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    return await runContractFunction(_chain, _tokenAddress, 'isExcludedFromFee', isExcludedFromFeeAbi, {account:_walletAddress});\r\n}\r\n\r\nexport const getCommonFee = async function (_chain, _tokenAddress) {\r\n    const liquidityAndMarketingFeeAbi = [{\"inputs\":[],\"name\":\"_liquidityAndMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const taxFeeAbi = [{\"inputs\":[],\"name\":\"_taxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    let commonFee = 0;\r\n    await Promise.all([\r\n        runContractFunction(_chain, _tokenAddress, '_liquidityAndMarketingFee', liquidityAndMarketingFeeAbi, {}),\r\n        runContractFunction(_chain, _tokenAddress, '_taxFee', taxFeeAbi, {})\r\n    ]).then(results => results.map(each => commonFee += Number(each)));\r\n    return commonFee;\r\n}\r\n\r\nexport const burntAndLeftTokenPercent = async function (_chain, _tokenAddress) {\r\n    const burntVsCirculatingSupplyAbi = [{\"inputs\":[],\"name\":\"burntVsCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burnt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"circulating\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const data = await runContractFunction(_chain, _tokenAddress, 'burntVsCirculatingSupply', burntVsCirculatingSupplyAbi);\r\n    return {burnt: Number(data[0]), left: Number(data[1]), leftPercent: data[1] / (Number(data[0]) + Number(data[1])) * 100};\r\n}\r\n\r\nexport const totalFees = async function (_chain, _tokenAddress) {\r\n    const totalFeesAbi = [{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const data = await runContractFunction(_chain, _tokenAddress, 'totalFees', totalFeesAbi);\r\n    return data;\r\n}\r\n\r\nexport const getTransactions = async function (_chain, _walletAddress) {\r\n    const transactions = await axios.get(`${serverUrl}/${_walletAddress}/erc20/transfers?chain=${_chain}&offset=0&oder=desc`, apiConfig);\r\n    return transactions.data;\r\n}\r\n\r\nexport const getLogsByAddress = async function (_chain, _tokenAddress) {\r\n    // replace moralis\r\n    // enable param *(topic_hash) { user supplied topic hash }\r\n    // add back (events) fn() from iStack tests\r\n    let offset = 0;\r\n    const response = await axios.get(`${serverUrl}/${_tokenAddress}/logs?chain=${_chain}&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&offset=${offset}&oder=desc`, apiConfig);\r\n    let logs = response.data.result;\r\n    const total = response.data.total;\r\n    const pages = Math.ceil(total / 500);\r\n    let page = 1;\r\n    let getLogFunctions = [];\r\n    while (page < pages) {\r\n        offset = page * 500;\r\n        getLogFunctions.push(axios.get(`${serverUrl}/${_tokenAddress}/logs?chain=${_chain}&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&offset=${offset}&oder=desc`, apiConfig));\r\n        page++;\r\n    }\r\n    if (getLogFunctions.length) {\r\n        await Promise.all(getLogFunctions).then(results => {\r\n            results.map(each => {\r\n                logs = logs.concat(each.data.result);\r\n            })\r\n        })\r\n    }\r\n    return logs;\r\n}\r\n\r\nfunction getAddress(topic) {\r\n    if (topic === null || topic === '') return '';\r\n    return `0x${topic.substring(topic.length - 40)}`;\r\n}\r\n\r\nfunction filterLogs(logs, _walletAddress) {\r\n    return logs.filter(each => getAddress(each.topic1) === _walletAddress.toLowerCase() || getAddress(each.topic2) === _walletAddress.toLowerCase());\r\n}\r\n\r\nfunction getValue(topic) {\r\n    return parseInt(topic, 16);\r\n}\r\n\r\nasync function calculateBuySell(logs, _chain, _tokenAddress, _walletAddress) {\r\n    let buy = 0, sell = 0, isFee = true;\r\n    if (await isExcludedFromFee(_chain, _tokenAddress, _walletAddress)) isFee = false;\r\n    logs.map(each => {\r\n        if (getAddress(each.topic1) === _walletAddress.toLowerCase()) {\r\n            if (isFee) {\r\n                sell += getValue(each.data) / 97 * 100;\r\n            } else {\r\n                sell += getValue(each.data);\r\n            }\r\n        } else buy += getValue(each.data);\r\n    })\r\n    let result = {buy: buy, sell: sell};\r\n    return result;\r\n}\r\n\r\nexport const walletExchange = async function(_chain, _tokenAddress, _walletAddress) {\r\n    let logs;\r\n    await getLogsByAddress(_chain, _tokenAddress).then(data=> {\r\n        logs = filterLogs(data, _walletAddress);\r\n    })\r\n    return await calculateBuySell(logs, _chain, _tokenAddress, _walletAddress);\r\n}","import React from \"react\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\nimport clsx from \"clsx\";\r\nimport Paper from \"@mui/material/Box\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport useStyles from \"../assets/styles\";\r\nimport SpinnerLogoWhite from \"../assets/img/spinner-logo-white.png\";\r\n\r\nexport let alterLoaderText;\r\nconst Loader = ({ isLoading }) => {\r\n    const classes = useStyles.base();\r\n    const [loaderText,setLoaderText] = React.useState(\"\");\r\n    const [loaderBottomText,setLoaderBottomText] = React.useState(\"\");\r\n    alterLoaderText = async function(l_t,lb_t) {\r\n      console.log(\"l_t: \",l_t);\r\n      await setLoaderText(l_t);\r\n      if(lb_t) {\r\n        if(lb_t.length>0) {\r\n          await setLoaderBottomText(lb_t);\r\n        }\r\n      }\r\n      return l_t;\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n          <Stack spacing={1} style={{padding:50,margin:50}}>\r\n          {/* For variant=\"text\", adjust the height via font-size */}\r\n            <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\r\n          {/* For other variants, adjust the size with `width` and `height` */}\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <div dangerouslySetInnerHTML={{ __html: loaderText ? loaderText : 'SCANNING BLOCKCHAIN' }} />\r\n          </Typography>\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <Skeleton variant=\"circular\" width={40} height={40} /> \r\n          </Typography>\r\n          <Skeleton variant=\"rectangular\" width={210} height={60} />\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <div dangerouslySetInnerHTML={{ __html: loaderBottomText ? loaderBottomText : '...' }} />\r\n          </Typography>\r\n          <Skeleton variant=\"rounded\" width={210} height={60} />\r\n          </Stack>\r\n      </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import { useState } from \"react\";\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport useStyles from \"../assets/styles\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { getLockId, linkWeb3, getNetwork, getAccount, _wrap } from \"../pages/LockUp\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4\r\n};\r\n\r\nexport let _toggleOwnershipModal; // replicated internal function\r\nfunction TransferOwnershipModal() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [headerText, setHeaderText] = useState(\"Loading...\");\r\n    const [toggleText, setToggleText] = useState(\"Loading...\");\r\n    const [lockId, setLockId] = useState(\"\");\r\n    const [headHolder, setHeadHolder] = useState(\"\");\r\n    const [account, setAccount] = useState(\"\");\r\n    const [network, setNetwork] = useState(\"\");\r\n    const openModal = () => setOpen(true);\r\n    const closeModal = () => setOpen(false);\r\n    const changeHeaderText = (header_Text) => setHeaderText(header_Text);\r\n    const changeToggleText = (toggle_Text) => setToggleText(toggle_Text);\r\n    const changeNetwork = (get_network) => setNetwork(get_network);\r\n    const changeAccount = (get_account) => setAccount(get_account);\r\n    const changeHeadHolder = (get_holder) => setHeadHolder(get_holder);\r\n    const changeLockId = (get_lock_id) => setLockId(get_lock_id);\r\n    const dashboardClasses = useStyles.dashboard();\r\n    _toggleOwnershipModal = async (toggle_Text, header_Text, l_lockId, l_network) => {\r\n      if (header_Text !== undefined) {\r\n          console.log(\"iCheck: \",l_lockId, l_network)\r\n          changeToggleText(toggle_Text);\r\n          changeHeaderText(header_Text);\r\n          if(l_lockId !== undefined || l_lockId !== \"\") {\r\n            changeLockId(l_lockId);\r\n            console.log(\"lockId: \",lockId,l_lockId);\r\n          };\r\n          if(l_network !== undefined || l_network !== \"\") {\r\n            changeNetwork(l_network);\r\n            console.log(\"network: \",network);\r\n          };\r\n      };\r\n      if (!open) openModal()\r\n      else closeModal()\r\n    };\r\n    const handleHeadHolder = async(e) => {\r\n        changeHeadHolder(e.target.value);\r\n        console.log(\"holder: \",headHolder);\r\n    };\r\n    const iLock_transferOwnership_helper = async(e) => {\r\n      _wrap(headHolder).then(async(wrapped)=>{\r\n        console.log(\"wrapped: \",wrapped);\r\n      });\r\n    };\r\n    return (\r\n      <Typography component=\"span\">\r\n      <Modal\r\n        open={open}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={12} sm={12} md={12}>\r\n                                                  <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                                                    <Typography component={'span'} dangerouslySetInnerHTML={{__html: [headerText]}}>\r\n                                                    </Typography>\r\n                                                  </Typography>\r\n                                                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                                                    <Typography component={'span'} dangerouslySetInnerHTML={{__html: [toggleText]}}>\r\n                                                    </Typography>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={12} sm={12} md={12}>\r\n                                                    <TextField\r\n                                                        id=\"standard-head-holder\"\r\n                                                        label=\"New Owner\"\r\n                                                        type=\"text\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 1 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 1 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleHeadHolder}\r\n                                                        onKeyUp={handleHeadHolder}\r\n                                                        value={headHolder}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={12} sm={12} md={12}>\r\n                                                  <Button onClick={() => iLock_transferOwnership_helper()}>\r\n                                                    TRANSFER OWNERSHIP\r\n                                                  </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n        </Box>\r\n      </Modal>\r\n      </Typography>\r\n    );\r\n}\r\nexport default TransferOwnershipModal;","import React from \"react\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\nimport clsx from \"clsx\";\r\nimport Paper from \"@mui/material/Box\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport useStyles from \"../assets/styles\";\r\nimport SpinnerLogoWhite from \"../assets/img/spinner-logo-white.png\";\r\n\r\nexport let getChecked;\r\nconst ControlledCheckbox = () => {\r\n  const [checked, setChecked] = React.useState(true);\r\n  const classes = useStyles.base();\r\n  getChecked = async() => {\r\n    return checked;\r\n  };\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <Checkbox\r\n      checked={checked}\r\n      onChange={handleChange}\r\n      inputProps={{ 'aria-label': 'controlled' }}\r\n    />\r\n  );\r\n};\r\nexport default ControlledCheckbox;\r\n","import { useState } from \"react\";\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport useStyles from \"../assets/styles\";\r\nimport ControlledCheckbox from '../components/Checkbox.js';\r\nimport { getChecked } from '../components/Checkbox.js';\r\nimport { TextField } from \"@mui/material\";\r\nimport { getLockId, linkWeb3, getNetwork, getAccount, _transfer } from \"../pages/LockUp\";\r\nimport { network_to_chain, network_symbols } from '../constants';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4\r\n};\r\n\r\nexport let _toggleWithdrawalModal; // replicated internal function\r\nfunction WithdrawModal() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [headerText, setHeaderText] = useState(\"Loading...\");\r\n    const [toggleText, setToggleText] = useState(\"Loading...\");\r\n    const [lockId, setLockId] = useState(\"\");\r\n    const [receiver, setReceiver] = useState(\"\");\r\n    const [account, setAccount] = useState(\"\");\r\n    const [network, setNetwork] = useState(\"\");\r\n    const [ether_tx, setEther_tx] = useState(false);\r\n    const [symbol, setSymbol] = useState(\"\");\r\n    const [networkName, setNetworkName] = useState(\"\");\r\n    const openModal = () => setOpen(true);\r\n    const closeModal = () => setOpen(false);\r\n    const changeHeaderText = (header_Text) => setHeaderText(header_Text);\r\n    const changeToggleText = (toggle_Text) => setToggleText(toggle_Text);\r\n    const changeNetwork = (get_network) => setNetwork(get_network);\r\n    const changeAccount = (get_account) => setAccount(get_account);\r\n    const changeReceiver = (get_receiver) => setReceiver(get_receiver);\r\n    const changeLockId = (get_lock_id) => setLockId(get_lock_id);\r\n    const dashboardClasses = useStyles.dashboard();\r\n    _toggleWithdrawalModal = async (toggle_Text, header_Text, l_lockId, l_network) => {\r\n        if (header_Text !== undefined) {\r\n            console.log(\"iCheck: \", l_lockId, l_network)\r\n            changeToggleText(toggle_Text);\r\n            changeHeaderText(header_Text);\r\n            if (l_lockId !== undefined || l_lockId !== \"\") {\r\n                changeLockId(l_lockId);\r\n                console.log(\"lockId: \", lockId, l_lockId);\r\n            };\r\n            if (l_network !== undefined || l_network !== \"\") {\r\n                await changeNetwork(l_network);\r\n                setNetwork(l_network);\r\n                await setSymbol(network_symbols[network_to_chain[l_network]]);\r\n                console.log(\"networkToChain=>Symbol: \", symbol);\r\n                console.log(\"network: \", network, l_network);\r\n            };\r\n        };\r\n        if (!open) openModal()\r\n        else closeModal()\r\n    };\r\n    const handleReceiver = async (e) => {\r\n        changeReceiver(e.target.value);\r\n        console.log(\"receiver: \", receiver);\r\n    };\r\n    const iLock_transfer_helper = async (e) => {\r\n      console.log(\"isEth: \",await getChecked());\r\n        _transfer(lockId,receiver,await getChecked()).then(async (transferred) => {\r\n            console.log(\"transferred: \", transferred);\r\n        });\r\n    };\r\n    return (\r\n        <Typography component=\"span\">\r\n      <Modal\r\n        open={open}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={12} sm={12} md={12}>\r\n                                                  <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                                                    <Typography component={'span'} dangerouslySetInnerHTML={{__html: [headerText]}}>\r\n                                                    </Typography>\r\n                                                  </Typography>\r\n                                                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                                                    <Typography component={'span'} dangerouslySetInnerHTML={{__html: [toggleText]}}>\r\n                                                    </Typography>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.balanceContainer} xs={12} sm={12} md={12}>\r\n                                                    <Grid item\r\n                                                    alignItems=\"center\"\r\n                                                    className={dashboardClasses.textLeft}\r\n                                                >\r\n                                                  <ControlledCheckbox /> Withdraw {symbol} ?\r\n                                                  <br />\r\n                                                </Grid>\r\n                                                </Grid>\r\n                                                <Grid item className={dashboardClasses.balanceContainer} xs={12} sm={12} md={12}>\r\n                                                    <Grid item\r\n                                                    alignItems=\"center\"\r\n                                                    className={dashboardClasses.textLeft}\r\n                                                >\r\n                                                  <TextField\r\n                                                        id=\"standard-head-holder\"\r\n                                                        label=\"Receiver\"\r\n                                                        type=\"text\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 1 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 1 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleReceiver}\r\n                                                        onKeyUp={handleReceiver}\r\n                                                        value={receiver}\r\n                                                    />\r\n                                                  <br />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                                <br />\r\n                                                 <Grid item\r\n                                                    alignItems=\"center\"\r\n                                                    className={dashboardClasses.textLeft}\r\n                                                    style={{margin: 'auto',alignItems:'center'}}\r\n                                                >\r\n                                                <br />\r\n                                                  <Button onClick={iLock_transfer_helper}>\r\n                                                    TRANSFER\r\n                                                  </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n        </Box>\r\n      </Modal>\r\n      </Typography>\r\n    );\r\n}\r\nexport default WithdrawModal;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ** Import Material UI Components\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport Button from \"@mui/material/Button\";\r\nimport Link from \"@mui/material/Link\";\r\n// ** Import Assets\r\nimport useStyles from '../assets/styles';\r\nimport { TOKENDATA, USERBALANCE, TOKENLISTS } from \"../redux/constants\";\r\n\r\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\r\n\r\nimport { explorer_, networks_data, network_dec_to_hex, network_to_chain, network_lower_to_proper, rpc_, icons_, network_, network_symbols, network_decimals, network_hex_to_dec, lockerAddress } from '../constants';\r\nimport Loader from '../components/Loader';\r\nimport { alterLoaderText } from '../components/Loader';\r\nimport { toggleDrawer } from '../components/Header';\r\nimport TransferOwnershipModal from '../components/TransferOwnership.js';\r\nimport WithdrawModal from '../components/Transfer.js';\r\nimport { _toggleOwnershipModal } from '../components/TransferOwnership.js';\r\nimport { _toggleWithdrawalModal } from '../components/Transfer.js';\r\nimport { transferOwnership_iLock, w3, isLockClaimed, getERC20balance, getEtherBalance, getLocker, getData, withdraw, explorer, getTokenBalance, } from '../web3';\r\nimport { getERC20Metadata } from \"../api\";\r\n\r\nlet connector_;\r\nexport let _wrap;\r\nexport let getLockId;\r\nexport let getAccount;\r\nexport let getNetwork;\r\nexport let linkWeb3;\r\nexport let _transfer;\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n    height: 10,\r\n    borderRadius: 5,\r\n    [`&.${linearProgressClasses.colorPrimary}`]: {\r\n        backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\r\n    },\r\n    [`& .${linearProgressClasses.bar}`]: {\r\n        borderRadius: 5,\r\n        backgroundColor: theme.palette.mode === 'light' ? '#1a90ff' : '#308fe8',\r\n    },\r\n}));\r\nconst dateTime = async (date) => {\r\n    return date.toLocaleString();\r\n};\r\nconst LockUp = (props) => {\r\n    const { lockId, wallet, token, chainName } = props.match.params;\r\n    if(isNaN(lockId)) {\r\n        props.history.push(`/dashboard/`);\r\n    }\r\n    const { account, connector } = useWeb3React();\r\n    connector_ = connector;\r\n    const [amount, setAmount] = useState(0);\r\n    const [_token, set_Token] = useState(\"\");\r\n    const [lockToken, setLockToken] = useState(\"\");\r\n    const [chainId, setChainId] = useState(0);\r\n    const [network, setNetwork] = useState(\"\");\r\n    const [status_, setStatus_] = useState(false);\r\n    const [ownable, setOwnable] = useState(false);\r\n    const [ready, setReady] = useState(false);\r\n    const [ether, setEther] = useState(false);\r\n    const [notMiner, setNotMiner] = useState(false);\r\n    const [claimed, setClaimed] = useState(false);\r\n    const [unlockDate, setUnlockDate] = useState(\"\");\r\n    const [theHolder, setTheHolder] = useState(\"\");\r\n    const [theCreator, setTheCreator] = useState(\"\");\r\n    const [totalSupply, setTotalSupply] = useState(0);\r\n    const [tokenDecimals, setTokenDecimals] = useState(0);\r\n    const [tokenBalance, setTokenBalance] = useState(0);\r\n    const [etherBalance, setEtherBalance] = useState(0);\r\n    const [isWithdrawn, setIsWithdrawn] = useState(\"\");\r\n    const [unlockAble, setUnlockAble] = useState(false);\r\n    const [doneForSure, setDoneForSure] = useState(false);\r\n    const [tokenSet, setTokenSet] = useState(false);\r\n    const [unlockTimestamp, setUnlockTimestamp] = useState(\"\");\r\n    const [modalInner, setModalInner] = useState(\"Transferring Ownership is irreversible. Provide an Address\");\r\n    const [holdingContract, setHoldingContract] = useState(\"\");\r\n    const [currentTimestamp, setCurrentTimestamp] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.tokenLists);\r\n    let ownerOf = undefined;\r\n    let tokenData = undefined;\r\n    if (network) {\r\n        console.log(\"net: \", account, network_lower_to_proper[chainName], network_to_chain[network], explorer_[network_to_chain[network]]);\r\n    } else {\r\n        //\r\n    };\r\n    getLockId = async () => {\r\n        return lockId;\r\n    };\r\n    getAccount = async () => {\r\n        return account;\r\n    };\r\n    getNetwork = async () => {\r\n        return network;\r\n    };\r\n    _wrap = async (to) => {\r\n        console.log(\"_wrap: \", to);\r\n        let provider = await connector_.getProvider();\r\n        try {\r\n            transferOwnership_iLock(provider, lockId, account, to, await getNetwork()).then((ownershipTransfer) => {\r\n                console.log(\"transferOwnership: \", ownershipTransfer)\r\n            });\r\n            _toggleOwnershipModal(\"Thanks\", \"Processing\", await getLockId(), await getNetwork());\r\n        } catch (e) {\r\n            console.log(\"err: \", e);\r\n        };\r\n        return \"It's a Wrap!\";\r\n    };\r\n    const _transfer_ownership = async (e) => {\r\n        _toggleOwnershipModal(modalInner, \"Ownership Transfer\", await getLockId(), await getNetwork());\r\n    };\r\n    useEffect(async () => {\r\n        if (claimed || doneForSure) {\r\n            setDoneForSure(true);\r\n            // eslint-disable-next-line\r\n            alterLoaderText(\"Claimed\");\r\n            return true;\r\n        } else {\r\n            if (!account || account == undefined) {\r\n                alterLoaderText(\"Connect Wallet\");\r\n                toggleDrawer();\r\n            } else {\r\n                alterLoaderText(\"Scanning Blockchain Index\");\r\n            };\r\n        };\r\n        if (chainName) {\r\n            changeNetwork(network_lower_to_proper[chainName]);\r\n            console.log('network: ', network);\r\n        };\r\n        const checkLocker = async (id, account, network) => {\r\n            return await getLocker(account, network);\r\n        };\r\n        const setDate = async (utcSeconds) => {\r\n            let d = new Date(0);\r\n            d.setUTCSeconds(utcSeconds);\r\n            setUnlockDate(d);\r\n            return d;\r\n        };\r\n\r\n        function epoch(date) {\r\n            return Date.parse(date)\r\n        };\r\n        const __dispatch = async (newData) => {\r\n            try {\r\n                dispatch({ type: TOKENLISTS, payload: newData });\r\n            } catch (e) {\r\n                console.log(e);\r\n            };\r\n        };\r\n        const __prepare = async (connector) => {\r\n            // eslint-disable-next-line\r\n            setModalInner(modalInner);\r\n            try {\r\n                connector.getChainId().then((chainId) => {\r\n                    setChainId(chainId);\r\n                    if (Number(chainId) === 1) setNetwork(\"Ethereum\");\r\n                    if (Number(chainId) === 5) setNetwork(\"Goerli\");\r\n                    if (Number(chainId) === 56) setNetwork(\"Binance Smart Chain\");\r\n                    if (Number(chainId) === 97) setNetwork(\"Binance_testnet\");\r\n                    if (Number(chainId) === 43114) setNetwork(\"Avalanche\");\r\n                    if (Number(chainId) === 43113) setNetwork(\"Avalanche_testnet\");\r\n                    if (Number(chainId) === 137) setNetwork(\"Polygon\");\r\n                    if (Number(chainId) === 80001) setNetwork(\"Polygon_testnet\");\r\n                    if (Number(chainId) === 444) setNetwork(\"Frenchain_testnet\");\r\n                    if (Number(chainId) === 44444) setNetwork(\"Frenchain\");\r\n                    if (Number(chainId) === 420420) setNetwork(\"Kekchain\");\r\n                    if (Number(chainId) === 420666) setNetwork(\"Kekchain_testnet\");\r\n                });\r\n            } catch (e) {\r\n                console.log(\"err: \", e);\r\n            };\r\n        };\r\n        if (lockId) {\r\n            let lock_props;\r\n            let props_out;\r\n            let timer;\r\n            timer = setTimeout(async () => {\r\n                const iLock = {\r\n                    \"wallet\": wallet,\r\n                    \"unclaimed\": claimed,\r\n                    \"unlockTimestamp\": unlockTimestamp,\r\n                    \"_token\": _token,\r\n                    \"amount\": amount,\r\n                    \"holdingContract\": holdingContract\r\n                };\r\n                if (iLock[\"_token\"] !== '' && iLock[\"amount\"] !== 0 && iLock[\"holdingContract\"] !== '') {\r\n                    setStatus_(true);\r\n                    try {\r\n                        console.log(\"tokenBalance: \", lockToken, holdingContract, account, network);\r\n                        let provider = await connector.getProvider();\r\n                        const tokenBalance_holding_contract = await getTokenBalance(provider, lockToken, holdingContract, network);\r\n                        const tokenBalance_account = await getTokenBalance(provider, lockToken, account, network);\r\n                        console.log(\"tokenBalance: \", tokenBalance_holding_contract, tokenBalance_account);\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    };\r\n                } else {\r\n                    setStatus_(false);\r\n                };\r\n                switch (status_) {\r\n                    case true:\r\n                        clearInterval(lock_props);\r\n                        break;\r\n                    case false:\r\n                        props_out(lock_props);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                };\r\n            }, 3333);\r\n            let unlockAbleCheck;\r\n            props_out = async (lock_props) => {\r\n                lock_props = setInterval(async () => {\r\n                    try {\r\n                        let provider = await connector.getProvider();\r\n                        getLocker(provider, lockId, account, network).then(async (newData) => {\r\n                            if (newData) {\r\n                                if (newData[0][\"getLock\"][0] !== undefined) {\r\n                                    console.log(\"newData1: \", newData[0][\"getLock\"]);\r\n                                    console.log(\"newData2: \", newData[0]);\r\n                                    if (parseFloat(newData[0][\"amount\"]) > 0) {\r\n                                        if (newData[0][\"Ether\"] == false) {\r\n                                            try {\r\n                                                let bytes = await getERC20Metadata(provider, network, newData[0][\"token\"], account);\r\n                                                if (bytes) {\r\n                                                    await setTokenDecimals(bytes[0][\"decimals\"]);\r\n                                                    setAmount(newData[0][\"amount\"] / 10 ** parseFloat(bytes[0][\"decimals\"]).toFixed(2));\r\n                                                    console.log(\"amount: \", amount);\r\n                                                }\r\n                                            } catch (e) {\r\n                                                console.log(\"error: \", e);\r\n                                            };\r\n                                        }\r\n                                    };\r\n                                    if (newData[0][\"lockerAddress\"]) {\r\n                                        set_Token(newData[0][\"lockerAddress\"]);\r\n                                    };\r\n                                    if (newData[0][\"holdingContract\"]) {\r\n                                        let [_0x,_0x0,_0x1] = await getEtherBalance(provider, newData[0][\"holdingContract\"], network);\r\n                                        console.log(\"hc: \",_0x,_0x0,_0x1);\r\n                                        setEtherBalance(_0x1);\r\n                                        setHoldingContract(newData[0][\"holdingContract\"]);\r\n                                    };\r\n                                    console.log(\"Ether: \", newData[0][\"Ether\"]);\r\n                                    if (newData[0][\"Ether\"]) {\r\n                                        setEther(newData[0][\"Ether\"]);\r\n                                    };\r\n                                    if (newData[0][\"token\"] && tokenSet == false) {\r\n                                        setLockToken(newData[0][\"token\"]);\r\n                                        try {\r\n                                            let provider = await connector.getProvider();\r\n                                            const bytes = await getERC20Metadata(provider, network, newData[0][\"token\"], newData[0][\"holdingContract\"]);\r\n                                            if (bytes) {\r\n                                                await setTokenDecimals(bytes[0][\"decimals\"]);\r\n                                                setTokenBalance(parseFloat(bytes[0][\"balanceOf\"] / 10 ** bytes[0][\"decimals\"]).toFixed(2));\r\n                                                console.log(\"tokenBalance: \", tokenBalance);\r\n                                            }\r\n                                            setTokenSet(true);\r\n                                        } catch (e) {\r\n                                            console.log(\"error: \", e);\r\n                                        };\r\n                                    };\r\n                                    if (parseFloat(newData[0][\"unlockTimestamp\"]) > 0) {\r\n                                        setUnlockTimestamp(newData[0][\"unlockTimestamp\"]);\r\n                                        setDate(newData[0][\"unlockTimestamp\"]);\r\n                                    };\r\n                                    if (newData[0][\"holder\"]) {\r\n                                        console.log(\"holder: \",newData[0][\"holder\"].toString())\r\n                                        await setTheHolder(newData[0][\"holder\"].toString());\r\n                                        if(newData[0][\"holder\"].toString() == account.toString()) {\r\n                                            await setOwnable(true);\r\n                                            console.log(\"ownable: \", newData[0][\"holder\"].toString() == account.toString(),ownable);\r\n                                        };\r\n                                        ownerOf = newData[0][\"holder\"].toString() == account.toString();\r\n                                        if (newData[0][\"holder\"].toString() == account.toString()) {\r\n                                            await alterLoaderText(\"Claimable\");\r\n                                        } else {\r\n                                            await alterLoaderText(\"Locked\");\r\n                                        }\r\n                                    };\r\n                                    if (newData[0][\"creator\"]) {\r\n                                        console.log(\"creator: \", newData[0][\"creator\"])\r\n                                        await setTheCreator(newData[0][\"creator\"]);\r\n                                    };\r\n                                    if (newData[0][\"claimed\"]) {\r\n                                        setClaimed(newData[0][\"claimed\"]);\r\n                                        if (newData[0][\"claimed\"]) {\r\n                                            if (newData[0][\"claimed\"] == true) {\r\n                                                console.log(\"iLockClaimed: \",newData[0][\"claimed\"]);\r\n                                                await setDoneForSure(true);\r\n                                                await clearInterval(timer);\r\n                                                await clearInterval(lock_props);\r\n                                                await clearInterval(unlockAbleCheck);\r\n                                                await alterLoaderText(\"Claimed\");\r\n                                                return true;\r\n                                            } else {\r\n                                                if (ownerOf == true) {\r\n                                                    await setOwnable(true);\r\n                                                    await alterLoaderText(\"Claimable\");\r\n                                                } else {\r\n                                                    await alterLoaderText(\"Locked\");\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    await setReady(true);\r\n                                } else {\r\n                                    await setReady(false);\r\n                                };\r\n                                const dateToday = new Date();\r\n                                try {\r\n                                    const timestamp = epoch(dateToday);\r\n                                    setCurrentTimestamp(timestamp);\r\n                                    const unlock_Date = unlockDate;\r\n                                    const unlock_Timestamp = unlockTimestamp;\r\n                                    let unlock_able = timestamp > unlock_Date;\r\n                                    console.log(\"unlock_able: \", unlock_able, timestamp, unlockDate, unlockTimestamp, unlock_Timestamp);\r\n                                    if (isNaN(unlock_Date) || isNaN(timestamp)) {\r\n                                        setUnlockAble(false);\r\n                                        console.log(\"!unlockable or !prepared\");\r\n                                    } else {\r\n                                        setUnlockAble(unlock_able);\r\n                                    };\r\n                                    unlockAbleCheck = setTimeout(async (provider, lockId, account, network) => {\r\n                                        isLockClaimed(provider, lockId, account, network).then(async (claimed_already) => {\r\n                                            if (claimed_already) {\r\n                                                try {\r\n                                                    console.log(\"claimed_already (claimed): \", claimed_already[\"claimed\"]);\r\n                                                    await setClaimed(claimed_already[\"claimed\"]);\r\n                                                } catch (e) {\r\n                                                    console.log(\"e: \", e);\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                        console.log(\"currentTimestamp: \", timestamp, currentTimestamp);\r\n                                        if (unlock_Date) {\r\n                                            try {\r\n                                                let unlock_able = timestamp > unlock_Timestamp;\r\n                                                console.log(\"unlock_able: \", unlock_able, timestamp, unlock_Date, isNaN(unlock_Date), isNaN(timestamp));\r\n                                                setUnlockAble(unlock_able);\r\n                                            } catch (e) {\r\n                                                console.log(\"err: \", e);\r\n                                            };\r\n                                        };\r\n                                    }, 10000, provider, lockId, account, network);\r\n                                    setNotMiner(lockToken.toString() !== theCreator || lockToken.toString() !== theHolder || lockToken.toString() !== account);\r\n                                    console.log(\"lockId: \", lockId);\r\n                                    console.log(\"account: \", account);\r\n                                    console.log(\"network: \", network);\r\n                                    console.log(\"dateNow: \", timestamp);\r\n                                    console.log(\"timestamp: \", timestamp);\r\n                                    console.log(\"theHolder: \", theHolder);\r\n                                    console.log(\"unlockDate: \", unlockDate);\r\n                                    console.log(\"unlockAble: \", unlockAble);\r\n                                    console.log(\"unlock_able: \", unlock_able);\r\n                                    console.log(\"unlock_Date: \", unlock_Date);\r\n                                    console.log(\"unlock_Timestamp: \", unlock_Timestamp);\r\n                                    console.log(\"claimable: \", timestamp > unlock_Date);\r\n                                } catch (e) {\r\n                                    console.log(\"err: \", e);\r\n                                };\r\n                                __dispatch(newData);\r\n                            };\r\n                        });\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    };\r\n                }, 2000);\r\n            };\r\n            if (account) {\r\n                __prepare(connector);\r\n            } else {\r\n                return () => clearInterval(timer);\r\n            };\r\n        };\r\n    }, [account, wallet, lockId, network])\r\n\r\n    const classes = useStyles.pools();\r\n    const mobileClasses = useStyles.mobile();\r\n    const isMobile = useMediaQuery('(max-width:600px)');\r\n\r\n    const change_Network = async () => {\r\n        if (account) {\r\n            const provider = window.ethereum; {\r\n                /*\r\n                    checkEtherBalance(provider, account);\r\n                */\r\n            }\r\n            const currentNetworkData = networks_data.filter((each) => each.name === network);\r\n            try {\r\n                await provider.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: currentNetworkData[0].chainData.chainId }],\r\n                });\r\n                console.log(\"You have succefully switched to \", network)\r\n            } catch (switchError) {\r\n                {\r\n                    /*\r\n                    // This error code indicates that the chain has not been added to MetaMask.\r\n                    */\r\n                }\r\n                try {\r\n                    const params_network_add = {\r\n                        chainId: currentNetworkData[0].chainData.chainId,\r\n                        rpcUrls: [rpc_[currentNetworkData[0].chainData.chainId]],\r\n                        chainName: network_[currentNetworkData[0].chainData.chainId],\r\n                        nativeCurrency: { name: network_symbols[currentNetworkData[0].chainData.chainId], decimals: network_decimals[currentNetworkData[0].chainData.chainId], symbol: network_symbols[currentNetworkData[0].chainData.chainId] },\r\n                        blockExplorerUrls: [explorer_[currentNetworkData[0].chainData.chainId]],\r\n                        iconUrls: [icons_[currentNetworkData[0].chainData.chainId]]\r\n                    };\r\n                    console.log(\"params_network_add: \", switchError.code, params_network_add);\r\n                    if (switchError.code === 4902) {\r\n                        console.log(\"This network is not available in your metamask, please add it\");\r\n                        let provider = await connector.getProvider();\r\n                        provider.request({\r\n                            method: 'wallet_addEthereumChain',\r\n                            params: [{ ...params_network_add }]\r\n                        }).catch((error) => {\r\n                            console.log(\"provider_err: \", error);\r\n                        });\r\n                    } else if (switchError.code === 4001) {\r\n                        console.log(\"Switch Request has rejected\");\r\n                    } else if (switchError.code === 4200) {\r\n                        console.log(\"You have succefully switched to \", network)\r\n                    };\r\n                } catch (e) {\r\n                    console.log(\"error: \", e);\r\n                }\r\n            };\r\n        };\r\n    };\r\n    const changeNetwork = (name) => {\r\n        setNetwork(name);\r\n        dispatch({\r\n            type: TOKENDATA,\r\n            payload: {}\r\n        });\r\n        change_Network();\r\n    }\r\n\r\n    const fn = (val, decimal = 4) => {\r\n        if (!isNaN(Number(val))) {\r\n            const trimVal = Number(Number(val).toFixed(decimal));\r\n            const decimalVal = trimVal.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n            return decimalVal;\r\n        } else {\r\n            return Number(0);\r\n        }\r\n    }\r\n\r\n    const withdrawToken = async (id, receiver, isEth) => {\r\n        if (!account) return;\r\n        if (claimed) return;\r\n        let provider = await connector.getProvider();\r\n        let gasLimit;\r\n        w3(provider, network).then(async (W3) => {\r\n            let block = await W3.eth.getBlock(\"latest\");\r\n            console.log(\"(w3) block: \", block);\r\n            console.log(\"(w3) gasLimit: \", block.gasLimit);\r\n            gasLimit = block.gasLimit;\r\n            console.log(\"Processing withdrawal: \", id, gasLimit, isEth, lockId, account, receiver, network);\r\n            withdraw(provider, lockId, account, receiver, isEth, network, ownable, gasLimit).then(async (status) => {\r\n                const newData = JSON.parse(JSON.stringify(data));\r\n                if (status) {\r\n                    console.log(\"Withdrawal processed: \", newData);\r\n                    setClaimed(true);\r\n                    setIsWithdrawn(true);\r\n                    _toggleWithdrawalModal(\"Confirmed\", \"Transaction: \", id, network);\r\n                };\r\n            });\r\n        });\r\n    };\r\n    _transfer = withdrawToken;\r\n\r\n    const withdrawProperty = async (id) => {\r\n        console.log(\"withdrawProperty: \", id);\r\n        _toggleWithdrawalModal(\"Delegate a receiver wallet and submit the transfer\", \"Withdraw\", id, network);\r\n    }\r\n\r\n    const transferOwnership = async (id) => {\r\n        if (!account) return;\r\n        let provider = await connector.getProvider()\r\n        withdraw(provider, lockId, account, network).then(async (status) => {\r\n            const newData = JSON.parse(JSON.stringify(data));\r\n            if (status) console.log(\"Withdrawal processed: \", newData);\r\n        })\r\n    }\r\n\r\n    const LockedEvent = (props) => {\r\n        const { index, event } = props\r\n        const withdrawDate = new Date(event.timestamp * 1000);\r\n        let isWithdrawable = event.timestamp < currentTimestamp;\r\n        setIsWithdrawn(event.isWithdrawn);\r\n        const lockedTokenAmount = event.amount / Math.pow(10, event.decimals)\r\n        const getTokenSymbol = event.symbol;\r\n        const owner = event.owner;\r\n        const lockedTime = new Date(event.depositEvent.timestamp * 1000);\r\n        const countdownPercent = event.timestamp > currentTimestamp ? Math.ceil((event.timestamp - currentTimestamp) / (event.timestamp - event.depositEvent.timestamp) * 100) : 0;\r\n        const getRemainTime = () => {\r\n            if (event.timestamp < currentTimestamp) return `00D-00H-00M-00S`;\r\n            return `${Math.floor((event.timestamp - currentTimestamp) / 86400)}D-${Math.floor(((event.timestamp - currentTimestamp) % 86400) / 3600)}H-${Math.floor(((event.timestamp - currentTimestamp) % 3600) / 60)}M-${(event.timestamp - currentTimestamp) % 60}S`\r\n        }\r\n        isWithdrawable = true;\r\n        return (\r\n            <Grid \r\n                container\r\n                direction='row'\r\n                justifyContent='space-between'\r\n                alignItems='center'\r\n                style={{borderBottom:'2px solid #e55370', fontSize: '13px'}}\r\n                >\r\n                    <Grid item  xs={2} sm={2} md={1} style={{textAlign:'center'}}>\r\n                        <img src='/lock.png' style={{width:40}} alt='token image' />\r\n                    </Grid>\r\n                    <Grid item  xs={10} sm={10} md={5}>\r\n                        <p>Lock Tokens - {fn(lockedTokenAmount, 2)} {getTokenSymbol}</p>\r\n                        {!isWithdrawable ? <p><span><button>Locked</button></span> Locked {lockedTime.toDateString()} - unlocks {withdrawDate.toDateString()}</p>: \r\n                        (!isWithdrawn ? <p><span><button>Withdrawable</button></span> Locked {lockedTime.toDateString()} - unlocks {withdrawDate.toDateString()}</p>:\r\n                        <p><span><button>Withdrawn</button></span> Locked {lockedTime.toDateString()} - unlocks {withdrawDate.toDateString()}</p>)}\r\n                        <p>Owner: {owner}</p>\r\n                    </Grid>\r\n\r\n                    <Grid item  xs={12} sm={8} md={3} style={{textAlign:'center'}}>\r\n                        <p >UNLOCK COUNTDOWN</p>\r\n                        <BorderLinearProgress variant='determinate' value={countdownPercent} />\r\n                        <p >{getRemainTime()}</p>\r\n                    </Grid>\r\n                    <Grid item  xs={12} sm={4} md={3} style={{textAlign:'center'}}>\r\n                        {claimed && !isWithdrawable? <Link style={{textDecoration: 'none'}} href={`${explorer[network]}/tx/${event.depositEvent.transactionHash}`} target='_blank' rel='noreferrer'>VIEW TX</Link>: (\r\n                            !claimed && !isWithdrawn ? (account && account.toLowerCase() === owner.toLowerCase() ? <Button onClick={() => withdrawProperty(lockId)} >WITHDRAW</Button> : <Link style={{textDecoration: 'none'}} href={`${explorer[network]}/tx/${event.depositEvent.transactionHash}`} target='_blank' rel='noreferrer'>VIEW TX</Link>) :\r\n                            <Link style={{textDecoration: 'none'}} href={`${explorer[network]}/tx/${event.withdrawEvent.transactionHash}`} target='_blank' rel='noreferrer'>VIEW TX</Link>\r\n                        )}\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n        )\r\n    }\r\n\r\n    let lockedTokenAmount = 0,\r\n        lockedLiquidity = [];\r\n    if (tokenData) tokenData.data.map(each => {\r\n        if (!each.isWithdrawn && !each.isLiquidity) lockedTokenAmount += each.amount / Math.pow(10, each.decimals);\r\n        if (!each.isWithdrawn && each.isLiquidity) {\r\n            let index = lockedLiquidity.findIndex(eachLiquidity => eachLiquidity.token0.address === each.token0.address && eachLiquidity.token1.address === each.token1.address);\r\n            if (index !== -1) lockedLiquidity.locked += each.amount * 100 / each.totalSupply;\r\n            else lockedLiquidity.push({ token0: each.token0, token1: each.token1, locked: each.amount * 100 / each.totalSupply });\r\n        }\r\n    })\r\n    return (\r\n        <Container className={classes.root} maxWidth='lg'>\r\n            <Box className={classes.info}>\r\n                <Grid container spacing={3}>\r\n                    {\r\n                        claimed || !account ? <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}> <Loader /> </Typography> : account && !claimed && ready ? <Grid className={isMobile ? `${mobileClasses.root} grid`  : 'grid'} item xs={12} sm={12} md={12} >\r\n                        <Card className='card'>\r\n                            <CardContent>\r\n                                <Typography className='title' color='textSecondary'>\r\n                                    TimeLock Overview\r\n                                </Typography>\r\n                                <br />\r\n                                { claimed ? <></> : !claimed && ether == false ? <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>ERC20 Balance</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                    {`${tokenBalance}`}\r\n                                    </Grid>\r\n                                </Grid> : isNaN(tokenBalance) ? <></> : <></>}\r\n                                <Grid \r\n                                                                    container\r\n                                                                    direction='row'\r\n                                                                    justifyContent='space-between'\r\n                                                                    alignItems='center'\r\n                                                                >\r\n                                                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                                                        <span>Ether</span>\r\n                                                                    </Grid>\r\n                                                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                                                    {`${ether}`}\r\n                                                                    </Grid>\r\n                                                                </Grid>\r\n                                { claimed ? <></> : !claimed && ether == true ? <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>ETH Balance</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                    {`${isNaN(etherBalance) ? 0 : etherBalance}`}\r\n                                    </Grid>\r\n                                </Grid> : isNaN(etherBalance) ? <></> : <></>}\r\n                                { claimed ? <></> : <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>Unlocks At</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                    {`\r\n                                        ${\r\n                                            // eslint-disable-next-line\r\n                                            unlockDate}`}\r\n                                    </Grid>\r\n                                </Grid>}\r\n                                { !claimed && ether == false || !claimed && notMiner == true ? <Grid \r\n                                                                    container\r\n                                                                    direction='row'\r\n                                                                    justifyContent='space-between'\r\n                                                                    alignItems='center'\r\n                                                                >\r\n                                                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                                                        <span>ERC20 Contract</span>\r\n                                                                    </Grid>\r\n                                                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                                                        {`${lockToken}`}\r\n                                                                    </Grid>\r\n                                                                </Grid> : <></>}\r\n                                { claimed ? <></> : <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>iLock NFT</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        {`${_token}`}\r\n                                    </Grid>\r\n                                </Grid>}\r\n                                { claimed ? <></> : <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>Holding Contract</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        {`${holdingContract}`}\r\n                                    </Grid>\r\n                                </Grid>}\r\n                                { claimed ? <></> : <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>Claimed</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        {`${claimed}`}\r\n                                    </Grid>\r\n                                </Grid>}\r\n                                { claimed ? <></> : <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>Holder</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        {`${theHolder}`}\r\n                                    </Grid>\r\n                                </Grid>}\r\n                                <br />\r\n                                <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={12} sm={12} md={12} style={{textAlign:'center'}}>\r\n                                        <span>Lock Status</span>\r\n                                        {\r\n                                            !claimed && unlockAble == true ? <Alert severity=\"success\" style={{textAlign:'center'}}>Unlocked</Alert> : <Alert severity=\"warning\" style={{textAlign:'center'}}>Locked</Alert>\r\n                                        }\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <br />\r\n                                        { claimed ? <span><br /><br /><Alert severity=\"warning\" style={{textAlign:'center'}}>This iLock has been Claimed</Alert></span> : account == theHolder && !claimed ? <Grid item  xs={4} sm={4} md={4} style={{textAlign:'center'}}>\r\n                                                                                     <Button style={{padding:5,margin:5}} onClick={() => withdrawProperty(lockId)} >WITHDRAW</Button>\r\n                                                                                     <Button style={{padding:5,margin:5}} onClick={() => _transfer_ownership(event)} >TRANSFER OWNERSHIP</Button>\r\n                                                                                </Grid> : <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n                                                                                <Loader />\r\n                                        </Typography>}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid> : <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n                        <Loader />\r\n                    </Typography>\r\n                    }\r\n                    \r\n                    \r\n                </Grid>\r\n            </Box>\r\n            <Typography component=\"span\">\r\n                <TransferOwnershipModal />\r\n                <WithdrawModal />\r\n            </Typography>\r\n        </Container >\r\n    )\r\n}\r\n// export default Portfolio\r\nconst mapStateToProps = state => ({\r\n    statistics: state.statistics,\r\n    walletAddress: state.walletAddress\r\n})\r\n\r\n//connect function INJECTS dispatch function as a prop!!\r\nexport default connect(mapStateToProps)(LockUp);"],"sourceRoot":""}