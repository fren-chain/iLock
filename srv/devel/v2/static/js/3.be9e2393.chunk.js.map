{"version":3,"sources":["components/Loader.js","api.js","components/TransferOwnership.js","components/Checkbox.js","components/Transfer.js","pages/LockUp.js"],"names":["alterLoaderText","Loader","_ref","isLoading","useStyles","base","_React$useState","React","useState","_React$useState2","_slicedToArray","loaderText","setLoaderText","_React$useState3","_React$useState4","loaderBottomText","setLoaderBottomText","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","l_t","lb_t","wrap","_context","prev","next","console","log","length","abrupt","stop","_x","_x2","apply","arguments","_jsxs","Fragment","children","_jsx","Stack","spacing","style","padding","margin","Skeleton","variant","sx","fontSize","Typography","component","alignItems","textAlign","dangerouslySetInnerHTML","__html","width","height","getERC20Metadata","_callee2","provider","_chain","_tokenAddress","address","result","decimals","symbol","name","balanceOf","web3","contract","_web","_contract","_context2","Web3","t0","eth","Contract","erc20Abi","t1","sent","t2","methods","call","parseFloat","t3","t4","t5","t6","t7","_x3","_x4","_x5","_x6","getTokenMetadata","_ref3","_callee3","_context3","_x7","_x8","_toggleOwnershipModal","position","top","left","transform","bgcolor","border","boxShadow","p","TransferOwnershipModal","open","setOpen","_useState","_useState2","headerText","setHeaderText","_useState3","_useState4","toggleText","setToggleText","_useState5","_useState6","lockId","setLockId","_useState7","_useState8","headHolder","setHeadHolder","_useState9","_useState10","_useState11","_useState12","network","setNetwork","closeModal","changeHeaderText","header_Text","changeToggleText","toggle_Text","dashboardClasses","dashboard","l_lockId","l_network","undefined","handleHeadHolder","e","get_holder","target","value","iLock_transferOwnership_helper","_callee4","_context4","_wrap","then","_ref4","wrapped","Modal","onClose","Box","Grid","container","direction","className","balanceContainer","item","textLeft","xs","sm","md","id","mt","TextField","label","type","InputLabelProps","shrink","inputprops","min","InputProps","onChange","onKeyUp","Button","onClick","getChecked","_toggleWithdrawalModal","ControlledCheckbox","checked","setChecked","Checkbox","event","inputProps","WithdrawModal","receiver","setReceiver","_useState13","_useState14","_useState15","_useState16","setSymbol","_useState17","_useState18","network_symbols","network_to_chain","handleReceiver","get_receiver","iLock_transfer_helper","_transfer","transferred","connector_","getLockId","getAccount","getNetwork","styled","LinearProgress","theme","borderRadius","_defineProperty","concat","linearProgressClasses","colorPrimary","backgroundColor","palette","grey","mode","bar","connect","state","statistics","walletAddress","props","_props$match$params","match","params","wallet","chainName","token","isNaN","history","push","_useWeb3React","useWeb3React","account","connector","amount","setAmount","_token","set_Token","lockToken","setLockToken","setChainId","status_","setStatus_","ownable","setOwnable","ready","setReady","ether","setEther","_useState19","_useState20","notMiner","setNotMiner","_useState21","_useState22","claimed","setClaimed","_useState23","_useState24","unlockDate","setUnlockDate","_useState25","_useState26","theHolder","setTheHolder","_useState27","_useState28","theCreator","setTheCreator","_useState29","_useState30","_useState31","_useState32","setTokenDecimals","_useState33","_useState34","tokenBalance","setTokenBalance","_useState35","_useState36","etherBalance","setEtherBalance","_useState37","_useState38","setIsWithdrawn","_useState39","_useState40","unlockAble","setUnlockAble","_useState41","_useState42","doneForSure","setDoneForSure","_useState43","_useState44","tokenSet","setTokenSet","_useState45","_useState46","unlockTimestamp","setUnlockTimestamp","_useState47","_useState48","modalInner","setModalInner","_useState49","_useState50","holdingContract","setHoldingContract","_useState51","_useState52","currentTimestamp","setCurrentTimestamp","dispatch","useDispatch","data","useSelector","tokenLists","ownerOf","tokenData","network_lower_to_proper","explorer_","_ref5","_ref6","_ref7","_callee5","to","_context5","getProvider","transferOwnership_iLock","ownershipTransfer","t8","t9","_transfer_ownership","_ref8","_callee6","_context6","useEffect","_callee17","setDate","epoch","__dispatch","__prepare","lock_props","props_out","timer","unlockAbleCheck","_context17","date","Date","parse","toggleDrawer","changeNetwork","_ref10","_callee7","_context7","getLocker","_ref11","_callee8","utcSeconds","d","_context8","setUTCSeconds","_ref12","_callee9","newData","_context9","TOKENLISTS","payload","_ref13","_callee10","_context10","getChainId","chainId","Number","_x9","setTimeout","_callee11","iLock","tokenBalance_holding_contract","tokenBalance_account","_context11","getTokenBalance","clearInterval","_ref15","_callee16","_context16","setInterval","_callee15","_context15","_ref17","_callee14","bytes","_yield$getEtherBalanc","_yield$getEtherBalanc2","_0x","_0x0","_0x1","_provider","_bytes","dateToday","timestamp","unlock_Date","unlock_Timestamp","unlock_able","_context14","Math","pow","toFixed","getEtherBalance","toString","_ref18","_callee13","_unlock_able","_context13","isLockClaimed","_ref19","_callee12","claimed_already","_context12","_x16","_x12","_x13","_x14","_x15","_x11","_x10","classes","pools","mobileClasses","mobile","isMobile","useMediaQuery","change_Network","_ref20","_callee18","currentNetworkData","params_network_add","_context18","window","ethereum","networks_data","filter","each","request","method","chainData","rpcUrls","rpc_","network_","nativeCurrency","network_decimals","blockExplorerUrls","iconUrls","icons_","code","_objectSpread","catch","error","TOKENDATA","withdrawToken","_ref21","_callee21","isEth","gasLimit","_context21","w3","_ref22","_callee20","W3","block","_context20","getBlock","withdraw","_ref23","_callee19","status","_context19","JSON","stringify","_x21","_x20","_x17","_x18","_x19","withdrawProperty","_ref24","_callee22","_context22","_x22","lockedLiquidity","map","isWithdrawn","isLiquidity","findIndex","eachLiquidity","token0","token1","locked","totalSupply","Container","root","maxWidth","info","Card","CardContent","color","_Fragment","justifyContent","Alert","severity"],"mappings":"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","file":"static/js/3.be9e2393.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\nimport clsx from \"clsx\";\r\nimport Paper from \"@mui/material/Box\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport useStyles from \"../assets/styles\";\r\nimport SpinnerLogoWhite from \"../assets/img/spinner-logo-white.png\";\r\n\r\nexport let alterLoaderText;\r\nconst Loader = ({ isLoading }) => {\r\n    const classes = useStyles.base();\r\n    const [loaderText,setLoaderText] = React.useState(\"\");\r\n    const [loaderBottomText,setLoaderBottomText] = React.useState(\"\");\r\n    alterLoaderText = async function(l_t,lb_t) {\r\n      console.log(\"l_t: \",l_t);\r\n      await setLoaderText(l_t);\r\n      if(lb_t) {\r\n        if(lb_t.length>0) {\r\n          await setLoaderBottomText(lb_t);\r\n        }\r\n      }\r\n      return l_t;\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n          <Stack spacing={1} style={{padding:50,margin:50}}>\r\n          {/* For variant=\"text\", adjust the height via font-size */}\r\n            <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\r\n          {/* For other variants, adjust the size with `width` and `height` */}\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <div dangerouslySetInnerHTML={{ __html: loaderText ? loaderText : 'SCANNING BLOCKCHAIN' }} />\r\n          </Typography>\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <Skeleton variant=\"circular\" width={40} height={40} /> \r\n          </Typography>\r\n          <Skeleton variant=\"rectangular\" width={210} height={60} />\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <div dangerouslySetInnerHTML={{ __html: loaderBottomText ? loaderBottomText : '...' }} />\r\n          </Typography>\r\n          <Skeleton variant=\"rounded\" width={210} height={60} />\r\n          </Stack>\r\n      </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import axios from 'axios';\r\nimport {\r\n    Multicall\r\n  } from 'ethereum-multicall';\r\n\r\nimport { erc20Abi, lockerContractAbi, lockerAddress } from \"./constants\";\r\nimport erc721Abi from \"./erc721_abi.json\";\r\nimport Web3 from \"web3\";\r\nimport dexscreener from 'dexscreener-api';\r\nimport { walletAddress } from './redux/reducers';\r\n\r\nimport { provider, explorer, serverApi, dexscreenerUrl_ } from \"./web3.js\";\r\n\r\nconst apiKey = 'SvMhtTsmQ239NmpwWjnnLWXtag5Jt8wYp7NF8F3Tear1QSaDRl9gnM34JZVXdLFV';\r\nconst apiConfig = {\r\n    headers: {\r\n        'x-api-key': apiKey\r\n    }\r\n}\r\nconst serverUrl = 'https://deep-index.moralis.io/api/v2';\r\n\r\nexport const getTokenPrice = async function (_chain, _tokenAddress) {\r\n    let price;\r\n    try {\r\n        const pairsResponse = await dexscreener.getPairInformationByChain(_chain, _tokenAddress); console.log(\"pairsResponse: \",pairsResponse);\r\n        price = 0;\r\n    } catch (e) {\r\n        price = 0;\r\n        {/*\r\n            *   // Get pair information by chain\r\n            *   // // Get pairs matching base token address\r\n            *   // const tokensResponse = await getPairsMatchingBaseTokenAddress(\"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\r\n            *   // // Search for pairs matching query\r\n            *   // const searchResponse = await searchPairsMatchingQuery(\"WBNB USDC\");\r\n            *   // await axios.get(`${serverUrl}/erc20/${_tokenAddress}/price?chain=${_chain}`, apiConfig);\r\n        */}\r\n    }\r\n    return price && price.data;\r\n}\r\nexport const getERC20Metadata = async function (provider, _chain, _tokenAddress, address) {\r\n    console.log(\"getERC20Metadata: \",_chain, _tokenAddress);\r\n    let result; let decimals; let symbol; let name; let balanceOf;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(await erc20Abi, _tokenAddress);\r\n        decimals = await contract.methods[\"decimals\"]().call();\r\n        symbol = await contract.methods[\"symbol\"]().call();\r\n        balanceOf = await contract.methods[\"balanceOf\"](address).call();\r\n        name = await contract.methods[\"name\"]().call();\r\n        result = [{\r\n            \"balanceOf\":parseFloat(balanceOf),\r\n            \"balance\":parseFloat(balanceOf),\r\n            \"userBalance\":parseFloat(balanceOf),\r\n            \"decimals\":parseFloat(decimals),\r\n            \"symbol\":symbol,\r\n            \"tokenTitle\":name,\r\n            \"name\":name\r\n        }]; \r\n    } catch(e) {\r\n        console.log(\"booting the backup\");\r\n        try {\r\n            let web3 = new Web3(provider);\r\n            let contract = new web3.eth.Contract(await erc20Abi, _tokenAddress[0]);\r\n            decimals = await contract.methods[\"decimals\"]().call();\r\n            symbol = await contract.methods[\"symbol\"]().call();\r\n            balanceOf = await contract.methods[\"balanceOf\"](address).call();\r\n            name = await contract.methods[\"name\"]().call();\r\n            result = [{\r\n                \"balanceOf\":parseFloat(balanceOf),\r\n                \"balance\":parseFloat(balanceOf),\r\n                \"userBalance\":parseFloat(balanceOf),\r\n                \"decimals\":parseFloat(decimals),\r\n                \"symbol\":symbol,\r\n                \"tokenTitle\":name,\r\n                \"name\":name\r\n            }]; \r\n        } catch(e) {\r\n            console.log(e);\r\n        } finally {\r\n            console.log(\"result: \",result);\r\n            // eslint-disable-next-line\r\n            return result;\r\n        }\r\n    } finally {\r\n        console.log(\"result: \",result);\r\n        // eslint-disable-next-line\r\n        return result;\r\n    };\r\n}\r\nexport const getTokenMetadata = async function (_chain, _tokenAddress) {\r\n        console.log(\"getTokenMetadata: \",_chain, _tokenAddress);\r\n    // replace moralis\r\n    // 1) call() to contract => BASE_URI \r\n    // 2) call() to contract => TOKEN_URI||TOKEN_ID \r\n    // = async (provider, id, account, network) => {\r\n    let result; let decimals; let symbol; let name;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        // let ERC721_contract = new web3.eth.Contract(erc721Abi, _tokenAddress);\r\n        let contract = new web3.eth.Contract(erc20Abi, _tokenAddress);\r\n        decimals = await contract.methods[\"decimals\"]().call();\r\n        symbol = await contract.methods[\"symbol\"]().call();\r\n        name = await contract.methods[\"name\"]().call();\r\n        result = {\r\n            \"decimals\":decimals,\r\n            \"symbol\":symbol,\r\n            \"name\":name\r\n        };\r\n        console.log(\"result: \",result);\r\n        return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\nexport const getMyLockers = async function (account, network) {\r\n    console.log(\"getMyLockers: \",account, network);\r\n    let result; let _my_locks;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc20Abi, lockerAddress[network]);\r\n        _my_locks = await contract.methods[\"_my_locks\"](account).call();\r\n        let _my_lockers = [];\r\n        for(let m = 0; m < _my_locks.length; m++) {\r\n            _my_lockers.push(_my_locks[m]);\r\n        };\r\n        let i = 0;\r\n        while(i<_my_lockers.length) {\r\n            if(i==_my_lockers.length-1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            };\r\n        };\r\n        _my_locks = await contract.methods[\"_my_locks\"](account).call();\r\n        result = {\r\n            \"_my_locks\":_my_locks\r\n        };\r\n        console.log(\"result: \",result);\r\n        return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\nexport const getNFTTokenMetadata = async function (_chain, _tokenAddress) {\r\n        console.log(\"getTokenMetadata: \",_chain, _tokenAddress);\r\n    // replace moralis\r\n    // 1) call() to contract => BASE_URI \r\n    // 2) call() to contract => TOKEN_URI||TOKEN_ID \r\n    // = async (provider, id, account, network) => {\r\n    let result;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc721Abi, _tokenAddress);\r\n        result = await contract.methods[\"tokenURI\"](1).call();\r\n        console.log(\"result: \",result);\r\n        return result.status;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\n\r\nexport const getTokenBalance = async function (provider, _chain, _tokenAddress, _walletAddress) {\r\n        console.log(\"getTokenBalance: \",_chain, _tokenAddress, _walletAddress);\r\n    // replace moralis\r\n    // call() to explorer => get_balance()\r\n    let result;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc20Abi, _tokenAddress);\r\n        result = await contract.methods[\"balanceOf\"](_walletAddress).call();\r\n        console.log(\"result: \",result);\r\n        return result.status;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const balances = await axios.get(`${serverUrl}/${_walletAddress}/erc20?chain=${_chain}&token_addresses=${_tokenAddress}`, apiConfig);\r\n    // return balances.data;\r\n}\r\n\r\nexport const runContractFunction = async function (_chain, _contractAddress, _functionName, _abi, _params) {\r\n        console.log(\"runContractFunction: \",_chain, _contractAddress, _functionName, _abi, _params);\r\n    // replace moralis\r\n    // injected web3 via ethersJS||web3.js\r\n    let result;\r\n    try {\r\n        // result = await axios.post(`${serverUrl}/${_contractAddress}/function?chain=${_chain}&function_name=${_functionName}`, {\r\n        //     \"abi\": _abi,\r\n        //     \"params\": _params\r\n        // }, apiConfig);\r\n    } catch (e) {\r\n        result = null;\r\n    }\r\n    return result ? result.data : null;\r\n}\r\n\r\nexport const getCurrentFee = async function (_chain, _tokenAddress, _walletAddress) {\r\n    const dynamicFeeAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getDynamicFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    if (await isExcludedFromFee(_chain, _tokenAddress, _walletAddress)) return 0;\r\n    const dynamicFee = await runContractFunction(_chain, _tokenAddress, 'getDynamicFee', dynamicFeeAbi, {from:_walletAddress});\r\n    return dynamicFee;\r\n}\r\n\r\nexport const isExcludedFromFee = async function (_chain, _tokenAddress, _walletAddress) {\r\n    const isExcludedFromFeeAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    return await runContractFunction(_chain, _tokenAddress, 'isExcludedFromFee', isExcludedFromFeeAbi, {account:_walletAddress});\r\n}\r\n\r\nexport const getCommonFee = async function (_chain, _tokenAddress) {\r\n    const liquidityAndMarketingFeeAbi = [{\"inputs\":[],\"name\":\"_liquidityAndMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const taxFeeAbi = [{\"inputs\":[],\"name\":\"_taxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    let commonFee = 0;\r\n    await Promise.all([\r\n        runContractFunction(_chain, _tokenAddress, '_liquidityAndMarketingFee', liquidityAndMarketingFeeAbi, {}),\r\n        runContractFunction(_chain, _tokenAddress, '_taxFee', taxFeeAbi, {})\r\n    ]).then(results => results.map(each => commonFee += Number(each)));\r\n    return commonFee;\r\n}\r\n\r\nexport const burntAndLeftTokenPercent = async function (_chain, _tokenAddress) {\r\n    const burntVsCirculatingSupplyAbi = [{\"inputs\":[],\"name\":\"burntVsCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burnt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"circulating\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const data = await runContractFunction(_chain, _tokenAddress, 'burntVsCirculatingSupply', burntVsCirculatingSupplyAbi);\r\n    return {burnt: Number(data[0]), left: Number(data[1]), leftPercent: data[1] / (Number(data[0]) + Number(data[1])) * 100};\r\n}\r\n\r\nexport const totalFees = async function (_chain, _tokenAddress) {\r\n    const totalFeesAbi = [{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const data = await runContractFunction(_chain, _tokenAddress, 'totalFees', totalFeesAbi);\r\n    return data;\r\n}\r\n\r\nexport const getTransactions = async function (_chain, _walletAddress) {\r\n    const transactions = await axios.get(`${serverUrl}/${_walletAddress}/erc20/transfers?chain=${_chain}&offset=0&oder=desc`, apiConfig);\r\n    return transactions.data;\r\n}\r\n\r\nexport const getLogsByAddress = async function (_chain, _tokenAddress) {\r\n    // replace moralis\r\n    // enable param *(topic_hash) { user supplied topic hash }\r\n    // add back (events) fn() from iStack tests\r\n    let offset = 0;\r\n    const response = await axios.get(`${serverUrl}/${_tokenAddress}/logs?chain=${_chain}&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&offset=${offset}&oder=desc`, apiConfig);\r\n    let logs = response.data.result;\r\n    const total = response.data.total;\r\n    const pages = Math.ceil(total / 500);\r\n    let page = 1;\r\n    let getLogFunctions = [];\r\n    while (page < pages) {\r\n        offset = page * 500;\r\n        getLogFunctions.push(axios.get(`${serverUrl}/${_tokenAddress}/logs?chain=${_chain}&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&offset=${offset}&oder=desc`, apiConfig));\r\n        page++;\r\n    }\r\n    if (getLogFunctions.length) {\r\n        await Promise.all(getLogFunctions).then(results => {\r\n            results.map(each => {\r\n                logs = logs.concat(each.data.result);\r\n            })\r\n        })\r\n    }\r\n    return logs;\r\n}\r\n\r\nfunction getAddress(topic) {\r\n    if (topic === null || topic === '') return '';\r\n    return `0x${topic.substring(topic.length - 40)}`;\r\n}\r\n\r\nfunction filterLogs(logs, _walletAddress) {\r\n    return logs.filter(each => getAddress(each.topic1) === _walletAddress.toLowerCase() || getAddress(each.topic2) === _walletAddress.toLowerCase());\r\n}\r\n\r\nfunction getValue(topic) {\r\n    return parseInt(topic, 16);\r\n}\r\n\r\nasync function calculateBuySell(logs, _chain, _tokenAddress, _walletAddress) {\r\n    let buy = 0, sell = 0, isFee = true;\r\n    if (await isExcludedFromFee(_chain, _tokenAddress, _walletAddress)) isFee = false;\r\n    logs.map(each => {\r\n        if (getAddress(each.topic1) === _walletAddress.toLowerCase()) {\r\n            if (isFee) {\r\n                sell += getValue(each.data) / 97 * 100;\r\n            } else {\r\n                sell += getValue(each.data);\r\n            }\r\n        } else buy += getValue(each.data);\r\n    })\r\n    let result = {buy: buy, sell: sell};\r\n    return result;\r\n}\r\n\r\nexport const walletExchange = async function(_chain, _tokenAddress, _walletAddress) {\r\n    let logs;\r\n    await getLogsByAddress(_chain, _tokenAddress).then(data=> {\r\n        logs = filterLogs(data, _walletAddress);\r\n    })\r\n    return await calculateBuySell(logs, _chain, _tokenAddress, _walletAddress);\r\n}","import { useState } from \"react\";\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport useStyles from \"../assets/styles\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { getLockId, linkWeb3, getNetwork, getAccount, _wrap } from \"../pages/LockUp\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4\r\n};\r\n\r\nexport let _toggleOwnershipModal; // replicated internal function\r\nfunction TransferOwnershipModal() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [headerText, setHeaderText] = useState(\"Loading...\");\r\n    const [toggleText, setToggleText] = useState(\"Loading...\");\r\n    const [lockId, setLockId] = useState(\"\");\r\n    const [headHolder, setHeadHolder] = useState(\"\");\r\n    const [account, setAccount] = useState(\"\");\r\n    const [network, setNetwork] = useState(\"\");\r\n    const openModal = () => setOpen(true);\r\n    const closeModal = () => setOpen(false);\r\n    const changeHeaderText = (header_Text) => setHeaderText(header_Text);\r\n    const changeToggleText = (toggle_Text) => setToggleText(toggle_Text);\r\n    const changeNetwork = (get_network) => setNetwork(get_network);\r\n    const changeAccount = (get_account) => setAccount(get_account);\r\n    const changeHeadHolder = (get_holder) => setHeadHolder(get_holder);\r\n    const changeLockId = (get_lock_id) => setLockId(get_lock_id);\r\n    const dashboardClasses = useStyles.dashboard();\r\n    _toggleOwnershipModal = async (toggle_Text, header_Text, l_lockId, l_network) => {\r\n      if (header_Text !== undefined) {\r\n          console.log(\"iCheck: \",l_lockId, l_network)\r\n          changeToggleText(toggle_Text);\r\n          changeHeaderText(header_Text);\r\n          if(l_lockId !== undefined || l_lockId !== \"\") {\r\n            changeLockId(l_lockId);\r\n            console.log(\"lockId: \",lockId,l_lockId);\r\n          };\r\n          if(l_network !== undefined || l_network !== \"\") {\r\n            changeNetwork(l_network);\r\n            console.log(\"network: \",network);\r\n          };\r\n      };\r\n      if (!open) openModal()\r\n      else closeModal()\r\n    };\r\n    const handleHeadHolder = async(e) => {\r\n        changeHeadHolder(e.target.value);\r\n        console.log(\"holder: \",headHolder);\r\n    };\r\n    const iLock_transferOwnership_helper = async(e) => {\r\n      _wrap(headHolder).then(async(wrapped)=>{\r\n        console.log(\"wrapped: \",wrapped);\r\n      });\r\n    };\r\n    return (\r\n      <Typography component=\"span\">\r\n      <Modal\r\n        open={open}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={12} sm={12} md={12}>\r\n                                                  <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                                                    <Typography component={'span'} dangerouslySetInnerHTML={{__html: [headerText]}}>\r\n                                                    </Typography>\r\n                                                  </Typography>\r\n                                                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                                                    <Typography component={'span'} dangerouslySetInnerHTML={{__html: [toggleText]}}>\r\n                                                    </Typography>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={12} sm={12} md={12}>\r\n                                                    <TextField\r\n                                                        id=\"standard-head-holder\"\r\n                                                        label=\"New Owner\"\r\n                                                        type=\"text\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 1 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 1 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleHeadHolder}\r\n                                                        onKeyUp={handleHeadHolder}\r\n                                                        value={headHolder}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={12} sm={12} md={12}>\r\n                                                  <Button onClick={() => iLock_transferOwnership_helper()}>\r\n                                                    TRANSFER OWNERSHIP\r\n                                                  </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n        </Box>\r\n      </Modal>\r\n      </Typography>\r\n    );\r\n}\r\nexport default TransferOwnershipModal;","import React from \"react\";\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\nimport clsx from \"clsx\";\r\nimport Paper from \"@mui/material/Box\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport useStyles from \"../assets/styles\";\r\nimport SpinnerLogoWhite from \"../assets/img/spinner-logo-white.png\";\r\n\r\nexport let getChecked;\r\nconst ControlledCheckbox = () => {\r\n  const [checked, setChecked] = React.useState(true);\r\n  const classes = useStyles.base();\r\n  getChecked = async() => {\r\n    return checked;\r\n  };\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <Checkbox\r\n      checked={checked}\r\n      onChange={handleChange}\r\n      inputProps={{ 'aria-label': 'controlled' }}\r\n    />\r\n  );\r\n};\r\nexport default ControlledCheckbox;\r\n","import { useState } from \"react\";\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport useStyles from \"../assets/styles\";\r\nimport ControlledCheckbox from '../components/Checkbox.js';\r\nimport { getChecked } from '../components/Checkbox.js';\r\nimport { TextField } from \"@mui/material\";\r\nimport { getLockId, linkWeb3, getNetwork, getAccount, _transfer } from \"../pages/LockUp\";\r\nimport { network_to_chain, network_symbols } from '../constants';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4\r\n};\r\n\r\nexport let _toggleWithdrawalModal; // replicated internal function\r\nfunction WithdrawModal() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [headerText, setHeaderText] = useState(\"Loading...\");\r\n    const [toggleText, setToggleText] = useState(\"Loading...\");\r\n    const [lockId, setLockId] = useState(\"\");\r\n    const [receiver, setReceiver] = useState(\"\");\r\n    const [account, setAccount] = useState(\"\");\r\n    const [network, setNetwork] = useState(\"\");\r\n    const [ether_tx, setEther_tx] = useState(false);\r\n    const [symbol, setSymbol] = useState(\"\");\r\n    const [networkName, setNetworkName] = useState(\"\");\r\n    const openModal = () => setOpen(true);\r\n    const closeModal = () => setOpen(false);\r\n    const changeHeaderText = (header_Text) => setHeaderText(header_Text);\r\n    const changeToggleText = (toggle_Text) => setToggleText(toggle_Text);\r\n    const changeNetwork = (get_network) => setNetwork(get_network);\r\n    const changeAccount = (get_account) => setAccount(get_account);\r\n    const changeReceiver = (get_receiver) => setReceiver(get_receiver);\r\n    const changeLockId = (get_lock_id) => setLockId(get_lock_id);\r\n    const dashboardClasses = useStyles.dashboard();\r\n    _toggleWithdrawalModal = async (toggle_Text, header_Text, l_lockId, l_network) => {\r\n        if (header_Text !== undefined) {\r\n            console.log(\"iCheck: \", l_lockId, l_network)\r\n            changeToggleText(toggle_Text);\r\n            changeHeaderText(header_Text);\r\n            if (l_lockId !== undefined || l_lockId !== \"\") {\r\n                changeLockId(l_lockId);\r\n                console.log(\"lockId: \", lockId, l_lockId);\r\n            };\r\n            if (l_network !== undefined || l_network !== \"\") {\r\n                await changeNetwork(l_network);\r\n                setNetwork(l_network);\r\n                await setSymbol(network_symbols[network_to_chain[l_network]]);\r\n                console.log(\"networkToChain=>Symbol: \", symbol);\r\n                console.log(\"network: \", network, l_network);\r\n            };\r\n        };\r\n        if (!open) openModal()\r\n        else closeModal()\r\n    };\r\n    const handleReceiver = async (e) => {\r\n        changeReceiver(e.target.value);\r\n        console.log(\"receiver: \", receiver);\r\n    };\r\n    const iLock_transfer_helper = async (e) => {\r\n      console.log(\"isEth: \",await getChecked());\r\n        _transfer(lockId,receiver,await getChecked()).then(async (transferred) => {\r\n            console.log(\"transferred: \", transferred);\r\n        });\r\n    };\r\n    return (\r\n        <Typography component=\"span\">\r\n      <Modal\r\n        open={open}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={12} sm={12} md={12}>\r\n                                                  <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                                                    <Typography component={'span'} dangerouslySetInnerHTML={{__html: [headerText]}}>\r\n                                                    </Typography>\r\n                                                  </Typography>\r\n                                                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                                                    <Typography component={'span'} dangerouslySetInnerHTML={{__html: [toggleText]}}>\r\n                                                    </Typography>\r\n                                                  </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.balanceContainer} xs={12} sm={12} md={12}>\r\n                                                    <Grid item\r\n                                                    alignItems=\"center\"\r\n                                                    className={dashboardClasses.textLeft}\r\n                                                >\r\n                                                  <ControlledCheckbox /> Withdraw {symbol} ?\r\n                                                  <br />\r\n                                                </Grid>\r\n                                                </Grid>\r\n                                                <Grid item className={dashboardClasses.balanceContainer} xs={12} sm={12} md={12}>\r\n                                                    <Grid item\r\n                                                    alignItems=\"center\"\r\n                                                    className={dashboardClasses.textLeft}\r\n                                                >\r\n                                                  <TextField\r\n                                                        id=\"standard-head-holder\"\r\n                                                        label=\"Receiver\"\r\n                                                        type=\"text\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 1 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 1 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleReceiver}\r\n                                                        onKeyUp={handleReceiver}\r\n                                                        value={receiver}\r\n                                                    />\r\n                                                  <br />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                                <br />\r\n                                                 <Grid item\r\n                                                    alignItems=\"center\"\r\n                                                    className={dashboardClasses.textLeft}\r\n                                                    style={{margin: 'auto',alignItems:'center'}}\r\n                                                >\r\n                                                <br />\r\n                                                  <Button onClick={iLock_transfer_helper}>\r\n                                                    TRANSFER\r\n                                                  </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n        </Box>\r\n      </Modal>\r\n      </Typography>\r\n    );\r\n}\r\nexport default WithdrawModal;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// ** Import Material UI Components\r\nimport Box from '@mui/material/Box';\r\nimport Alert from '@mui/material/Alert';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport Button from \"@mui/material/Button\";\r\nimport Link from \"@mui/material/Link\";\r\n// ** Import Assets\r\nimport useStyles from '../assets/styles';\r\nimport { TOKENDATA, USERBALANCE, TOKENLISTS } from \"../redux/constants\";\r\n\r\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\r\n\r\nimport { explorer_, networks_data, network_dec_to_hex, network_to_chain, network_lower_to_proper, rpc_, icons_, network_, network_symbols, network_decimals, network_hex_to_dec, lockerAddress } from '../constants';\r\nimport Loader from '../components/Loader';\r\nimport { alterLoaderText } from '../components/Loader';\r\nimport { toggleDrawer } from '../components/Header';\r\nimport TransferOwnershipModal from '../components/TransferOwnership.js';\r\nimport WithdrawModal from '../components/Transfer.js';\r\nimport { _toggleOwnershipModal } from '../components/TransferOwnership.js';\r\nimport { _toggleWithdrawalModal } from '../components/Transfer.js';\r\nimport { transferOwnership_iLock, w3, isLockClaimed, getERC20balance, getEtherBalance, getLocker, getData, withdraw, explorer, getTokenBalance, } from '../web3';\r\nimport { getERC20Metadata } from \"../api\";\r\n\r\nlet connector_;\r\nexport let _wrap;\r\nexport let getLockId;\r\nexport let getAccount;\r\nexport let getNetwork;\r\nexport let linkWeb3;\r\nexport let _transfer;\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n    height: 10,\r\n    borderRadius: 5,\r\n    [`&.${linearProgressClasses.colorPrimary}`]: {\r\n        backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\r\n    },\r\n    [`& .${linearProgressClasses.bar}`]: {\r\n        borderRadius: 5,\r\n        backgroundColor: theme.palette.mode === 'light' ? '#1a90ff' : '#308fe8',\r\n    },\r\n}));\r\nconst dateTime = async (date) => {\r\n    return date.toLocaleString();\r\n};\r\nconst LockUp = (props) => {\r\n    const { lockId, wallet, token, chainName } = props.match.params;\r\n    if(isNaN(lockId)) {\r\n        props.history.push(`/dashboard/`);\r\n    }\r\n    const { account, connector } = useWeb3React();\r\n    connector_ = connector;\r\n    const [amount, setAmount] = useState(0);\r\n    const [_token, set_Token] = useState(\"\");\r\n    const [lockToken, setLockToken] = useState(\"\");\r\n    const [chainId, setChainId] = useState(0);\r\n    const [network, setNetwork] = useState(\"\");\r\n    const [status_, setStatus_] = useState(false);\r\n    const [ownable, setOwnable] = useState(false);\r\n    const [ready, setReady] = useState(false);\r\n    const [ether, setEther] = useState(false);\r\n    const [notMiner, setNotMiner] = useState(false);\r\n    const [claimed, setClaimed] = useState(false);\r\n    const [unlockDate, setUnlockDate] = useState(\"\");\r\n    const [theHolder, setTheHolder] = useState(\"\");\r\n    const [theCreator, setTheCreator] = useState(\"\");\r\n    const [totalSupply, setTotalSupply] = useState(0);\r\n    const [tokenDecimals, setTokenDecimals] = useState(0);\r\n    const [tokenBalance, setTokenBalance] = useState(0);\r\n    const [etherBalance, setEtherBalance] = useState(0);\r\n    const [isWithdrawn, setIsWithdrawn] = useState(\"\");\r\n    const [unlockAble, setUnlockAble] = useState(false);\r\n    const [doneForSure, setDoneForSure] = useState(false);\r\n    const [tokenSet, setTokenSet] = useState(false);\r\n    const [unlockTimestamp, setUnlockTimestamp] = useState(\"\");\r\n    const [modalInner, setModalInner] = useState(\"Transferring Ownership is irreversible. Provide an Address\");\r\n    const [holdingContract, setHoldingContract] = useState(\"\");\r\n    const [currentTimestamp, setCurrentTimestamp] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.tokenLists);\r\n    let ownerOf = undefined;\r\n    let tokenData = undefined;\r\n    if (network) {\r\n        console.log(\"net: \", account, network_lower_to_proper[chainName], network_to_chain[network], explorer_[network_to_chain[network]]);\r\n    } else {\r\n        //\r\n    };\r\n    getLockId = async () => {\r\n        return lockId;\r\n    };\r\n    getAccount = async () => {\r\n        return account;\r\n    };\r\n    getNetwork = async () => {\r\n        return network;\r\n    };\r\n    _wrap = async (to) => {\r\n        console.log(\"_wrap: \", to);\r\n        let provider = await connector_.getProvider();\r\n        try {\r\n            transferOwnership_iLock(provider, lockId, account, to, await getNetwork()).then((ownershipTransfer) => {\r\n                console.log(\"transferOwnership: \", ownershipTransfer)\r\n            });\r\n            _toggleOwnershipModal(\"Thanks\", \"Processing\", await getLockId(), await getNetwork());\r\n        } catch (e) {\r\n            console.log(\"err: \", e);\r\n        };\r\n        return \"It's a Wrap!\";\r\n    };\r\n    const _transfer_ownership = async (e) => {\r\n        _toggleOwnershipModal(modalInner, \"Ownership Transfer\", await getLockId(), await getNetwork());\r\n    };\r\n    useEffect(async () => {\r\n        if (claimed || doneForSure) {\r\n            setDoneForSure(true);\r\n            // eslint-disable-next-line\r\n            alterLoaderText(\"Claimed\");\r\n            return true;\r\n        } else {\r\n            if (!account || account == undefined) {\r\n                alterLoaderText(\"Connect Wallet\");\r\n                toggleDrawer();\r\n            } else {\r\n                alterLoaderText(\"Scanning Blockchain Index\");\r\n            };\r\n        };\r\n        if (chainName) {\r\n            changeNetwork(network_lower_to_proper[chainName]);\r\n            console.log('network: ', network);\r\n        };\r\n        const checkLocker = async (id, account, network) => {\r\n            return await getLocker(account, network);\r\n        };\r\n        const setDate = async (utcSeconds) => {\r\n            let d = new Date(0);\r\n            d.setUTCSeconds(utcSeconds);\r\n            setUnlockDate(d);\r\n            return d;\r\n        };\r\n\r\n        function epoch(date) {\r\n            return Date.parse(date)\r\n        };\r\n        const __dispatch = async (newData) => {\r\n            try {\r\n                dispatch({ type: TOKENLISTS, payload: newData });\r\n            } catch (e) {\r\n                console.log(e);\r\n            };\r\n        };\r\n        const __prepare = async (connector) => {\r\n            // eslint-disable-next-line\r\n            setModalInner(modalInner);\r\n            try {\r\n                connector.getChainId().then((chainId) => {\r\n                    setChainId(chainId);\r\n                    if (Number(chainId) === 1) setNetwork(\"Ethereum\");\r\n                    if (Number(chainId) === 5) setNetwork(\"Goerli\");\r\n                    if (Number(chainId) === 56) setNetwork(\"Binance Smart Chain\");\r\n                    if (Number(chainId) === 97) setNetwork(\"Binance_testnet\");\r\n                    if (Number(chainId) === 43114) setNetwork(\"Avalanche\");\r\n                    if (Number(chainId) === 43113) setNetwork(\"Avalanche_testnet\");\r\n                    if (Number(chainId) === 137) setNetwork(\"Polygon\");\r\n                    if (Number(chainId) === 80001) setNetwork(\"Polygon_testnet\");\r\n                    if (Number(chainId) === 444) setNetwork(\"Frenchain_testnet\");\r\n                    if (Number(chainId) === 44444) setNetwork(\"Frenchain\");\r\n                    if (Number(chainId) === 420420) setNetwork(\"Kekchain\");\r\n                    if (Number(chainId) === 420666) setNetwork(\"Kekchain_testnet\");\r\n                });\r\n            } catch (e) {\r\n                console.log(\"err: \", e);\r\n            };\r\n        };\r\n        if (lockId) {\r\n            let lock_props;\r\n            let props_out;\r\n            let timer;\r\n            timer = setTimeout(async () => {\r\n                const iLock = {\r\n                    \"wallet\": wallet,\r\n                    \"unclaimed\": claimed,\r\n                    \"unlockTimestamp\": unlockTimestamp,\r\n                    \"_token\": _token,\r\n                    \"amount\": amount,\r\n                    \"holdingContract\": holdingContract\r\n                };\r\n                if (iLock[\"_token\"] !== '' && iLock[\"amount\"] !== 0 && iLock[\"holdingContract\"] !== '') {\r\n                    setStatus_(true);\r\n                    try {\r\n                        console.log(\"tokenBalance: \", lockToken, holdingContract, account, network);\r\n                        let provider = await connector.getProvider();\r\n                        const tokenBalance_holding_contract = await getTokenBalance(provider, lockToken, holdingContract, network);\r\n                        const tokenBalance_account = await getTokenBalance(provider, lockToken, account, network);\r\n                        console.log(\"tokenBalance: \", tokenBalance_holding_contract, tokenBalance_account);\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    };\r\n                } else {\r\n                    setStatus_(false);\r\n                };\r\n                switch (status_) {\r\n                    case true:\r\n                        clearInterval(lock_props);\r\n                        break;\r\n                    case false:\r\n                        props_out(lock_props);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                };\r\n            }, 3333);\r\n            let unlockAbleCheck;\r\n            props_out = async (lock_props) => {\r\n                lock_props = setInterval(async () => {\r\n                    try {\r\n                        let provider = await connector.getProvider();\r\n                        getLocker(provider, lockId, account, network).then(async (newData) => {\r\n                            if (newData) {\r\n                                if (newData[0][\"getLock\"][0] !== undefined) {\r\n                                    console.log(\"newData1: \", newData[0][\"getLock\"]);\r\n                                    console.log(\"newData2: \", newData[0]);\r\n                                    if (parseFloat(newData[0][\"amount\"]) > 0) {\r\n                                        if (newData[0][\"Ether\"] == false) {\r\n                                            try {\r\n                                                let bytes = await getERC20Metadata(provider, network, newData[0][\"token\"], account);\r\n                                                if (bytes) {\r\n                                                    await setTokenDecimals(bytes[0][\"decimals\"]);\r\n                                                    setAmount(newData[0][\"amount\"] / 10 ** parseFloat(bytes[0][\"decimals\"]).toFixed(2));\r\n                                                    console.log(\"amount: \", amount);\r\n                                                }\r\n                                            } catch (e) {\r\n                                                console.log(\"error: \", e);\r\n                                            };\r\n                                        }\r\n                                    };\r\n                                    if (newData[0][\"lockerAddress\"]) {\r\n                                        set_Token(newData[0][\"lockerAddress\"]);\r\n                                    };\r\n                                    if (newData[0][\"holdingContract\"]) {\r\n                                        let [_0x,_0x0,_0x1] = await getEtherBalance(provider, newData[0][\"holdingContract\"], network);\r\n                                        console.log(\"hc: \",_0x,_0x0,_0x1);\r\n                                        setEtherBalance(_0x1);\r\n                                        setHoldingContract(newData[0][\"holdingContract\"]);\r\n                                    };\r\n                                    console.log(\"Ether: \", newData[0][\"Ether\"]);\r\n                                    if (newData[0][\"Ether\"]) {\r\n                                        setEther(newData[0][\"Ether\"]);\r\n                                    };\r\n                                    if (newData[0][\"token\"] && tokenSet == false) {\r\n                                        setLockToken(newData[0][\"token\"]);\r\n                                        try {\r\n                                            let provider = await connector.getProvider();\r\n                                            const bytes = await getERC20Metadata(provider, network, newData[0][\"token\"], newData[0][\"holdingContract\"]);\r\n                                            if (bytes) {\r\n                                                await setTokenDecimals(bytes[0][\"decimals\"]);\r\n                                                setTokenBalance(parseFloat(bytes[0][\"balanceOf\"] / 10 ** bytes[0][\"decimals\"]).toFixed(2));\r\n                                                console.log(\"tokenBalance: \", tokenBalance);\r\n                                            }\r\n                                            setTokenSet(true);\r\n                                        } catch (e) {\r\n                                            console.log(\"error: \", e);\r\n                                        };\r\n                                    };\r\n                                    if (parseFloat(newData[0][\"unlockTimestamp\"]) > 0) {\r\n                                        setUnlockTimestamp(newData[0][\"unlockTimestamp\"]);\r\n                                        setDate(newData[0][\"unlockTimestamp\"]);\r\n                                    };\r\n                                    if (newData[0][\"holder\"]) {\r\n                                        console.log(\"holder: \",newData[0][\"holder\"].toString())\r\n                                        await setTheHolder(newData[0][\"holder\"].toString());\r\n                                        if(newData[0][\"holder\"].toString() == account.toString()) {\r\n                                            await setOwnable(true);\r\n                                            console.log(\"ownable: \", newData[0][\"holder\"].toString() == account.toString(),ownable);\r\n                                        };\r\n                                        ownerOf = newData[0][\"holder\"].toString() == account.toString();\r\n                                        if (newData[0][\"holder\"].toString() == account.toString()) {\r\n                                            await alterLoaderText(\"Claimable\");\r\n                                        } else {\r\n                                            await alterLoaderText(\"Locked\");\r\n                                        }\r\n                                    };\r\n                                    if (newData[0][\"creator\"]) {\r\n                                        console.log(\"creator: \", newData[0][\"creator\"])\r\n                                        await setTheCreator(newData[0][\"creator\"]);\r\n                                    };\r\n                                    if (newData[0][\"claimed\"]) {\r\n                                        setClaimed(newData[0][\"claimed\"]);\r\n                                        if (newData[0][\"claimed\"]) {\r\n                                            if (newData[0][\"claimed\"] == true) {\r\n                                                console.log(\"iLockClaimed: \",newData[0][\"claimed\"]);\r\n                                                await setDoneForSure(true);\r\n                                                await clearInterval(timer);\r\n                                                await clearInterval(lock_props);\r\n                                                await clearInterval(unlockAbleCheck);\r\n                                                await alterLoaderText(\"Claimed\");\r\n                                                return true;\r\n                                            } else {\r\n                                                if (ownerOf == true) {\r\n                                                    await setOwnable(true);\r\n                                                    await alterLoaderText(\"Claimable\");\r\n                                                } else {\r\n                                                    await alterLoaderText(\"Locked\");\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    await setReady(true);\r\n                                } else {\r\n                                    await setReady(false);\r\n                                };\r\n                                const dateToday = new Date();\r\n                                try {\r\n                                    const timestamp = epoch(dateToday);\r\n                                    setCurrentTimestamp(timestamp);\r\n                                    const unlock_Date = unlockDate;\r\n                                    const unlock_Timestamp = unlockTimestamp;\r\n                                    let unlock_able = timestamp > unlock_Date;\r\n                                    console.log(\"unlock_able: \", unlock_able, timestamp, unlockDate, unlockTimestamp, unlock_Timestamp);\r\n                                    if (isNaN(unlock_Date) || isNaN(timestamp)) {\r\n                                        setUnlockAble(false);\r\n                                        console.log(\"!unlockable or !prepared\");\r\n                                    } else {\r\n                                        setUnlockAble(unlock_able);\r\n                                    };\r\n                                    unlockAbleCheck = setTimeout(async (provider, lockId, account, network) => {\r\n                                        isLockClaimed(provider, lockId, account, network).then(async (claimed_already) => {\r\n                                            if (claimed_already) {\r\n                                                try {\r\n                                                    console.log(\"claimed_already (claimed): \", claimed_already[\"claimed\"]);\r\n                                                    await setClaimed(claimed_already[\"claimed\"]);\r\n                                                } catch (e) {\r\n                                                    console.log(\"e: \", e);\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                        console.log(\"currentTimestamp: \", timestamp, currentTimestamp);\r\n                                        if (unlock_Date) {\r\n                                            try {\r\n                                                let unlock_able = timestamp > unlock_Timestamp;\r\n                                                console.log(\"unlock_able: \", unlock_able, timestamp, unlock_Date, isNaN(unlock_Date), isNaN(timestamp));\r\n                                                setUnlockAble(unlock_able);\r\n                                            } catch (e) {\r\n                                                console.log(\"err: \", e);\r\n                                            };\r\n                                        };\r\n                                    }, 10000, provider, lockId, account, network);\r\n                                    setNotMiner(lockToken.toString() !== theCreator || lockToken.toString() !== theHolder || lockToken.toString() !== account);\r\n                                    console.log(\"lockId: \", lockId);\r\n                                    console.log(\"account: \", account);\r\n                                    console.log(\"network: \", network);\r\n                                    console.log(\"dateNow: \", timestamp);\r\n                                    console.log(\"timestamp: \", timestamp);\r\n                                    console.log(\"theHolder: \", theHolder);\r\n                                    console.log(\"unlockDate: \", unlockDate);\r\n                                    console.log(\"unlockAble: \", unlockAble);\r\n                                    console.log(\"unlock_able: \", unlock_able);\r\n                                    console.log(\"unlock_Date: \", unlock_Date);\r\n                                    console.log(\"unlock_Timestamp: \", unlock_Timestamp);\r\n                                    console.log(\"claimable: \", timestamp > unlock_Date);\r\n                                } catch (e) {\r\n                                    console.log(\"err: \", e);\r\n                                };\r\n                                __dispatch(newData);\r\n                            };\r\n                        });\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    };\r\n                }, 2000);\r\n            };\r\n            if (account) {\r\n                __prepare(connector);\r\n            } else {\r\n                return () => clearInterval(timer);\r\n            };\r\n        };\r\n    }, [account, wallet, lockId, network])\r\n\r\n    const classes = useStyles.pools();\r\n    const mobileClasses = useStyles.mobile();\r\n    const isMobile = useMediaQuery('(max-width:600px)');\r\n\r\n    const change_Network = async () => {\r\n        if (account) {\r\n            const provider = window.ethereum; {\r\n                /*\r\n                    checkEtherBalance(provider, account);\r\n                */\r\n            }\r\n            const currentNetworkData = networks_data.filter((each) => each.name === network);\r\n            try {\r\n                await provider.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: currentNetworkData[0].chainData.chainId }],\r\n                });\r\n                console.log(\"You have succefully switched to \", network)\r\n            } catch (switchError) {\r\n                {\r\n                    /*\r\n                    // This error code indicates that the chain has not been added to MetaMask.\r\n                    */\r\n                }\r\n                try {\r\n                    const params_network_add = {\r\n                        chainId: currentNetworkData[0].chainData.chainId,\r\n                        rpcUrls: [rpc_[currentNetworkData[0].chainData.chainId]],\r\n                        chainName: network_[currentNetworkData[0].chainData.chainId],\r\n                        nativeCurrency: { name: network_symbols[currentNetworkData[0].chainData.chainId], decimals: network_decimals[currentNetworkData[0].chainData.chainId], symbol: network_symbols[currentNetworkData[0].chainData.chainId] },\r\n                        blockExplorerUrls: [explorer_[currentNetworkData[0].chainData.chainId]],\r\n                        iconUrls: [icons_[currentNetworkData[0].chainData.chainId]]\r\n                    };\r\n                    console.log(\"params_network_add: \", switchError.code, params_network_add);\r\n                    if (switchError.code === 4902) {\r\n                        console.log(\"This network is not available in your metamask, please add it\");\r\n                        let provider = await connector.getProvider();\r\n                        provider.request({\r\n                            method: 'wallet_addEthereumChain',\r\n                            params: [{ ...params_network_add }]\r\n                        }).catch((error) => {\r\n                            console.log(\"provider_err: \", error);\r\n                        });\r\n                    } else if (switchError.code === 4001) {\r\n                        console.log(\"Switch Request has rejected\");\r\n                    } else if (switchError.code === 4200) {\r\n                        console.log(\"You have succefully switched to \", network)\r\n                    };\r\n                } catch (e) {\r\n                    console.log(\"error: \", e);\r\n                }\r\n            };\r\n        };\r\n    };\r\n    const changeNetwork = (name) => {\r\n        setNetwork(name);\r\n        dispatch({\r\n            type: TOKENDATA,\r\n            payload: {}\r\n        });\r\n        change_Network();\r\n    }\r\n\r\n    const fn = (val, decimal = 4) => {\r\n        if (!isNaN(Number(val))) {\r\n            const trimVal = Number(Number(val).toFixed(decimal));\r\n            const decimalVal = trimVal.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n            return decimalVal;\r\n        } else {\r\n            return Number(0);\r\n        }\r\n    }\r\n\r\n    const withdrawToken = async (id, receiver, isEth) => {\r\n        if (!account) return;\r\n        if (claimed) return;\r\n        let provider = await connector.getProvider();\r\n        let gasLimit;\r\n        w3(provider, network).then(async (W3) => {\r\n            let block = await W3.eth.getBlock(\"latest\");\r\n            console.log(\"(w3) block: \", block);\r\n            console.log(\"(w3) gasLimit: \", block.gasLimit);\r\n            gasLimit = block.gasLimit;\r\n            console.log(\"Processing withdrawal: \", id, gasLimit, isEth, lockId, account, receiver, network);\r\n            withdraw(provider, lockId, account, receiver, isEth, network, ownable, gasLimit).then(async (status) => {\r\n                const newData = JSON.parse(JSON.stringify(data));\r\n                if (status) {\r\n                    console.log(\"Withdrawal processed: \", newData);\r\n                    setClaimed(true);\r\n                    setIsWithdrawn(true);\r\n                    _toggleWithdrawalModal(\"Confirmed\", \"Transaction: \", id, network);\r\n                };\r\n            });\r\n        });\r\n    };\r\n    _transfer = withdrawToken;\r\n\r\n    const withdrawProperty = async (id) => {\r\n        console.log(\"withdrawProperty: \", id);\r\n        _toggleWithdrawalModal(\"Delegate a receiver wallet and submit the transfer\", \"Withdraw\", id, network);\r\n    }\r\n\r\n    const transferOwnership = async (id) => {\r\n        if (!account) return;\r\n        let provider = await connector.getProvider()\r\n        withdraw(provider, lockId, account, network).then(async (status) => {\r\n            const newData = JSON.parse(JSON.stringify(data));\r\n            if (status) console.log(\"Withdrawal processed: \", newData);\r\n        })\r\n    }\r\n\r\n    const LockedEvent = (props) => {\r\n        const { index, event } = props\r\n        const withdrawDate = new Date(event.timestamp * 1000);\r\n        let isWithdrawable = event.timestamp < currentTimestamp;\r\n        setIsWithdrawn(event.isWithdrawn);\r\n        const lockedTokenAmount = event.amount / Math.pow(10, event.decimals)\r\n        const getTokenSymbol = event.symbol;\r\n        const owner = event.owner;\r\n        const lockedTime = new Date(event.depositEvent.timestamp * 1000);\r\n        const countdownPercent = event.timestamp > currentTimestamp ? Math.ceil((event.timestamp - currentTimestamp) / (event.timestamp - event.depositEvent.timestamp) * 100) : 0;\r\n        const getRemainTime = () => {\r\n            if (event.timestamp < currentTimestamp) return `00D-00H-00M-00S`;\r\n            return `${Math.floor((event.timestamp - currentTimestamp) / 86400)}D-${Math.floor(((event.timestamp - currentTimestamp) % 86400) / 3600)}H-${Math.floor(((event.timestamp - currentTimestamp) % 3600) / 60)}M-${(event.timestamp - currentTimestamp) % 60}S`\r\n        }\r\n        isWithdrawable = true;\r\n        return (\r\n            <Grid \r\n                container\r\n                direction='row'\r\n                justifyContent='space-between'\r\n                alignItems='center'\r\n                style={{borderBottom:'2px solid #e55370', fontSize: '13px'}}\r\n                >\r\n                    <Grid item  xs={2} sm={2} md={1} style={{textAlign:'center'}}>\r\n                        <img src='/lock.png' style={{width:40}} alt='token image' />\r\n                    </Grid>\r\n                    <Grid item  xs={10} sm={10} md={5}>\r\n                        <p>Lock Tokens - {fn(lockedTokenAmount, 2)} {getTokenSymbol}</p>\r\n                        {!isWithdrawable ? <p><span><button>Locked</button></span> Locked {lockedTime.toDateString()} - unlocks {withdrawDate.toDateString()}</p>: \r\n                        (!isWithdrawn ? <p><span><button>Withdrawable</button></span> Locked {lockedTime.toDateString()} - unlocks {withdrawDate.toDateString()}</p>:\r\n                        <p><span><button>Withdrawn</button></span> Locked {lockedTime.toDateString()} - unlocks {withdrawDate.toDateString()}</p>)}\r\n                        <p>Owner: {owner}</p>\r\n                    </Grid>\r\n\r\n                    <Grid item  xs={12} sm={8} md={3} style={{textAlign:'center'}}>\r\n                        <p >UNLOCK COUNTDOWN</p>\r\n                        <BorderLinearProgress variant='determinate' value={countdownPercent} />\r\n                        <p >{getRemainTime()}</p>\r\n                    </Grid>\r\n                    <Grid item  xs={12} sm={4} md={3} style={{textAlign:'center'}}>\r\n                        {claimed && !isWithdrawable? <Link style={{textDecoration: 'none'}} href={`${explorer[network]}/tx/${event.depositEvent.transactionHash}`} target='_blank' rel='noreferrer'>VIEW TX</Link>: (\r\n                            !claimed && !isWithdrawn ? (account && account.toLowerCase() === owner.toLowerCase() ? <Button onClick={() => withdrawProperty(lockId)} >WITHDRAW</Button> : <Link style={{textDecoration: 'none'}} href={`${explorer[network]}/tx/${event.depositEvent.transactionHash}`} target='_blank' rel='noreferrer'>VIEW TX</Link>) :\r\n                            <Link style={{textDecoration: 'none'}} href={`${explorer[network]}/tx/${event.withdrawEvent.transactionHash}`} target='_blank' rel='noreferrer'>VIEW TX</Link>\r\n                        )}\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n        )\r\n    }\r\n\r\n    let lockedTokenAmount = 0,\r\n        lockedLiquidity = [];\r\n    if (tokenData) tokenData.data.map(each => {\r\n        if (!each.isWithdrawn && !each.isLiquidity) lockedTokenAmount += each.amount / Math.pow(10, each.decimals);\r\n        if (!each.isWithdrawn && each.isLiquidity) {\r\n            let index = lockedLiquidity.findIndex(eachLiquidity => eachLiquidity.token0.address === each.token0.address && eachLiquidity.token1.address === each.token1.address);\r\n            if (index !== -1) lockedLiquidity.locked += each.amount * 100 / each.totalSupply;\r\n            else lockedLiquidity.push({ token0: each.token0, token1: each.token1, locked: each.amount * 100 / each.totalSupply });\r\n        }\r\n    })\r\n    return (\r\n        <Container className={classes.root} maxWidth='lg'>\r\n            <Box className={classes.info}>\r\n                <Grid container spacing={3}>\r\n                    {\r\n                        claimed || !account ? <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}> <Loader /> </Typography> : account && !claimed && ready ? <Grid className={isMobile ? `${mobileClasses.root} grid`  : 'grid'} item xs={12} sm={12} md={12} >\r\n                        <Card className='card'>\r\n                            <CardContent>\r\n                                <Typography className='title' color='textSecondary'>\r\n                                    TimeLock Overview\r\n                                </Typography>\r\n                                <br />\r\n                                { claimed ? <></> : !claimed && ether == false ? <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>ERC20 Balance</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                    {`${tokenBalance}`}\r\n                                    </Grid>\r\n                                </Grid> : isNaN(tokenBalance) ? <></> : <></>}\r\n                                <Grid \r\n                                                                    container\r\n                                                                    direction='row'\r\n                                                                    justifyContent='space-between'\r\n                                                                    alignItems='center'\r\n                                                                >\r\n                                                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                                                        <span>Ether</span>\r\n                                                                    </Grid>\r\n                                                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                                                    {`${ether}`}\r\n                                                                    </Grid>\r\n                                                                </Grid>\r\n                                { claimed ? <></> : !claimed && ether == true ? <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>ETH Balance</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                    {`${isNaN(etherBalance) ? 0 : etherBalance}`}\r\n                                    </Grid>\r\n                                </Grid> : isNaN(etherBalance) ? <></> : <></>}\r\n                                { claimed ? <></> : <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>Unlocks At</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                    {`\r\n                                        ${\r\n                                            // eslint-disable-next-line\r\n                                            unlockDate}`}\r\n                                    </Grid>\r\n                                </Grid>}\r\n                                { !claimed && ether == false || !claimed && notMiner == true ? <Grid \r\n                                                                    container\r\n                                                                    direction='row'\r\n                                                                    justifyContent='space-between'\r\n                                                                    alignItems='center'\r\n                                                                >\r\n                                                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                                                        <span>ERC20 Contract</span>\r\n                                                                    </Grid>\r\n                                                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                                                        {`${lockToken}`}\r\n                                                                    </Grid>\r\n                                                                </Grid> : <></>}\r\n                                { claimed ? <></> : <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>iLock NFT</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        {`${_token}`}\r\n                                    </Grid>\r\n                                </Grid>}\r\n                                { claimed ? <></> : <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>Holding Contract</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        {`${holdingContract}`}\r\n                                    </Grid>\r\n                                </Grid>}\r\n                                { claimed ? <></> : <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>Claimed</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        {`${claimed}`}\r\n                                    </Grid>\r\n                                </Grid>}\r\n                                { claimed ? <></> : <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        <span>Holder</span>\r\n                                    </Grid>\r\n                                    <Grid item  xs={6} sm={6} md={6} style={{textAlign:'center'}}>\r\n                                        {`${theHolder}`}\r\n                                    </Grid>\r\n                                </Grid>}\r\n                                <br />\r\n                                <Grid \r\n                                    container\r\n                                    direction='row'\r\n                                    justifyContent='space-between'\r\n                                    alignItems='center'\r\n                                >\r\n                                    <Grid item  xs={12} sm={12} md={12} style={{textAlign:'center'}}>\r\n                                        <span>Lock Status</span>\r\n                                        {\r\n                                            !claimed && unlockAble == true ? <Alert severity=\"success\" style={{textAlign:'center'}}>Unlocked</Alert> : <Alert severity=\"warning\" style={{textAlign:'center'}}>Locked</Alert>\r\n                                        }\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <br />\r\n                                        { claimed ? <span><br /><br /><Alert severity=\"warning\" style={{textAlign:'center'}}>This iLock has been Claimed</Alert></span> : account == theHolder && !claimed ? <Grid item  xs={4} sm={4} md={4} style={{textAlign:'center'}}>\r\n                                                                                     <Button style={{padding:5,margin:5}} onClick={() => withdrawProperty(lockId)} >WITHDRAW</Button>\r\n                                                                                     <Button style={{padding:5,margin:5}} onClick={() => _transfer_ownership(event)} >TRANSFER OWNERSHIP</Button>\r\n                                                                                </Grid> : <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n                                                                                <Loader />\r\n                                        </Typography>}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid> : <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n                        <Loader />\r\n                    </Typography>\r\n                    }\r\n                    \r\n                    \r\n                </Grid>\r\n            </Box>\r\n            <Typography component=\"span\">\r\n                <TransferOwnershipModal />\r\n                <WithdrawModal />\r\n            </Typography>\r\n        </Container >\r\n    )\r\n}\r\n// export default Portfolio\r\nconst mapStateToProps = state => ({\r\n    statistics: state.statistics,\r\n    walletAddress: state.walletAddress\r\n})\r\n\r\n//connect function INJECTS dispatch function as a prop!!\r\nexport default connect(mapStateToProps)(LockUp);"],"sourceRoot":""}