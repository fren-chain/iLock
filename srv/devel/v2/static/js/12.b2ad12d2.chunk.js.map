{"version":3,"sources":["components/Loader.js","api.js","pages/Bridge.js"],"names":["alterLoaderText","Loader","_ref","isLoading","useStyles","base","_React$useState","React","useState","_React$useState2","_slicedToArray","loaderText","setLoaderText","_React$useState3","_React$useState4","loaderBottomText","setLoaderBottomText","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","l_t","lb_t","wrap","_context","prev","next","console","log","length","abrupt","stop","_x","_x2","apply","arguments","_jsxs","Fragment","children","_jsx","Stack","spacing","style","padding","margin","Skeleton","variant","sx","fontSize","Typography","component","alignItems","textAlign","dangerouslySetInnerHTML","__html","width","height","getERC20Metadata","_callee2","provider","_chain","_tokenAddress","address","result","decimals","symbol","name","balanceOf","web3","contract","_web","_contract","_context2","Web3","t0","eth","Contract","erc20Abi","t1","sent","t2","methods","call","parseFloat","t3","t4","t5","t6","t7","_x3","_x4","_x5","_x6","getTokenMetadata","_ref3","_callee3","_context3","_x7","_x8","connect","state","statistics","props","activeStep","setActiveStep","open","setOpen","_useState","_useState2","lockerListEnabled","_React$useState5","_React$useState6","snackbar","setSnackbar","_React$useState7","_React$useState8","_useState3","_useState4","network","setNetwork","_useState5","_useState6","modalTitle","setModalTitle","_useState7","_useState8","tokenContract","setTokenContract","_useState9","_useState10","holder","setHolder","_useState11","_useState12","modalDes","setModalDes","_useState13","_useState14","subMethod","setSubMethod","_useState15","_useState16","lockAmount","setLockAmount","_useState17","_useState18","tokenDecimals","setTokenDecimals","_useState19","_useState20","setTokenSymbol","_useState21","_useState22","setTokenName","_useState23","_useState24","etherBalance","setEtherBalance","_useState25","_useState26","setTokenBalance","_useState27","_useState28","setTokenAllowance","_useState29","undefined","_useState30","withdrawDate","setWithdrawDate","_useState31","_useState32","dateUseful","setDateUseful","_useState33","_useState34","addressDemand","setAddressDemand","_useState35","_useState36","isAllowed","setIsAllowed","_useState37","_useState38","setLockAmountMax","theme","useTheme","classes","pools","mobileClasses","mobile","dashboardClasses","dashboard","isMobile","useMediaQuery","token","useSelector","userBalance","tokenData","data","tokenLists","test_data","dispatch","useDispatch","_useWeb3React","useWeb3React","account","connector","_React$useState9","tokenAddress","_React$useState10","values","setValues","selectToken","checkEtherBalance","_callee4","_context4","getEtherBalance","then","_ref4","ethereumBalance","fetchEtherBalance","handleNext","_ref5","_callee5","currentNetworkData","params_network_add","_context5","window","ethereum","networkData","filter","each","request","method","params","chainId","chainData","concat","handleOpen","prevActiveStep","rpcUrls","rpc_","chainName","network_","nativeCurrency","network_symbols","network_decimals","blockExplorerUrls","explorer_","iconUrls","icons_","code","getProvider","_objectSpread","catch","error","useEffect","getData","newData","type","TOKENLISTS","payload","e","interval","setInterval","clearInterval","toggleDrawer","_callee6","_tokenBalance","allowanceAmount","_context6","getTokenBalance","tokenBalance","USERBALANCE","getERC20allowance","lockerAddress","Math","pow","finish","handleAllowance","_ref7","_callee7","_tokenBalance2","_provider2","_context7","getERC20balance","handleChange","_ref8","_callee8","event","contract_address","contractData","_context8","target","value","CHAINDATA","find","item","chain","TOKENDATA","JSON","parse","toFixed","toString","eb","handleClose","handleHolder","_ref9","_callee9","_context9","_x9","depositToken","_ref10","_callee12","tokenAmount","isEth","unlockDate","allSet","gasLimit","depositAmount","depositNetwork","depositHolder","depositCreator","_context12","w3","_ref11","_callee11","W3","block","_context11","getBlock","deposit","_ref12","_callee10","results","_context10","tokenId","showLockup","_x12","_x11","_x10","handleNativeTokenMismatch","_ref13","_callee13","_context13","_x13","approveToken","_ref14","_callee14","_context14","approve","status","_ref15","_callee15","lockId","_context15","history","push","toLowerCase","_x14","_x15","networks_data","Row","nextUnlock","index","row","lockedTokenAmount","lockedLiquidity","currentTime","Date","now","map","timestamp","isWithdrawn","isLiquidity","amount","_Fragment","TableRow","borderBottom","TableCell","scope","cursor","onClick","CopyToClipboard","text","onCopy","Tooltip","title","IconButton","ContentCopyIcon","align","CheckIcon","toDateString","Button","color","Container","className","root","maxWidth","paddingLeft","paddingRight","Box","info","Grid","container","direction","justifyContent","marginTop","xs","sm","md","display","Link","href","underline","button","Card","CardHeader","cardHeader","CardContent","src","RadioGroup","defaultValue","SwipeableViews","axis","onChangeIndex","step","networkSelector","border","borderRadius","networkImage","url","alt","networkTitle","networkDes","subtitle","backgroundColor","subData","subTitle","fillCircle","emptyCircle","FormControl","m","InputLabel","htmlFor","OutlinedInput","id","onChange","endAdornment","InputAdornment","position","document","getElementById","onMouseDown","preventDefault","edge","Search","label","textLeft","tokenImage","tokenTitle","textRight","balanceContainer","TextField","InputLabelProps","shrink","inputprops","min","max","InputProps","handleLocker","marginBottom","_amount","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","renderInput","datetimepicker","currentDate","handleDate","disabled","MobileStepper","mobileStepper","steps","nextButton","size","maxSteps","KeyboardArrowLeft","KeyboardArrowRight","backButton","TableContainer","Paper","Table","TableHead","TableBody","Modal","onClose","top","left","transform","bgcolor","boxShadow","p","mt","Snackbar","autoHideDuration","message"],"mappings":"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","file":"static/js/12.b2ad12d2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\nimport clsx from \"clsx\";\r\nimport Paper from \"@mui/material/Box\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport useStyles from \"../assets/styles\";\r\nimport SpinnerLogoWhite from \"../assets/img/spinner-logo-white.png\";\r\n\r\nexport let alterLoaderText;\r\nconst Loader = ({ isLoading }) => {\r\n    const classes = useStyles.base();\r\n    const [loaderText,setLoaderText] = React.useState(\"\");\r\n    const [loaderBottomText,setLoaderBottomText] = React.useState(\"\");\r\n    alterLoaderText = async function(l_t,lb_t) {\r\n      console.log(\"l_t: \",l_t);\r\n      await setLoaderText(l_t);\r\n      if(lb_t) {\r\n        if(lb_t.length>0) {\r\n          await setLoaderBottomText(lb_t);\r\n        }\r\n      }\r\n      return l_t;\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n          <Stack spacing={1} style={{padding:50,margin:50}}>\r\n          {/* For variant=\"text\", adjust the height via font-size */}\r\n            <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\r\n          {/* For other variants, adjust the size with `width` and `height` */}\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <div dangerouslySetInnerHTML={{ __html: loaderText ? loaderText : 'SCANNING BLOCKCHAIN' }} />\r\n          </Typography>\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <Skeleton variant=\"circular\" width={40} height={40} /> \r\n          </Typography>\r\n          <Skeleton variant=\"rectangular\" width={210} height={60} />\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <div dangerouslySetInnerHTML={{ __html: loaderBottomText ? loaderBottomText : '...' }} />\r\n          </Typography>\r\n          <Skeleton variant=\"rounded\" width={210} height={60} />\r\n          </Stack>\r\n      </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import axios from 'axios';\r\nimport {\r\n    Multicall\r\n  } from 'ethereum-multicall';\r\n\r\nimport { erc20Abi, lockerContractAbi, lockerAddress } from \"./constants\";\r\nimport erc721Abi from \"./erc721_abi.json\";\r\nimport Web3 from \"web3\";\r\nimport dexscreener from 'dexscreener-api';\r\nimport { walletAddress } from './redux/reducers';\r\n\r\nimport { provider, explorer, serverApi, dexscreenerUrl_ } from \"./web3.js\";\r\n\r\nconst apiKey = 'SvMhtTsmQ239NmpwWjnnLWXtag5Jt8wYp7NF8F3Tear1QSaDRl9gnM34JZVXdLFV';\r\nconst apiConfig = {\r\n    headers: {\r\n        'x-api-key': apiKey\r\n    }\r\n}\r\nconst serverUrl = 'https://deep-index.moralis.io/api/v2';\r\n\r\nexport const getTokenPrice = async function (_chain, _tokenAddress) {\r\n    let price;\r\n    try {\r\n        const pairsResponse = await dexscreener.getPairInformationByChain(_chain, _tokenAddress); console.log(\"pairsResponse: \",pairsResponse);\r\n        price = 0;\r\n    } catch (e) {\r\n        price = 0;\r\n        {/*\r\n            *   // Get pair information by chain\r\n            *   // // Get pairs matching base token address\r\n            *   // const tokensResponse = await getPairsMatchingBaseTokenAddress(\"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\r\n            *   // // Search for pairs matching query\r\n            *   // const searchResponse = await searchPairsMatchingQuery(\"WBNB USDC\");\r\n            *   // await axios.get(`${serverUrl}/erc20/${_tokenAddress}/price?chain=${_chain}`, apiConfig);\r\n        */}\r\n    }\r\n    return price && price.data;\r\n}\r\nexport const getERC20Metadata = async function (provider, _chain, _tokenAddress, address) {\r\n    console.log(\"getERC20Metadata: \",_chain, _tokenAddress);\r\n    let result; let decimals; let symbol; let name; let balanceOf;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(await erc20Abi, _tokenAddress);\r\n        decimals = await contract.methods[\"decimals\"]().call();\r\n        symbol = await contract.methods[\"symbol\"]().call();\r\n        balanceOf = await contract.methods[\"balanceOf\"](address).call();\r\n        name = await contract.methods[\"name\"]().call();\r\n        result = [{\r\n            \"balanceOf\":parseFloat(balanceOf),\r\n            \"balance\":parseFloat(balanceOf),\r\n            \"userBalance\":parseFloat(balanceOf),\r\n            \"decimals\":parseFloat(decimals),\r\n            \"symbol\":symbol,\r\n            \"tokenTitle\":name,\r\n            \"name\":name\r\n        }]; \r\n    } catch(e) {\r\n        console.log(\"booting the backup\");\r\n        try {\r\n            let web3 = new Web3(provider);\r\n            let contract = new web3.eth.Contract(await erc20Abi, _tokenAddress[0]);\r\n            decimals = await contract.methods[\"decimals\"]().call();\r\n            symbol = await contract.methods[\"symbol\"]().call();\r\n            balanceOf = await contract.methods[\"balanceOf\"](address).call();\r\n            name = await contract.methods[\"name\"]().call();\r\n            result = [{\r\n                \"balanceOf\":parseFloat(balanceOf),\r\n                \"balance\":parseFloat(balanceOf),\r\n                \"userBalance\":parseFloat(balanceOf),\r\n                \"decimals\":parseFloat(decimals),\r\n                \"symbol\":symbol,\r\n                \"tokenTitle\":name,\r\n                \"name\":name\r\n            }]; \r\n        } catch(e) {\r\n            console.log(e);\r\n        } finally {\r\n            console.log(\"result: \",result);\r\n            // eslint-disable-next-line\r\n            return result;\r\n        }\r\n    } finally {\r\n        console.log(\"result: \",result);\r\n        // eslint-disable-next-line\r\n        return result;\r\n    };\r\n}\r\nexport const getTokenMetadata = async function (_chain, _tokenAddress) {\r\n        console.log(\"getTokenMetadata: \",_chain, _tokenAddress);\r\n    // replace moralis\r\n    // 1) call() to contract => BASE_URI \r\n    // 2) call() to contract => TOKEN_URI||TOKEN_ID \r\n    // = async (provider, id, account, network) => {\r\n    let result; let decimals; let symbol; let name;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        // let ERC721_contract = new web3.eth.Contract(erc721Abi, _tokenAddress);\r\n        let contract = new web3.eth.Contract(erc20Abi, _tokenAddress);\r\n        decimals = await contract.methods[\"decimals\"]().call();\r\n        symbol = await contract.methods[\"symbol\"]().call();\r\n        name = await contract.methods[\"name\"]().call();\r\n        result = {\r\n            \"decimals\":decimals,\r\n            \"symbol\":symbol,\r\n            \"name\":name\r\n        };\r\n        console.log(\"result: \",result);\r\n        return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\nexport const getMyLockers = async function (account, network) {\r\n    console.log(\"getMyLockers: \",account, network);\r\n    let result; let _my_locks;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc20Abi, lockerAddress[network]);\r\n        _my_locks = await contract.methods[\"_my_locks\"](account).call();\r\n        let _my_lockers = [];\r\n        for(let m = 0; m < _my_locks.length; m++) {\r\n            _my_lockers.push(_my_locks[m]);\r\n        };\r\n        let i = 0;\r\n        while(i<_my_lockers.length) {\r\n            if(i==_my_lockers.length-1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            };\r\n        };\r\n        _my_locks = await contract.methods[\"_my_locks\"](account).call();\r\n        result = {\r\n            \"_my_locks\":_my_locks\r\n        };\r\n        console.log(\"result: \",result);\r\n        return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\nexport const getNFTTokenMetadata = async function (_chain, _tokenAddress) {\r\n        console.log(\"getTokenMetadata: \",_chain, _tokenAddress);\r\n    // replace moralis\r\n    // 1) call() to contract => BASE_URI \r\n    // 2) call() to contract => TOKEN_URI||TOKEN_ID \r\n    // = async (provider, id, account, network) => {\r\n    let result;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc721Abi, _tokenAddress);\r\n        result = await contract.methods[\"tokenURI\"](1).call();\r\n        console.log(\"result: \",result);\r\n        return result.status;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\n\r\nexport const getTokenBalance = async function (provider, _chain, _tokenAddress, _walletAddress) {\r\n        console.log(\"getTokenBalance: \",_chain, _tokenAddress, _walletAddress);\r\n    // replace moralis\r\n    // call() to explorer => get_balance()\r\n    let result;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc20Abi, _tokenAddress);\r\n        result = await contract.methods[\"balanceOf\"](_walletAddress).call();\r\n        console.log(\"result: \",result);\r\n        return result.status;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const balances = await axios.get(`${serverUrl}/${_walletAddress}/erc20?chain=${_chain}&token_addresses=${_tokenAddress}`, apiConfig);\r\n    // return balances.data;\r\n}\r\n\r\nexport const runContractFunction = async function (_chain, _contractAddress, _functionName, _abi, _params) {\r\n        console.log(\"runContractFunction: \",_chain, _contractAddress, _functionName, _abi, _params);\r\n    // replace moralis\r\n    // injected web3 via ethersJS||web3.js\r\n    let result;\r\n    try {\r\n        // result = await axios.post(`${serverUrl}/${_contractAddress}/function?chain=${_chain}&function_name=${_functionName}`, {\r\n        //     \"abi\": _abi,\r\n        //     \"params\": _params\r\n        // }, apiConfig);\r\n    } catch (e) {\r\n        result = null;\r\n    }\r\n    return result ? result.data : null;\r\n}\r\n\r\nexport const getCurrentFee = async function (_chain, _tokenAddress, _walletAddress) {\r\n    const dynamicFeeAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getDynamicFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    if (await isExcludedFromFee(_chain, _tokenAddress, _walletAddress)) return 0;\r\n    const dynamicFee = await runContractFunction(_chain, _tokenAddress, 'getDynamicFee', dynamicFeeAbi, {from:_walletAddress});\r\n    return dynamicFee;\r\n}\r\n\r\nexport const isExcludedFromFee = async function (_chain, _tokenAddress, _walletAddress) {\r\n    const isExcludedFromFeeAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    return await runContractFunction(_chain, _tokenAddress, 'isExcludedFromFee', isExcludedFromFeeAbi, {account:_walletAddress});\r\n}\r\n\r\nexport const getCommonFee = async function (_chain, _tokenAddress) {\r\n    const liquidityAndMarketingFeeAbi = [{\"inputs\":[],\"name\":\"_liquidityAndMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const taxFeeAbi = [{\"inputs\":[],\"name\":\"_taxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    let commonFee = 0;\r\n    await Promise.all([\r\n        runContractFunction(_chain, _tokenAddress, '_liquidityAndMarketingFee', liquidityAndMarketingFeeAbi, {}),\r\n        runContractFunction(_chain, _tokenAddress, '_taxFee', taxFeeAbi, {})\r\n    ]).then(results => results.map(each => commonFee += Number(each)));\r\n    return commonFee;\r\n}\r\n\r\nexport const burntAndLeftTokenPercent = async function (_chain, _tokenAddress) {\r\n    const burntVsCirculatingSupplyAbi = [{\"inputs\":[],\"name\":\"burntVsCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burnt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"circulating\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const data = await runContractFunction(_chain, _tokenAddress, 'burntVsCirculatingSupply', burntVsCirculatingSupplyAbi);\r\n    return {burnt: Number(data[0]), left: Number(data[1]), leftPercent: data[1] / (Number(data[0]) + Number(data[1])) * 100};\r\n}\r\n\r\nexport const totalFees = async function (_chain, _tokenAddress) {\r\n    const totalFeesAbi = [{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const data = await runContractFunction(_chain, _tokenAddress, 'totalFees', totalFeesAbi);\r\n    return data;\r\n}\r\n\r\nexport const getTransactions = async function (_chain, _walletAddress) {\r\n    const transactions = await axios.get(`${serverUrl}/${_walletAddress}/erc20/transfers?chain=${_chain}&offset=0&oder=desc`, apiConfig);\r\n    return transactions.data;\r\n}\r\n\r\nexport const getLogsByAddress = async function (_chain, _tokenAddress) {\r\n    // replace moralis\r\n    // enable param *(topic_hash) { user supplied topic hash }\r\n    // add back (events) fn() from iStack tests\r\n    let offset = 0;\r\n    const response = await axios.get(`${serverUrl}/${_tokenAddress}/logs?chain=${_chain}&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&offset=${offset}&oder=desc`, apiConfig);\r\n    let logs = response.data.result;\r\n    const total = response.data.total;\r\n    const pages = Math.ceil(total / 500);\r\n    let page = 1;\r\n    let getLogFunctions = [];\r\n    while (page < pages) {\r\n        offset = page * 500;\r\n        getLogFunctions.push(axios.get(`${serverUrl}/${_tokenAddress}/logs?chain=${_chain}&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&offset=${offset}&oder=desc`, apiConfig));\r\n        page++;\r\n    }\r\n    if (getLogFunctions.length) {\r\n        await Promise.all(getLogFunctions).then(results => {\r\n            results.map(each => {\r\n                logs = logs.concat(each.data.result);\r\n            })\r\n        })\r\n    }\r\n    return logs;\r\n}\r\n\r\nfunction getAddress(topic) {\r\n    if (topic === null || topic === '') return '';\r\n    return `0x${topic.substring(topic.length - 40)}`;\r\n}\r\n\r\nfunction filterLogs(logs, _walletAddress) {\r\n    return logs.filter(each => getAddress(each.topic1) === _walletAddress.toLowerCase() || getAddress(each.topic2) === _walletAddress.toLowerCase());\r\n}\r\n\r\nfunction getValue(topic) {\r\n    return parseInt(topic, 16);\r\n}\r\n\r\nasync function calculateBuySell(logs, _chain, _tokenAddress, _walletAddress) {\r\n    let buy = 0, sell = 0, isFee = true;\r\n    if (await isExcludedFromFee(_chain, _tokenAddress, _walletAddress)) isFee = false;\r\n    logs.map(each => {\r\n        if (getAddress(each.topic1) === _walletAddress.toLowerCase()) {\r\n            if (isFee) {\r\n                sell += getValue(each.data) / 97 * 100;\r\n            } else {\r\n                sell += getValue(each.data);\r\n            }\r\n        } else buy += getValue(each.data);\r\n    })\r\n    let result = {buy: buy, sell: sell};\r\n    return result;\r\n}\r\n\r\nexport const walletExchange = async function(_chain, _tokenAddress, _walletAddress) {\r\n    let logs;\r\n    await getLogsByAddress(_chain, _tokenAddress).then(data=> {\r\n        logs = filterLogs(data, _walletAddress);\r\n    })\r\n    return await calculateBuySell(logs, _chain, _tokenAddress, _walletAddress);\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n// ** Import Material UI Components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Modal from '@mui/material/Modal';\r\nimport { RadioGroup } from \"@mui/material\";\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Search from '@mui/icons-material/Search';\r\nimport { Snackbar } from \"@mui/material\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { TextField, Table, TableHead, TableBody, TableRow, TableCell, TableContainer, Paper, Box, IconButton } from \"@mui/material\"; {\r\n    /*\r\n        // import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n        // import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowDown';\r\n    */\r\n}\r\nimport Link from \"@mui/material/Link\";\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport { Tooltip } from \"@mui/material\";\r\nimport useStyles from \"../assets/styles\";\r\nimport { TOKENDATA, USERBALANCE, TOKENLISTS } from \"../redux/constants\";\r\nimport { CHAINDATA, networks_data, explorer_, rpc_, icons_, network_, lockerAddress, network_symbols, network_decimals, network_hex_to_dec } from \"../constants\";\r\nimport { getTokenMetadata, getERC20Metadata } from \"../api\";\r\nimport { toggleDrawer } from '../components/Header';\r\nimport Loader from '../components/Loader';\r\nimport { alterLoaderText } from '../components/Loader';\r\nimport { deposit, approve, allowance, getTokenBalance, getERC20balance, getERC20allowance, getData, explorer, updateProfile, getEtherBalance, w3 } from \"../web3\"\r\n\r\nconst Bridge = (props) => {\r\n\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [lockerListEnabled, setLockerListEnabled] = useState(false);\r\n    const [snackbar, setSnackbar] = React.useState(false);\r\n    const [loaderText, setLoaderText] = React.useState(\"\");\r\n    const [network, setNetwork] = useState(\"Frenchain\");\r\n    const [modalTitle, setModalTitle] = useState(\"\");\r\n    const [tokenContract, setTokenContract] = useState(\"\");\r\n    const [holder, setHolder] = useState(\"\");\r\n    const [modalDes, setModalDes] = useState(\"\");\r\n    const [subMethod, setSubMethod] = useState(\"Project Tokens\");\r\n    const [lockAmount, setLockAmount] = useState(0);\r\n    const [tokenDecimals, setTokenDecimals] = useState(0);\r\n    const [tokenSymbol, setTokenSymbol] = useState(\"\");\r\n    const [tokenName, setTokenName] = useState(\"\");\r\n    const [etherBalance, setEtherBalance] = useState(0);\r\n    const [tokenBalance, setTokenBalance] = useState(0);\r\n    const [tokenAllowance, setTokenAllowance] = useState(0);\r\n    const [withdrawDate, setWithdrawDate] = useState(undefined);\r\n    const [dateUseful, setDateUseful] = useState(false);\r\n    const [addressDemand, setAddressDemand] = useState(false);\r\n    const [isAllowed, setIsAllowed] = useState(0); {\r\n        /*\r\n                // 0: checking, 1: not allowed, 2: allowed\r\n            */\r\n    }\r\n    const [lockAmountMax, setLockAmountMax] = useState(false);\r\n    const maxSteps = 4;\r\n    const theme = useTheme();\r\n    const classes = useStyles.pools();\r\n    const mobileClasses = useStyles.mobile();\r\n    const dashboardClasses = useStyles.dashboard();\r\n    const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n    const userBalance = useSelector(state => state.userBalance);\r\n    const token = useSelector(state => state.tokenData);\r\n    const data = useSelector(state => state.tokenLists);\r\n    const test_data = useSelector(state => state);\r\n    console.log(\"test_data: \", test_data, test_data.tokenData);\r\n    const dispatch = useDispatch();\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #fff',\r\n        borderRadius: '10px',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    const { account, connector } = useWeb3React();\r\n\r\n    const [values, setValues] = React.useState({\r\n        tokenAddress: \"\",\r\n    });\r\n\r\n    const selectToken = async () => {\r\n        console.log(\"activeStep: \",activeStep);\r\n    };\r\n    const checkAllowance = async (token, account, network) => {\r\n        allowance(token, account, network).then(results => {\r\n            setTokenAllowance(results);\r\n            console.log(\"allowance: \", results, tokenAllowance);\r\n            return results;\r\n        });\r\n    };\r\n    const checkEtherBalance = async (provider, account) => {\r\n        getEtherBalance(provider, account).then(async (ethereumBalance) => {\r\n            console.log(\"ethereumBalance: \", ethereumBalance);\r\n            fetchEtherBalance(ethereumBalance);\r\n        });\r\n    };\r\n    const handleNext = async () => {\r\n        if (account) {\r\n            const provider = window.ethereum;\r\n            checkEtherBalance(provider, account);\r\n            const currentNetworkData = networkData.filter((each) => each.name === network);\r\n            try {\r\n                await provider.request({\r\n                    method: 'wallet_switchEthereumChain',\r\n                    params: [{ chainId: currentNetworkData[0].chainData.chainId }],\r\n                });\r\n                console.log(\"You have successfully switched to \", network)\r\n                if (activeStep == 0) {\r\n                    if (account === undefined) {\r\n                        setModalTitle(\"Please connect Wallet\");\r\n                        setModalDes(`Before you can create a lock on ${network}, you must connect your wallet to ${network} network on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                        handleOpen();\r\n                    } else {\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    }\r\n                } else if (activeStep >= 2) {\r\n                    if (addressDemand && tokenContract == undefined || addressDemand && tokenContract == \"\") {\r\n                        setModalTitle(\"Please select Token\");\r\n                        setModalDes(`Before you can create a lock on ${network}, you must select token on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                        handleOpen();\r\n                    } else {\r\n                        console.log(activeStep);\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    }\r\n                } else {\r\n                        console.log(\"activeStep: \",activeStep);\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                }\r\n            } catch (switchError) {\r\n                {\r\n                    /*\r\n                    // This error code indicates that the chain has not been added to MetaMask.\r\n                    */\r\n                }\r\n                const params_network_add = {\r\n                    chainId: currentNetworkData[0].chainData.chainId,\r\n                    rpcUrls: [rpc_[currentNetworkData[0].chainData.chainId]],\r\n                    chainName: network_[currentNetworkData[0].chainData.chainId],\r\n                    nativeCurrency: { name: network_symbols[currentNetworkData[0].chainData.chainId], decimals: network_decimals[currentNetworkData[0].chainData.chainId], symbol: network_symbols[currentNetworkData[0].chainData.chainId] },\r\n                    blockExplorerUrls: [explorer_[currentNetworkData[0].chainData.chainId]],\r\n                    iconUrls: [icons_[currentNetworkData[0].chainData.chainId]]\r\n                };\r\n                console.log(\"params_network_add: \", switchError.code, params_network_add);\r\n                if (switchError.code === 4902) {\r\n                    console.log(\"This network is not available in your metamask, please add it\");\r\n                    let provider = await connector.getProvider();\r\n                    provider.request({\r\n                        method: 'wallet_addEthereumChain',\r\n                        params: [{ ...params_network_add }]\r\n                    }).catch((error) => {\r\n                        console.log(\"provider_err: \", error);\r\n                    });\r\n                } else if (switchError.code === 4001) {\r\n                    console.log(\"Switch Request has rejected\");\r\n                } else if (switchError.code === 4200) {\r\n                    console.log(\"You have succefully switched to \", network)\r\n                    if (activeStep == 0) {\r\n                        if (account === undefined) {\r\n                            setModalTitle(\"Please connect Wallet\");\r\n                            setModalDes(`Before you can create a lock on ${network}, you must connect your wallet to ${network} network on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                            handleOpen();\r\n                        } else {\r\n                            setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                        }\r\n                    } else if (activeStep == 2) {\r\n                        if (addressDemand && tokenContract == undefined || addressDemand && tokenContract == \"\") {\r\n                            setModalTitle(\"Please select Token\");\r\n                            setModalDes(`Before you can create a lock on ${network}, you must select token on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                            handleOpen();\r\n                        } else {\r\n                            console.log(activeStep);\r\n                            setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                        }\r\n                    } else {\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    };\r\n                };\r\n            };\r\n        };\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoaderText(\" ... \");\r\n        alterLoaderText(loaderText);\r\n        if (!network) return;\r\n        if (!account) {\r\n            toggleDrawer();\r\n            return;\r\n        };\r\n        try {\r\n            getData(account, network).then(newData => {\r\n                if (!newData) return;\r\n                try {\r\n                    dispatch({ type: TOKENLISTS, payload: newData });\r\n                } catch (e) {\r\n                    console.log(e);\r\n                };\r\n            });\r\n            const interval = setInterval(() => {\r\n                getData(account, network).then(newData => {\r\n                    try {\r\n                        if (!newData) return;\r\n                        dispatch({ type: TOKENLISTS, payload: newData });\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    };\r\n                });\r\n            }, 5000);\r\n            return () => clearInterval(interval);\r\n        } catch (e) {\r\n            console.log(e);\r\n        };\r\n    }, [account, network]);\r\n\r\n    useEffect(async () => {\r\n        if (!account) {\r\n            setIsAllowed(0);\r\n            alterLoaderText(\"Connect Wallet\");\r\n            return;\r\n        } else if (account && !network && !tokenContract) {\r\n            setIsAllowed(0);\r\n            alterLoaderText(\"Select Network\");\r\n            return;\r\n        } else if (account && network && !tokenContract) {\r\n            setIsAllowed(0);\r\n            alterLoaderText(\"Make a selection\");\r\n            return;\r\n        } else {\r\n            try {\r\n                const tokenBalance = await getTokenBalance(tokenContract, account, network);\r\n                console.log(\"tokenBalance: \", tokenBalance);\r\n                dispatch({ type: USERBALANCE, payload: tokenBalance });\r\n            } catch (e) {\r\n                console.log(e);\r\n            } finally {\r\n                if(!lockAmount) { \r\n                    //\r\n                } else {                    \r\n                    try {\r\n                        let provider = await connector.getProvider();\r\n                        const allowanceAmount = await getERC20allowance(provider, tokenContract, account, lockerAddress[network], network);\r\n                        console.log(\"allowanceAmount/lockAmount: \", parseFloat(allowanceAmount),lockAmount*10**tokenDecimals,parseFloat(allowanceAmount) >= parseFloat(lockAmount*10**tokenDecimals));\r\n                        setTokenAllowance(allowanceAmount);\r\n                        if (parseFloat(allowanceAmount) < parseFloat(lockAmount*10**tokenDecimals)) {\r\n                            setIsAllowed(1);\r\n                        } else {\r\n                            console.log(\"allowed: \", allowanceAmount);\r\n                            setIsAllowed(2);\r\n                        };\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    };\r\n                };\r\n            };\r\n        };\r\n    }, [account, tokenContract, connector, network]);\r\n\r\n    const handleAllowance = async (e) => {\r\n        if (!account || !tokenContract) return;\r\n        setIsAllowed(0);\r\n        try {\r\n            let provider = await connector.getProvider();\r\n            const tokenBalance = await getERC20balance(provider, tokenContract, account, network);\r\n            console.log(\"tokenBalance: \", tokenBalance);\r\n            dispatch({ type: USERBALANCE, payload: tokenBalance });\r\n        } catch (e) {\r\n            console.log(e);\r\n        } finally {\r\n            if(!lockAmount) { \r\n                //\r\n            } else {  \r\n                try {\r\n                    let provider = await connector.getProvider();\r\n                    const allowanceAmount = await getERC20allowance(provider, tokenContract, account, lockerAddress[network], network);\r\n                    console.log(\"allowanceAmount/lockAmount: \", parseFloat(allowanceAmount),lockAmount*10**tokenDecimals,parseFloat(allowanceAmount) >= parseFloat(lockAmount*10**tokenDecimals));\r\n                    setTokenAllowance(allowanceAmount);\r\n                    if (parseFloat(allowanceAmount) < parseFloat(lockAmount*10**tokenDecimals)) {\r\n                        setIsAllowed(1);\r\n                    } else {\r\n                        setIsAllowed(2);\r\n                    };\r\n                } catch (e) {\r\n                    console.log(e);\r\n                };\r\n            };\r\n        };\r\n    };\r\n    const handleChange = async (event) => {\r\n        setValues({ tokenAddress: event.target.value });\r\n        if (event.target.value.length == 42) {\r\n            const contract_address = event.target.value;\r\n            let provider = await connector.getProvider();\r\n            try {\r\n                const contractData = await getERC20Metadata(provider, CHAINDATA.find((item) => item.name == network).chain, contract_address, account);\r\n                let tokenData = contractData;\r\n                dispatch({\r\n                    type: TOKENDATA,\r\n                    payload: tokenData[0]\r\n                });\r\n                setTokenDecimals(parseFloat(JSON.parse(contractData[0][\"decimals\"])).toFixed(0));\r\n                setTokenBalance(parseFloat(JSON.parse(contractData[0][\"balanceOf\"])).toFixed(2));\r\n                setTokenSymbol(contractData[0][\"symbol\"].toString());\r\n                setTokenName(contractData[0][\"name\"].toString());\r\n            } catch (e) {\r\n                //\r\n                console.log(\"e: \",e);\r\n            };\r\n        } else {\r\n            //\r\n        };\r\n    };\r\n\r\n    const handleClickSearch = () => {\r\n        setValues({\r\n            ...values,\r\n            showPassword: !values.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    const fetchEtherBalance = (eb) => {\r\n        setEtherBalance(eb);\r\n    };\r\n\r\n    const selectLockAmountMax = () => {\r\n        const _amount = addressDemand ? (test_data.userBalance / Math.pow(10, tokenDecimals)).toFixed(2) : etherBalance;\r\n        setLockAmount(_amount);\r\n        console.log(\"_amount: \", lockAmount);\r\n        setLockAmountMax(true);\r\n    }\r\n    function handleLocker(e) {\r\n        setLockAmount(parseFloat(e.target.value));\r\n        setLockAmountMax(false);\r\n        handleAllowance(e);\r\n        console.log(\"_amount: \", lockAmount);\r\n    }\r\n    const handleLockAmount = (e) => {\r\n        console.log(\"e.target.value: \", e.target.value);\r\n        handleLocker(e);\r\n    };\r\n    const handleTokenDecimals = (e) => {\r\n        console.log(\"balance: \", test_data.userBalance / Math.pow(10, e.target.value));\r\n        setTokenDecimals(parseFloat(e.target.value).toFixed(0));\r\n    };\r\n    const handleLockToken = (e) => {\r\n        setTokenContract(document.getElementById(\"outlined-adornment-password\").value);\r\n    };\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const handleSnackbarClose = () => setSnackbar(false);\r\n    const handleSnackbarOpen = () => setSnackbar(true);\r\n    const handleHolder = async (e) => {\r\n        setHolder(e.target.value);\r\n        console.log(\"holder: \", holder);\r\n    };\r\n\r\n    const handleDate = (value) => {\r\n        const currentDate = new Date();\r\n        console.log(\"DATETIME: \", value, value > currentDate)\r\n        if (value > currentDate) {\r\n            setDateUseful(true);\r\n            setWithdrawDate(value);\r\n        } else {\r\n            setDateUseful(false);\r\n        };\r\n    };\r\n\r\n    const depositToken = async (e) => {\r\n        try {\r\n            let tokenAmount;\r\n            tokenAmount = lockAmount;\r\n            let isEth = false;\r\n            let unlockDate = withdrawDate;\r\n            if (addressDemand == true) {\r\n                isEth = false;\r\n            } else {\r\n                isEth = true;\r\n            };\r\n            if (holder == undefined) {\r\n                console.log(\"holder unset! Defaulting \", holder);\r\n                setHolder(account);\r\n            };\r\n            console.log(\"depositToken: \", e.target.value, addressDemand, tokenAmount, unlockDate, account, holder, network);\r\n            let unset = true;\r\n            let allSet = false;\r\n            let gasLimit;\r\n            let depositAmount;\r\n            let depositNetwork;\r\n            let depositHolder;\r\n            let depositCreator;\r\n            if (unset) {\r\n                depositAmount = tokenAmount;\r\n                depositNetwork = network;\r\n                depositHolder = holder;\r\n                depositCreator = account;\r\n                unset = false;\r\n                allSet = true;\r\n            };\r\n            if (allSet) {\r\n                let provider = await connector.getProvider();\r\n                w3(provider, network).then(async (W3) => {\r\n                    let block = await W3.eth.getBlock(\"latest\");\r\n                    console.log(\"(w3) block: \", block);\r\n                    console.log(\"(w3) gasLimit: \", block.gasLimit);\r\n                    gasLimit = block.gasLimit;\r\n                    deposit(provider, isEth, tokenContract, depositAmount, unlockDate, depositCreator, depositHolder, depositNetwork, gasLimit).then(async(results) => {\r\n                    const newData = await getData(account, network);\r\n                    dispatch({ type: TOKENLISTS, payload: newData });\r\n                    setWithdrawDate(undefined);\r\n                    setDateUseful(false);\r\n                    try {\r\n                        console.log(\"events: \",parseFloat(results[\"events\"][\"Transfer\"][\"returnValues\"].tokenId));\r\n                        showLockup(network,parseFloat(results[\"events\"][\"Transfer\"][\"returnValues\"].tokenId));\r\n                    } catch(e) {\r\n                        dispatch({\r\n                            type: TOKENDATA,\r\n                            payload: {}\r\n                        })\r\n                        setActiveStep(0);\r\n                        console.log(\"err: \",e);\r\n                    };\r\n                });\r\n                });\r\n                \r\n            };\r\n        } catch (e) {\r\n            console.log(e);\r\n        };\r\n    };\r\n\r\n    const handleNativeTokenMismatch = async (e) => {\r\n        if (e !== \"Project Tokens\") {\r\n            console.log(\"NATIVE: \", e);\r\n            setAddressDemand(false);\r\n        } else {\r\n            console.log(\"ERC-20: \", e);\r\n            setAddressDemand(true);\r\n        };\r\n    };\r\n\r\n    const approveToken = async () => {\r\n        console.log(\"approving: \",lockAmount*10**tokenDecimals);\r\n        let provider = await connector.getProvider()\r\n        approve(provider, tokenContract, account, (lockAmount*10**tokenDecimals).toString(), network).then((status) => {\r\n            if (status) setIsAllowed(2);\r\n        });\r\n    };\r\n\r\n    const showLockup = async (network, lockId) => {\r\n        props.history.push(`/lockup/${network.toLowerCase()}/${lockId}`);\r\n    };\r\n\r\n    const networkData = networks_data;\r\n\r\n    const changeNetwork = (name) => {\r\n        setNetwork(name);\r\n    };\r\n\r\n    const Row = (props) => {\r\n        const { index, row } = props;\r\n        let nextUnlock, lockedTokenAmount = 0,\r\n            lockedLiquidity = false;\r\n        const currentTime = Date.now();\r\n        row.data.map(each => {\r\n            if (each.timestamp > currentTime / 1000) {\r\n                if (!nextUnlock) nextUnlock = each.timestamp;\r\n                else if (nextUnlock > each.timestamp) nextUnlock = each.timestamp;\r\n            }\r\n            if (!each.isWithdrawn && !each.isLiquidity) lockedTokenAmount += each.amount / Math.pow(10, each.decimals);\r\n            if (!each.isWithdrawn && each.isLiquidity) lockedLiquidity = true;\r\n        })\r\n\r\n        return ( <\r\n            >\r\n            <TableRow\r\n                sx={{ '& > *': { borderBottom: 'unset' } }}\r\n                > \r\n                    <TableCell>\r\n                        {index + 1}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        <span style={{cursor: \"pointer\"}} onClick={()=>showLockup(row.token.address,index + 1)}>{row.token.symbol}</span>\r\n                        <CopyToClipboard text={row.token.address} onCopy={()=>handleSnackbarOpen(true)}>\r\n                            <Tooltip title=\"copy\">\r\n                                <IconButton>\r\n                                    <ContentCopyIcon/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </CopyToClipboard>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{lockedTokenAmount.toFixed(2)}</TableCell>\r\n                    <TableCell align=\"right\">{lockedLiquidity && <CheckIcon />}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                        {nextUnlock ? new Date(nextUnlock).toDateString() : ''}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                        <Button variant=\"contained\" color=\"secondary\" style={{width: '100%'}}  onClick={() => showLockup(row.token.address,index + 1)}>View</Button>\r\n                    </TableCell>\r\n                </TableRow> {\r\n                /* <TableRow>\r\n                                    <TableCell colSpan={2}></TableCell>\r\n                                    <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\r\n                                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                                        <Box sx={{ margin: 1 }}>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                History\r\n                                            </Typography>\r\n                                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell>Withdrawable Date</TableCell>\r\n                                                        <TableCell align=\"right\">Amount</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                {row.vesting.map((vestingRow) => (\r\n                                                    <TableRow key={vestingRow[0]}>\r\n                                                        <TableCell component=\"th\" scope=\"row\">\r\n                                                            {new Date(vestingRow[0] * 1000).toDateString()}\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"right\">{(vestingRow[1] / Math.pow(10, row.decimals)).toFixed(2)}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </Box>\r\n                                    </Collapse>\r\n                                    </TableCell>\r\n                                </TableRow> */\r\n            } <\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <Container className={classes.root} maxWidth=\"lg\" style={{paddingLeft:20, paddingRight:20}}>\r\n            <Box className={classes.info}>\r\n                <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\" >\r\n                    <Grid className={isMobile ? `${mobileClasses.root} grid text-center`  : \"grid text-center\"} style={{marginTop:40}} item xs={12} sm={12} md={6} >\r\n                        <div style={{maxWidth:400, display:'inline-block', textAlign:'left'}}>\r\n                            <h1>Create your own custom token lock instantly.</h1>\r\n                            <p>All digital assets are locked into a TimeLock enabled smart contract which has been specially engineered and tested to serve this purpose. TimeLock certified digital assets can only be withdrawn after the preset time lock expires.</p>\r\n                            <Link\r\n                                href={`https://locker.interchained.org`}\r\n                                target=\"_blank\"\r\n                                color=\"blue\"\r\n                                underline=\"none\"\r\n                                className={classes.button}\r\n                            ><Button variant=\"contained\">Powered by Interchained</Button></Link>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid className={isMobile ? `${mobileClasses.root} grid`  : \"grid\"} style={{marginTop:40}} item xs={12} sm={12} md={6} >\r\n                        <Card className=\"card\">\r\n                            <CardHeader\r\n                                className={dashboardClasses.cardHeader}\r\n                                title=\"Create New iLock\"\r\n                            />\r\n                            <CardContent >\r\n                                <img src=\"/lock.png\" />\r\n                                <RadioGroup\r\n                                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                    defaultValue=\"female\"\r\n                                    name=\"radio-buttons-group\"\r\n                                >\r\n                                    <SwipeableViews\r\n                                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                                        index={activeStep}\r\n                                        onChangeIndex={handleStepChange}\r\n                                    >\r\n                                       \r\n                                        <div key={1} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <p style={{textAlign:'center'}} color=\"textSecondary\">\r\n                                                Choose the blockchain network.\r\n                                            </p>\r\n                                            {\r\n                                                networkData ? networkData.map((item)=>\r\n                                                <Grid\r\n                                                    className={classes.networkSelector}\r\n                                                    container\r\n                                                    direction=\"row\"\r\n                                                    justifyContent=\"space-evenly\"\r\n                                                    alignItems=\"center\"\r\n                                                    style={{padding:\"10px 0px\", border:item.name==network?\"1px solid #fff\":\"1px solid transparent\", borderRadius:'5px'}}\r\n                                                    key={item.name}\r\n                                                    onClick = {()=>changeNetwork(item.name)}\r\n                                                >\r\n                                                    <Grid item  xs={10} sm={11} md={11}>\r\n                                                        <Grid \r\n                                                            container\r\n                                                            direction=\"row\"\r\n                                                            alignItems=\"center\"\r\n                                                        >\r\n                                                            <Grid item className=\"text-center\" xs={3} sm={2} md={2}>\r\n                                                                <img className={dashboardClasses.networkImage} src={item.url} alt=\"network\" />\r\n                                                            </Grid>\r\n                                                            <Grid item   xs={9} sm={10} md={10}>\r\n                                                                <p  color=\"textSecondary\" className={dashboardClasses.networkTitle}>\r\n                                                                    {item.name}\r\n                                                                </p>\r\n                                                                <p color=\"textSecondary\" className={dashboardClasses.networkDes}>\r\n                                                                    {item.subtitle}\r\n                                                                </p>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                    <Grid item  className=\"text-center\" xs={2} sm={1} md={1}>\r\n                                                        {item.name==network ? <div style={{width:\"20px\", height:'20px', borderRadius:\"10px\", backgroundColor:'#fff', display:'inline-block'}} />: <div style={{width:\"20px\", height:'20px', borderRadius:\"10px\", border:'1px solid #fff', display:'inline-block'}} />}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                )\r\n                                            : <></> }\r\n                                        </div>\r\n                                        <div key={2} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <p style={{textAlign:'center'}} color=\"textSecondary\">\r\n                                                Select the type of token you would like to create a lock for.\r\n                                                You can create multiple locks with different settings for each one.\r\n                                            </p>\r\n                                            {\r\n                                                network !=\"\" && networkData.find((item)=>item.name==network).subData.map((each)=><Grid\r\n                                                className={classes.networkSelector}\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-evenly\"\r\n                                                alignItems=\"center\"\r\n                                                style={{padding:\"10px 0px\", border:each.name==subMethod?\"1px solid #fff\":\"1px solid transparent\", borderRadius:'5px'}}\r\n                                                key={each.name}\r\n                                                onClick = {\r\n                                                    ()=>{\r\n                                                        setSubMethod(each.name)\r\n                                                        handleNativeTokenMismatch(each.name)\r\n                                                    }\r\n                                                }\r\n                                            >\r\n                                                <Grid item  xs={10} sm={11} md={11}>\r\n                                                    <Grid \r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        alignItems=\"center\"\r\n                                                    >\r\n                                                        <Grid item className=\"text-center\" xs={3} sm={2} md={2}>\r\n                                                            <img className={dashboardClasses.networkImage} src={each.url} alt=\"network\" />\r\n                                                        </Grid>\r\n                                                        <Grid item   xs={9} sm={10} md={10}>\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.networkTitle}>\r\n                                                                {each.name}\r\n                                                            </p>\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.networkDes}>\r\n                                                                {each.subTitle}\r\n                                                            </p>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item  className=\"text-center\" xs={2} sm={1} md={1}>\r\n                                                    {each.name==subMethod ? <div className={dashboardClasses.fillCircle} />: <div className={dashboardClasses.emptyCircle} />}\r\n                                                </Grid>\r\n                                            </Grid>)\r\n                                            }\r\n                                        </div>\r\n                                        { addressDemand ? <div key={3} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <p className=\"text-center\" color=\"textSecondary\">\r\n                                                Enter the token address you would like to lock for\r\n                                            </p>\r\n                                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\" style={{width:'-webkit-fill-available'}}>\r\n                                                <InputLabel htmlFor=\"outlined-adornment-password\">Address</InputLabel>\r\n                                                <OutlinedInput\r\n                                                    id=\"outlined-adornment-password\"\r\n                                                    type=\"text\"\r\n                                                    value={values.tokenAddress}\r\n                                                    onChange={handleChange}\r\n                                                    endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                        aria-label=\"toggle search\"\r\n                                                        onClick={handleLockToken}\r\n                                                        onMouseDown={handleMouseDownPassword}\r\n                                                        edge=\"end\"\r\n                                                        >\r\n                                                        <Search />\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                    }\r\n                                                    label=\"Password\"\r\n                                                />\r\n                                            </FormControl>\r\n                                            \r\n                                            {\r\n                                                tokenContract &&\r\n                                                <div style={{paddingLeft:20, paddingRight:20}}>\r\n                                                    <p style={{margin:\"0px\"}}>Token Found</p>\r\n                                                    <Grid \r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        justifyContent=\"space-between\"\r\n                                                        alignItems=\"center\"\r\n                                                    >\r\n                                                        <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                            <img className={dashboardClasses.tokenImage} src=\"/lock.png\" alt=\"network\" />\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.tokenTitle}>\r\n                                                                {token.symbol}\r\n                                                            </p>\r\n                                                        </Grid>\r\n                                                        <Grid item className={dashboardClasses.textRight}  xs={6} sm={6} md={6}>\r\n                                                            <Button variant=\"contained\" color=\"error\" sm={12} onClick={selectToken}>Select</Button>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </div>\r\n                                            }\r\n                                            \r\n                                        </div> : <div key={3} style={{paddingLeft:1, paddingRight:1}}></div> && handleNext && <div key={4} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <br />\r\n                                            { addressDemand ? <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        id=\"standard-number-decimals\"\r\n                                                        label=\"Token Decimals\"\r\n                                                        type=\"number\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 0, max: 18 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 0, max: 18 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleTokenDecimals}\r\n                                                        value={tokenDecimals}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid> : <span></span> }\r\n                                            <br />\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        id=\"standard-number\"\r\n                                                        label=\"Lock Amount\"\r\n                                                        type=\"number\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 1 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 1 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleLockAmount}\r\n                                                        value={lockAmount}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item className={dashboardClasses.textRight}  xs={6} sm={6} md={6}>\r\n                                                    <p style={{marginBottom:2, marginTop:0, fontSize: \"10px\"}}>Balance: {addressDemand ? (test_data.userBalance / Math.pow(10, tokenDecimals)).toFixed(2) : etherBalance}</p>\r\n                                                    <Grid \r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        justifyContent=\"space-between\"\r\n                                                        alignItems=\"center\"\r\n                                                    >\r\n                                                        <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                            <Button variant=\"contained\" color=\"error\" sm={12} onClick={selectLockAmountMax}>Max</Button>\r\n                                                        </Grid>\r\n                                                        <Grid item className={dashboardClasses.textRight} xs={6} sm={6} md={6}>\r\n                                                            <img style={{height:30}} src=\"/lock.png\" alt=\"network\" />\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.tokenTitle}>\r\n                                                                {token.symbol}\r\n                                                            </p>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <br />\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        id=\"standard-holder\"\r\n                                                        label=\"Holder\"\r\n                                                        type=\"text\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 1 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 1 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleHolder}\r\n                                                        value={holder}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <br />\r\n                                            <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={!isMobile ? `${dashboardClasses.balanceContainer}` : `${mobileClasses.balanceContainer}`}\r\n                                            >\r\n                                                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                                        <DateTimePicker\r\n                                                            id=\"standard-number\"\r\n                                                            label=\"Unlock Date\"\r\n                                                            renderInput={(props) => <TextField {...props} className={isMobile ? `${mobileClasses.datetimepicker}` : ``} />}\r\n                                                            value={withdrawDate}\r\n                                                            onChange={(value) => handleDate(value)}\r\n                                                        />\r\n                                                    </LocalizationProvider>\r\n                                                    <div>\r\n                                                    {\r\n                                                        !addressDemand || isAllowed == 2 ? <Button variant=\"contained\" color=\"secondary\" sm={12} disabled={!dateUseful} value={addressDemand} onClick={depositToken} className={isMobile ? `${mobileClasses.button}` : ``}>Deposit</Button>\r\n                                                        : (isAllowed == 1 ? <Button variant=\"contained\" color=\"secondary\" sm={12} onClick={approveToken} className={isMobile ? `${mobileClasses.button}` : ``}>Approve</Button> : <Button variant=\"contained\" color=\"secondary\" sm={12} onClick={approveToken} className={isMobile ? `${mobileClasses.button}` : ``}>Approve</Button>)\r\n                                                    }\r\n                                                    </div>\r\n                                            </Grid>\r\n                                        </div>}\r\n                                    </SwipeableViews>\r\n                                    <MobileStepper\r\n                                        className={dashboardClasses.mobileStepper}\r\n                                        steps={maxSteps}\r\n                                        position=\"static\"\r\n                                        activeStep={activeStep}\r\n                                        nextButton={\r\n                                        <Button\r\n                                            size=\"small\"\r\n                                            onClick={handleNext}\r\n                                            disabled={activeStep === maxSteps - 1}\r\n                                        >\r\n                                            Next\r\n                                            {theme.direction === 'rtl' ? (\r\n                                            <KeyboardArrowLeft />\r\n                                            ) : (\r\n                                            <KeyboardArrowRight />\r\n                                            )}\r\n                                        </Button>\r\n                                        }\r\n                                        backButton={\r\n                                        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                                            {theme.direction === 'rtl' ? (\r\n                                            <KeyboardArrowRight />\r\n                                            ) : (\r\n                                            <KeyboardArrowLeft />\r\n                                            )}\r\n                                            Back\r\n                                        </Button>\r\n                                        }\r\n                                    />\r\n                                </RadioGroup>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    {\r\n                        lockerListEnabled ? <Grid className={isMobile ? `${mobileClasses.root} grid `  : \"grid\"} style={{marginTop:40}} item xs={12} sm={12} md={12} >\r\n                        <Card className=\"card\">\r\n                            <CardHeader\r\n                                className={dashboardClasses.cardHeader}\r\n                                title=\"Locked Token List\"\r\n                            />\r\n                            <CardContent >\r\n                            {/* <TextField\r\n                                id=\"outlined-search\"\r\n                                label=\"Search other wallet\"\r\n                                type=\"search\"\r\n                                variant=\"standard\"\r\n                                fullWidth={true}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onKeyPress={searchOtherWallet}\r\n                                value={searchWallet}\r\n                                onChange={onChangeSearchWallet}\r\n                                error={searchOtherWalletError}\r\n                                helperText={searchHelperText}\r\n                            /> */}\r\n                                {data.length == 0 && \r\n                                <div className=\"text-center\" style={{width:'100%', padding:\"20px 0px\"}}>\r\n                                    <img src=\"/mylock.png\" alt=\"My Lock\" style={{height:200}}/>\r\n                                    <h2 style={{marginBottom:0}}>No Locked Coin</h2>\r\n                                    <p style={{color:'grey',margin:0}}>You have not locked up any coins yet.</p>\r\n                                </div>}\r\n                                {data.length != 0 && <TableContainer component={Paper}>\r\n                                    <Table aria-label=\"collapsible table\">\r\n                                        <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>No</TableCell>\r\n                                            <TableCell>Token</TableCell>\r\n                                            <TableCell align=\"right\">Tokens Locked</TableCell>\r\n                                            <TableCell align=\"right\">Liquidity Locked</TableCell>\r\n                                            <TableCell align=\"right\">Next Unlock</TableCell>\r\n                                            <TableCell align=\"right\"></TableCell>\r\n                                        </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                        {data.map((row, index) => (\r\n                                            <Row key={`lockToken-${index}`} row={row} index={index} />\r\n                                        ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>}\r\n                            </CardContent>\r\n                        </Card>\r\n                        \r\n                    </Grid> : <Loader value={loaderText} />\r\n                    }\r\n                </Grid>\r\n            </Box>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    \r\n                    {networkData.find((item)=>item.name==network) && <div style={{textAlign:'center'}}><img style={{width:\"50px\"}} src={networkData.find((item)=>item.name==network).url} alt=\"network\" /></div>}\r\n                    <h3 id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" style={{textAlign:'center', marginTop:0}}>\r\n                        {modalTitle}\r\n                    </h3>\r\n                    <p id=\"modal-modal-description\" sx={{ mt: 2 }} style={{textAlign:'center', fontSize:12, color:'grey'}}>\r\n                        {modalDes}\r\n                    </p>\r\n                    <Button variant=\"contained\" color=\"error\" style={{width:'100%'}} onClick={handleClose}>Close</Button>\r\n                </Box>\r\n            </Modal>\r\n            <Snackbar\r\n                open={snackbar}\r\n                autoHideDuration={600}\r\n                style={{width:100}}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Successfully Copied to Clipboard\"\r\n                // action={action}\r\n            />\r\n        </Container >\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    statistics: state.statistics,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Bridge);"],"sourceRoot":""}