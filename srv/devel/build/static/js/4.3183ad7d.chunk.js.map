{"version":3,"sources":["components/Loader.js","api.js","pages/Dashboard.js"],"names":["alterLoaderText","Loader","_ref","isLoading","useStyles","base","_React$useState","React","useState","_React$useState2","_slicedToArray","loaderText","setLoaderText","_React$useState3","_React$useState4","loaderBottomText","setLoaderBottomText","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","l_t","lb_t","wrap","_context","prev","next","console","log","length","abrupt","stop","_x","_x2","apply","arguments","_jsxs","Fragment","children","_jsx","Stack","spacing","style","padding","margin","Skeleton","variant","sx","fontSize","Typography","component","alignItems","textAlign","dangerouslySetInnerHTML","__html","width","height","getERC20Metadata","_callee2","provider","_chain","_tokenAddress","address","result","decimals","symbol","name","balanceOf","web3","contract","_web","_contract","_context2","Web3","t0","eth","Contract","erc20Abi","t1","sent","t2","methods","call","parseFloat","t3","t4","t5","t6","t7","_x3","_x4","_x5","_x6","getTokenMetadata","_ref3","_callee3","_context3","_x7","_x8","_getBN","lockAmount","tokenDecimals","ethers","utils","parseUnits","toString","_getUIfmt","formatUnits","connect","state","statistics","props","_useWeb3React","useWeb3React","account","connector","chainId","_props$match$params","active","match","params","lockId","chainName","activeStep","setActiveStep","open","setOpen","_useState","_useState2","lockerListEnabled","_React$useState5","_React$useState6","snackbar","setSnackbar","_React$useState7","_React$useState8","_useState3","_useState4","network","setNetwork","_useState5","_useState6","modalTitle","setModalTitle","_useState7","_useState8","modalDes","setModalDes","_useState9","_useState10","tokenContract","setTokenContract","_useState11","_useState12","holder","setHolder","_useState13","_useState14","subMethod","setSubMethod","_useState15","_useState16","setLockAmount","_useState17","_useState18","setTokenDecimals","_useState19","_useState20","tokenSymbol","setTokenSymbol","_useState21","_useState22","setTokenName","_useState23","_useState24","etherBalance","setEtherBalance","_useState25","_useState26","tokenBalance","setTokenBalance","_useState27","_useState28","setTokenAllowance","_useState29","undefined","_useState30","withdrawDate","setWithdrawDate","_useState31","_useState32","dateUseful","setDateUseful","_useState33","_useState34","addressDemand","setAddressDemand","_useState35","_useState36","isAllowed","setIsAllowed","_useState37","_useState38","setLockAmountMax","theme","useTheme","classes","pools","mobileClasses","mobile","dashboardClasses","dashboard","isMobile","useMediaQuery","token","useSelector","userBalance","tokenData","data","tokenLists","test_data","dispatch","useDispatch","_React$useState9","tokenAddress","_React$useState10","values","setValues","selectToken","checkEtherBalance","_ref5","_callee6","_context6","getEtherBalance","then","_ref6","_callee5","ebf","_context5","fetchEtherBalance","_x10","_x9","handleNext","_ref7","_callee7","currentNetworkData","NETWORK","params_network_add","_provider","_context7","window","ethereum","networkData","filter","each","network_hex_to_dec","chainData","request","method","concat","handleOpen","prevActiveStep","rpcUrls","rpc_","network_","nativeCurrency","network_symbols","network_decimals","blockExplorerUrls","explorer_","iconUrls","icons_","code","getProvider","_objectSpread","catch","error","useEffect","_callee8","_context8","toggleDrawer","_callee9","able","_tokenBalance","tokenBalanceFormatted","_provider2","allowanceAmount","allowanceAmountFormatted","lockAmountFormatted","_context9","getETHtoChecksum","getTokenBalance","alert","type","USERBALANCE","payload","t8","t9","t10","getERC20allowance","t11","t12","t13","t14","lockerAddress","t15","toFixed","Math","pow","t16","finish","handleAllowance","_ref10","_callee10","e","_tokenBalance2","_provider3","allowanceAmountFormatted_UI","_context10","getERC20balance","_x11","handleChange","_ref11","_callee11","event","contract_address","contractData","_context11","target","value","CHAINDATA","find","item","chain","TOKENDATA","JSON","parse","_x12","handleMouseDownPassword","preventDefault","eb","handleLockToken","_ref12","_callee14","nextMsg","_nextMsg","nextCount","_nextCount","_tokenBalance3","_context14","_callee13","ctr","tb","ta","count_lt","_context13","setTimeout","_x17","_x18","_x19","_callee12","lb","la","string_to_add","_context12","document","getElementById","_x14","_x15","_x16","_x13","handleClose","handleHolder","_ref13","_callee15","_context15","_x20","showLockup","_ref14","_callee16","_context16","history","push","toLowerCase","_x21","_x22","depositToken","_ref15","_callee20","tokenAmount","isEth","unlockDate","amountFormatted","amountFormatted_UI","balanceChecker","allSet","gasLimit","depositNetwork","depositHolder","depositCreator","restore","_context20","w3","_ref16","_callee18","W3","block","_context18","getBlock","deposit","_ref17","_callee17","results","newData","_context17","tokenId","getData","TOKENLISTS","_x25","_x24","blur","focus","focusVisible","_ref18","_callee19","_context19","_x23","handleNativeTokenMismatch","_ref19","_callee21","_context21","_x26","approveToken","_ref20","_callee22","ap","_context22","approve","status","networks_data","Row","nextUnlock","index","row","lockedTokenAmount","lockedLiquidity","currentTime","Date","now","map","timestamp","isWithdrawn","isLiquidity","amount","_Fragment","TableRow","borderBottom","TableCell","scope","cursor","onClick","CopyToClipboard","text","onCopy","Tooltip","title","IconButton","ContentCopyIcon","align","CheckIcon","toDateString","Button","color","Container","className","root","maxWidth","paddingLeft","paddingRight","Box","info","Grid","container","direction","justifyContent","marginTop","xs","sm","md","display","Link","href","websiteURI","underline","button","PROJECTNAME","Card","CardHeader","cardHeader","CardContent","src","RadioGroup","defaultValue","SwipeableViews","axis","onChangeIndex","step","networkSelector","border","borderRadius","networkImage","url","alt","networkTitle","ui_friendly_networks","networkDes","subtitle","backgroundColor","subData","subTitle","fillCircle","emptyCircle","FormControl","m","InputLabel","htmlFor","OutlinedInput","id","onChange","endAdornment","InputAdornment","position","onKeyDown","onMouseDown","edge","Search","label","textLeft","tokenImage","tokenTitle","textRight","balanceContainer","TextField","InputLabelProps","shrink","inputprops","min","max","InputProps","handleLocker","marginBottom","_amount","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","renderInput","datetimepicker","currentDate","handleDate","disabled","MobileStepper","mobileStepper","steps","nextButton","size","maxSteps","KeyboardArrowLeft","KeyboardArrowRight","backButton","TableContainer","Paper","Table","TableHead","TableBody","Modal","onClose","top","left","transform","bgcolor","boxShadow","p","mt","Snackbar","autoHideDuration","message"],"mappings":"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","file":"static/js/4.3183ad7d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\nimport clsx from \"clsx\";\r\nimport Paper from \"@mui/material/Box\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport useStyles from \"../assets/styles\";\r\nimport SpinnerLogoWhite from \"../assets/img/spinner-logo-white.png\";\r\n\r\nexport let alterLoaderText;\r\nconst Loader = ({ isLoading }) => {\r\n    const classes = useStyles.base();\r\n    const [loaderText,setLoaderText] = React.useState(\"\");\r\n    const [loaderBottomText,setLoaderBottomText] = React.useState(\"\");\r\n    alterLoaderText = async function(l_t,lb_t) {\r\n      console.log(\"l_t: \",l_t);\r\n      await setLoaderText(l_t);\r\n      if(lb_t) {\r\n        if(lb_t.length>0) {\r\n          await setLoaderBottomText(lb_t);\r\n        }\r\n      }\r\n      return l_t;\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n          <Stack spacing={1} style={{padding:50,margin:50}}>\r\n          {/* For variant=\"text\", adjust the height via font-size */}\r\n            <Skeleton variant=\"text\" sx={{ fontSize: '1rem' }} />\r\n          {/* For other variants, adjust the size with `width` and `height` */}\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <div dangerouslySetInnerHTML={{ __html: loaderText ? loaderText : 'SCANNING BLOCKCHAIN' }} />\r\n          </Typography>\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <Skeleton variant=\"circular\" width={40} height={40} /> \r\n          </Typography>\r\n          <Skeleton variant=\"rectangular\" width={210} height={60} />\r\n          <Typography component=\"span\" style={{margin:'auto', alignItems:'center', textAlign:'center'}}>\r\n            <div dangerouslySetInnerHTML={{ __html: loaderBottomText ? loaderBottomText : '...' }} />\r\n          </Typography>\r\n          <Skeleton variant=\"rounded\" width={210} height={60} />\r\n          </Stack>\r\n      </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import axios from 'axios';\r\nimport {\r\n    Multicall\r\n  } from 'ethereum-multicall';\r\n\r\nimport { erc20Abi, lockerContractAbi, lockerAddress } from \"./constants\";\r\nimport erc721Abi from \"./erc721_abi.json\";\r\nimport Web3 from \"web3\";\r\nimport dexscreener from 'dexscreener-api';\r\nimport { walletAddress } from './redux/reducers';\r\n\r\nimport { provider, explorer, serverApi, dexscreenerUrl_ } from \"./web3.js\";\r\n\r\nconst apiKey = 'SvMhtTsmQ239NmpwWjnnLWXtag5Jt8wYp7NF8F3Tear1QSaDRl9gnM34JZVXdLFV';\r\nconst apiConfig = {\r\n    headers: {\r\n        'x-api-key': apiKey\r\n    }\r\n}\r\nconst serverUrl = 'https://deep-index.moralis.io/api/v2';\r\n\r\nexport const getTokenPrice = async function (_chain, _tokenAddress) {\r\n    let price;\r\n    try {\r\n        const pairsResponse = await dexscreener.getPairInformationByChain(_chain, _tokenAddress); console.log(\"pairsResponse: \",pairsResponse);\r\n        price = 0;\r\n    } catch (e) {\r\n        price = 0;\r\n        {/*\r\n            *   // Get pair information by chain\r\n            *   // // Get pairs matching base token address\r\n            *   // const tokensResponse = await getPairsMatchingBaseTokenAddress(\"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\");\r\n            *   // // Search for pairs matching query\r\n            *   // const searchResponse = await searchPairsMatchingQuery(\"WBNB USDC\");\r\n            *   // await axios.get(`${serverUrl}/erc20/${_tokenAddress}/price?chain=${_chain}`, apiConfig);\r\n        */}\r\n    }\r\n    return price && price.data;\r\n}\r\nexport const getERC20Metadata = async function (provider, _chain, _tokenAddress, address) {\r\n    console.log(\"getERC20Metadata: \",_chain, _tokenAddress);\r\n    let result; let decimals; let symbol; let name; let balanceOf;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(await erc20Abi, _tokenAddress);\r\n        decimals = await contract.methods[\"decimals\"]().call();\r\n        symbol = await contract.methods[\"symbol\"]().call();\r\n        balanceOf = await contract.methods[\"balanceOf\"](address).call();\r\n        name = await contract.methods[\"name\"]().call();\r\n        result = [{\r\n            \"balanceOf\":parseFloat(balanceOf),\r\n            \"balance\":parseFloat(balanceOf),\r\n            \"userBalance\":parseFloat(balanceOf),\r\n            \"decimals\":parseFloat(decimals),\r\n            \"symbol\":symbol,\r\n            \"tokenTitle\":name,\r\n            \"name\":name\r\n        }]; \r\n    } catch(e) {\r\n        console.log(\"booting the backup\");\r\n        try {\r\n            let web3 = new Web3(provider);\r\n            let contract = new web3.eth.Contract(await erc20Abi, _tokenAddress[0]);\r\n            decimals = await contract.methods[\"decimals\"]().call();\r\n            symbol = await contract.methods[\"symbol\"]().call();\r\n            balanceOf = await contract.methods[\"balanceOf\"](address).call();\r\n            name = await contract.methods[\"name\"]().call();\r\n            result = [{\r\n                \"balanceOf\":parseFloat(balanceOf),\r\n                \"balance\":parseFloat(balanceOf),\r\n                \"userBalance\":parseFloat(balanceOf),\r\n                \"decimals\":parseFloat(decimals),\r\n                \"symbol\":symbol,\r\n                \"tokenTitle\":name,\r\n                \"name\":name\r\n            }]; \r\n        } catch(e) {\r\n            console.log(e);\r\n        } finally {\r\n            console.log(\"result: \",result);\r\n            // eslint-disable-next-line\r\n            return result;\r\n        }\r\n    } finally {\r\n        console.log(\"result: \",result);\r\n        // eslint-disable-next-line\r\n        return result;\r\n    };\r\n}\r\nexport const getTokenMetadata = async function (_chain, _tokenAddress) {\r\n        console.log(\"getTokenMetadata: \",_chain, _tokenAddress);\r\n    // replace moralis\r\n    // 1) call() to contract => BASE_URI \r\n    // 2) call() to contract => TOKEN_URI||TOKEN_ID \r\n    // = async (provider, id, account, network) => {\r\n    let result; let decimals; let symbol; let name;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        // let ERC721_contract = new web3.eth.Contract(erc721Abi, _tokenAddress);\r\n        let contract = new web3.eth.Contract(erc20Abi, _tokenAddress);\r\n        decimals = await contract.methods[\"decimals\"]().call();\r\n        symbol = await contract.methods[\"symbol\"]().call();\r\n        name = await contract.methods[\"name\"]().call();\r\n        result = {\r\n            \"decimals\":decimals,\r\n            \"symbol\":symbol,\r\n            \"name\":name\r\n        };\r\n        console.log(\"result: \",result);\r\n        return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\nexport const getMyLockers = async function (account, network) {\r\n    console.log(\"getMyLockers: \",account, network);\r\n    let result; let _my_locks;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc20Abi, lockerAddress[network]);\r\n        _my_locks = await contract.methods[\"_my_locks\"](account).call();\r\n        let _my_lockers = [];\r\n        for(let m = 0; m < _my_locks.length; m++) {\r\n            _my_lockers.push(_my_locks[m]);\r\n        };\r\n        let i = 0;\r\n        while(i<_my_lockers.length) {\r\n            if(i==_my_lockers.length-1) {\r\n                break;\r\n            } else {\r\n                i++;\r\n            };\r\n        };\r\n        _my_locks = await contract.methods[\"_my_locks\"](account).call();\r\n        result = {\r\n            \"_my_locks\":_my_locks\r\n        };\r\n        console.log(\"result: \",result);\r\n        return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\nexport const getNFTTokenMetadata = async function (_chain, _tokenAddress) {\r\n        console.log(\"getTokenMetadata: \",_chain, _tokenAddress);\r\n    // replace moralis\r\n    // 1) call() to contract => BASE_URI \r\n    // 2) call() to contract => TOKEN_URI||TOKEN_ID \r\n    // = async (provider, id, account, network) => {\r\n    let result;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc721Abi, _tokenAddress);\r\n        result = await contract.methods[\"tokenURI\"](1).call();\r\n        console.log(\"result: \",result);\r\n        return result.status;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const tokenMetadata = await axios.get(`${serverUrl}/erc20/metadata?chain=${_chain}&addresses=${_tokenAddress}`, apiConfig);\r\n}\r\n\r\nexport const getTokenBalance = async function (provider, _chain, _tokenAddress, _walletAddress) {\r\n        console.log(\"getTokenBalance: \",_chain, _tokenAddress, _walletAddress);\r\n    // replace moralis\r\n    // call() to explorer => get_balance()\r\n    let result;\r\n    try {\r\n        let web3 = new Web3(provider);\r\n        let contract = new web3.eth.Contract(erc20Abi, _tokenAddress);\r\n        result = await contract.methods[\"balanceOf\"](_walletAddress).call();\r\n        console.log(\"result: \",result);\r\n        return result.status;\r\n    } catch(e) {\r\n        console.log(e);\r\n    };\r\n    // const balances = await axios.get(`${serverUrl}/${_walletAddress}/erc20?chain=${_chain}&token_addresses=${_tokenAddress}`, apiConfig);\r\n    // return balances.data;\r\n}\r\n\r\nexport const runContractFunction = async function (_chain, _contractAddress, _functionName, _abi, _params) {\r\n        console.log(\"runContractFunction: \",_chain, _contractAddress, _functionName, _abi, _params);\r\n    // replace moralis\r\n    // injected web3 via ethersJS||web3.js\r\n    let result;\r\n    try {\r\n        // result = await axios.post(`${serverUrl}/${_contractAddress}/function?chain=${_chain}&function_name=${_functionName}`, {\r\n        //     \"abi\": _abi,\r\n        //     \"params\": _params\r\n        // }, apiConfig);\r\n    } catch (e) {\r\n        result = null;\r\n    }\r\n    return result ? result.data : null;\r\n}\r\n\r\nexport const getCurrentFee = async function (_chain, _tokenAddress, _walletAddress) {\r\n    const dynamicFeeAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getDynamicFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    if (await isExcludedFromFee(_chain, _tokenAddress, _walletAddress)) return 0;\r\n    const dynamicFee = await runContractFunction(_chain, _tokenAddress, 'getDynamicFee', dynamicFeeAbi, {from:_walletAddress});\r\n    return dynamicFee;\r\n}\r\n\r\nexport const isExcludedFromFee = async function (_chain, _tokenAddress, _walletAddress) {\r\n    const isExcludedFromFeeAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    return await runContractFunction(_chain, _tokenAddress, 'isExcludedFromFee', isExcludedFromFeeAbi, {account:_walletAddress});\r\n}\r\n\r\nexport const getCommonFee = async function (_chain, _tokenAddress) {\r\n    const liquidityAndMarketingFeeAbi = [{\"inputs\":[],\"name\":\"_liquidityAndMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const taxFeeAbi = [{\"inputs\":[],\"name\":\"_taxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    let commonFee = 0;\r\n    await Promise.all([\r\n        runContractFunction(_chain, _tokenAddress, '_liquidityAndMarketingFee', liquidityAndMarketingFeeAbi, {}),\r\n        runContractFunction(_chain, _tokenAddress, '_taxFee', taxFeeAbi, {})\r\n    ]).then(results => results.map(each => commonFee += Number(each)));\r\n    return commonFee;\r\n}\r\n\r\nexport const burntAndLeftTokenPercent = async function (_chain, _tokenAddress) {\r\n    const burntVsCirculatingSupplyAbi = [{\"inputs\":[],\"name\":\"burntVsCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burnt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"circulating\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const data = await runContractFunction(_chain, _tokenAddress, 'burntVsCirculatingSupply', burntVsCirculatingSupplyAbi);\r\n    return {burnt: Number(data[0]), left: Number(data[1]), leftPercent: data[1] / (Number(data[0]) + Number(data[1])) * 100};\r\n}\r\n\r\nexport const totalFees = async function (_chain, _tokenAddress) {\r\n    const totalFeesAbi = [{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}];\r\n    const data = await runContractFunction(_chain, _tokenAddress, 'totalFees', totalFeesAbi);\r\n    return data;\r\n}\r\n\r\nexport const getTransactions = async function (_chain, _walletAddress) {\r\n    const transactions = await axios.get(`${serverUrl}/${_walletAddress}/erc20/transfers?chain=${_chain}&offset=0&oder=desc`, apiConfig);\r\n    return transactions.data;\r\n}\r\n\r\nexport const getLogsByAddress = async function (_chain, _tokenAddress) {\r\n    // replace moralis\r\n    // enable param *(topic_hash) { user supplied topic hash }\r\n    // add back (events) fn() from iStack tests\r\n    let offset = 0;\r\n    const response = await axios.get(`${serverUrl}/${_tokenAddress}/logs?chain=${_chain}&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&offset=${offset}&oder=desc`, apiConfig);\r\n    let logs = response.data.result;\r\n    const total = response.data.total;\r\n    const pages = Math.ceil(total / 500);\r\n    let page = 1;\r\n    let getLogFunctions = [];\r\n    while (page < pages) {\r\n        offset = page * 500;\r\n        getLogFunctions.push(axios.get(`${serverUrl}/${_tokenAddress}/logs?chain=${_chain}&topic0=0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef&offset=${offset}&oder=desc`, apiConfig));\r\n        page++;\r\n    }\r\n    if (getLogFunctions.length) {\r\n        await Promise.all(getLogFunctions).then(results => {\r\n            results.map(each => {\r\n                logs = logs.concat(each.data.result);\r\n            })\r\n        })\r\n    }\r\n    return logs;\r\n}\r\n\r\nfunction getAddress(topic) {\r\n    if (topic === null || topic === '') return '';\r\n    return `0x${topic.substring(topic.length - 40)}`;\r\n}\r\n\r\nfunction filterLogs(logs, _walletAddress) {\r\n    return logs.filter(each => getAddress(each.topic1) === _walletAddress.toLowerCase() || getAddress(each.topic2) === _walletAddress.toLowerCase());\r\n}\r\n\r\nfunction getValue(topic) {\r\n    return parseInt(topic, 16);\r\n}\r\n\r\nasync function calculateBuySell(logs, _chain, _tokenAddress, _walletAddress) {\r\n    let buy = 0, sell = 0, isFee = true;\r\n    if (await isExcludedFromFee(_chain, _tokenAddress, _walletAddress)) isFee = false;\r\n    logs.map(each => {\r\n        if (getAddress(each.topic1) === _walletAddress.toLowerCase()) {\r\n            if (isFee) {\r\n                sell += getValue(each.data) / 97 * 100;\r\n            } else {\r\n                sell += getValue(each.data);\r\n            }\r\n        } else buy += getValue(each.data);\r\n    })\r\n    let result = {buy: buy, sell: sell};\r\n    return result;\r\n}\r\n\r\nexport const walletExchange = async function(_chain, _tokenAddress, _walletAddress) {\r\n    let logs;\r\n    await getLogsByAddress(_chain, _tokenAddress).then(data=> {\r\n        logs = filterLogs(data, _walletAddress);\r\n    })\r\n    return await calculateBuySell(logs, _chain, _tokenAddress, _walletAddress);\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { BigNumber } from 'bignumber.js';\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { ethers } from \"ethers\";\r\n// ** Import Material UI Components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport Modal from '@mui/material/Modal';\r\nimport { RadioGroup } from \"@mui/material\";\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Search from '@mui/icons-material/Search';\r\nimport { Snackbar } from \"@mui/material\";\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport { TextField, Table, TableHead, TableBody, TableRow, TableCell, TableContainer, Paper, Box, IconButton } from \"@mui/material\";\r\nimport Link from \"@mui/material/Link\";\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport { Tooltip } from \"@mui/material\";\r\nimport useStyles from \"../assets/styles\";\r\nimport { TOKENDATA, USERBALANCE, TOKENLISTS } from \"../redux/constants\";\r\nimport { CHAINDATA, networks_data, explorer_, rpc_, icons_, network_, lockerAddress, network_symbols, network_decimals, network_hex_to_dec, PROJECTNAME, websiteURI, ui_friendly_networks } from \"../constants\";\r\nimport { getTokenMetadata, getERC20Metadata } from \"../api\";\r\nimport { toggleDrawer } from '../components/Header';\r\nimport Loader from '../components/Loader';\r\nimport { alterLoaderText } from '../components/Loader';\r\nimport { deposit, approve, allowance, getTokenBalance, getERC20balance, getERC20allowance, getData, explorer, updateProfile, getEtherBalance, w3, getETHtoChecksum, _toBN } from \"../web3\"\r\nexport const _getBN = async (lockAmount, tokenDecimals) => {\r\n    // returns a BigNumber\r\n    return await ethers.utils.parseUnits(lockAmount.toString(), tokenDecimals);\r\n};\r\nexport const _getUIfmt = async (lockAmount, tokenDecimals) => {\r\n    // returns a BigNumber\r\n    return await ethers.utils.formatUnits(lockAmount.toString(), tokenDecimals);\r\n};\r\nconst Dashboard = (props) => {\r\n\r\n    const { account, connector, chainId, active } = useWeb3React();\r\n    const { lockId, chainName } = props.match.params;\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [lockerListEnabled, setLockerListEnabled] = useState(false);\r\n    const [snackbar, setSnackbar] = React.useState(false);\r\n    const [loaderText, setLoaderText] = React.useState(\"\");\r\n    const [network, setNetwork] = useState(\"\");\r\n    const [modalTitle, setModalTitle] = useState(\"\");\r\n    const [modalDes, setModalDes] = useState(\"\");\r\n    const [tokenContract, setTokenContract] = useState(\"\");\r\n    const [holder, setHolder] = useState(\"\");\r\n    const [subMethod, setSubMethod] = useState(\"Project Tokens\");\r\n    const [lockAmount, setLockAmount] = useState(0);\r\n    const [tokenDecimals, setTokenDecimals] = useState(0);\r\n    const [tokenSymbol, setTokenSymbol] = useState(\"\");\r\n    const [tokenName, setTokenName] = useState(\"\");\r\n    const [etherBalance, setEtherBalance] = useState(0);\r\n    const [tokenBalance, setTokenBalance] = useState(0);\r\n    const [tokenAllowance, setTokenAllowance] = useState(0);\r\n    const [withdrawDate, setWithdrawDate] = useState(undefined);\r\n    const [dateUseful, setDateUseful] = useState(false);\r\n    const [addressDemand, setAddressDemand] = useState(false);\r\n    const [isAllowed, setIsAllowed] = useState(0); {\r\n        /*\r\n                // 0: checking, 1: not allowed, 2: allowed\r\n            */\r\n    }\r\n    const [lockAmountMax, setLockAmountMax] = useState(false);\r\n    const maxSteps = 4;\r\n    const theme = useTheme();\r\n    const classes = useStyles.pools();\r\n    const mobileClasses = useStyles.mobile();\r\n    const dashboardClasses = useStyles.dashboard();\r\n    const isMobile = useMediaQuery(\"(max-width:600px)\");\r\n    const userBalance = useSelector(state => state.userBalance);\r\n    const token = useSelector(state => state.tokenData);\r\n    const data = useSelector(state => state.tokenLists);\r\n    const test_data = useSelector(state => state);\r\n    console.log(\"test_data: \", test_data, test_data.tokenData);\r\n    const dispatch = useDispatch();\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #fff',\r\n        borderRadius: '10px',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n\r\n    const [values, setValues] = React.useState({\r\n        tokenAddress: \"\",\r\n    });\r\n\r\n    const selectToken = async () => {\r\n        console.log(\"activeStep: \", activeStep);\r\n    };\r\n    const checkAllowance = async (token, account, network) => {\r\n        allowance(token, account, network).then(results => {\r\n            setTokenAllowance(results);\r\n            console.log(\"allowance: \", results, tokenAllowance);\r\n            return results;\r\n        });\r\n    };\r\n    const checkEtherBalance = async (provider, account) => {\r\n        getEtherBalance(provider, account, network).then(async (ebf) => {\r\n            console.log(\"ethereumBalance: \", ebf[0], ebf[1], ebf[2]);\r\n            fetchEtherBalance(ebf[2]);\r\n        });\r\n    };\r\n    const handleNext = async () => {\r\n        if (account) {\r\n            const provider = window.ethereum;\r\n            checkEtherBalance(provider, account);\r\n            const currentNetworkData = networkData.filter((each) => each.name === network);\r\n            try {\r\n                let NETWORK = chainId == network_hex_to_dec[currentNetworkData[0].chainData.chainId] ? true : false;\r\n                console.log(\"NETWORK: \", NETWORK, \"\\n existing: \", chainId, \"\\n requested \", network_hex_to_dec[currentNetworkData[0].chainData.chainId]);\r\n                if (NETWORK) {\r\n                    //\r\n                    console.log(\"You are already on the proper network:  \", network);\r\n                } else {\r\n                    await provider.request({\r\n                        method: 'wallet_switchEthereumChain',\r\n                        params: [{ chainId: currentNetworkData[0].chainData.chainId }],\r\n                    });\r\n                    console.log(\"You have successfully switched to \", network);\r\n                }\r\n                if (activeStep == 0) {\r\n                    if (account === undefined) {\r\n                        setModalTitle(\"Please connect Wallet\");\r\n                        setModalDes(`Before you can create a lock on ${network}, you must connect your wallet to ${network} network on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                        handleOpen();\r\n                    } else {\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    }\r\n                } else if (activeStep >= 2) {\r\n                    if (addressDemand && tokenContract == undefined || addressDemand && tokenContract == \"\") {\r\n                        setModalTitle(\"Please select Token\");\r\n                        setModalDes(`Before you can create a lock on ${network}, you must select token on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                        handleOpen();\r\n                    } else {\r\n                        console.log(activeStep);\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    }\r\n                } else {\r\n                    console.log(\"activeStep: \", activeStep);\r\n                    if (addressDemand && tokenContract == undefined || addressDemand && tokenContract == \"\") {\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                        // \r\n                    } else {\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 2);\r\n                    };\r\n                }\r\n            } catch (switchError) {\r\n                {\r\n                    /*\r\n                    // This error code indicates that the chain has not been added to MetaMask.\r\n                    */\r\n                }\r\n                try {\r\n                    const params_network_add = {\r\n                        chainId: currentNetworkData[0].chainData.chainId,\r\n                        rpcUrls: [rpc_[currentNetworkData[0].chainData.chainId]],\r\n                        chainName: network_[currentNetworkData[0].chainData.chainId],\r\n                        nativeCurrency: { name: network_symbols[currentNetworkData[0].chainData.chainId], decimals: network_decimals[currentNetworkData[0].chainData.chainId], symbol: network_symbols[currentNetworkData[0].chainData.chainId] },\r\n                        blockExplorerUrls: [explorer_[currentNetworkData[0].chainData.chainId]],\r\n                        iconUrls: [icons_[currentNetworkData[0].chainData.chainId]]\r\n                    };\r\n                    console.log(\"params_network_add: \", switchError.code, params_network_add);\r\n                    if (switchError.code === 4902) {\r\n                        console.log(\"This network is not available in your metamask, please add it\");\r\n                        let provider = await connector.getProvider();\r\n                        console.log(\"Switch Request has rejected:\", \"\\n network: \", network, \"\\n chainId:\", chainId);\r\n                        console.log(\"chainId: \", chainId);\r\n                        provider.request({\r\n                            method: 'wallet_addEthereumChain',\r\n                            params: [{ ...params_network_add }]\r\n                        }).catch((error) => {\r\n                            console.log(\"provider_err: \", error);\r\n                        });\r\n                    } else if (switchError.code === 4001) {\r\n                        console.log(\"Switch Request has rejected:\", \"\\n network: \", network, \"\\n chainId:\", chainId);\r\n                        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                    } else if (switchError.code === 4200) {\r\n                        console.log(\"You have succefully switched to \", network);\r\n                        if (activeStep == 0) {\r\n                            if (account === undefined) {\r\n                                setModalTitle(\"Please connect Wallet\");\r\n                                setModalDes(`Before you can create a lock on ${network}, you must connect your wallet to ${network} network on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                                handleOpen();\r\n                            } else {\r\n                                setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                            }\r\n                        } else if (activeStep == 2) {\r\n                            if (addressDemand && tokenContract == undefined || addressDemand && tokenContract == \"\") {\r\n                                setModalTitle(\"Please select Token\");\r\n                                setModalDes(`Before you can create a lock on ${network}, you must select token on your wallet. Use testnet for test transactions, and mainnet for real token locks.`);\r\n                                handleOpen();\r\n                            } else {\r\n                                console.log(activeStep);\r\n                                setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                            }\r\n                        } else {\r\n                            if (addressDemand && tokenContract == undefined || addressDemand && tokenContract == \"\") {\r\n                                setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                                // \r\n                            } else {\r\n                                setActiveStep((prevActiveStep) => prevActiveStep + 2);\r\n                            };\r\n                        };\r\n                    };\r\n                } catch (e) {\r\n                    console.log(\"err: \", e);\r\n                };\r\n            };\r\n        };\r\n    };\r\n\r\n    useEffect(async () => {\r\n        setLoaderText(\" ... \");\r\n        alterLoaderText(loaderText);\r\n        let able = false;\r\n        if (!network) {\r\n            return () => {\r\n                able = false;\r\n            };\r\n        } else {\r\n            if (!account) {\r\n                return () => {\r\n                    toggleDrawer();\r\n                    able = true;\r\n                };\r\n            } else {\r\n                return () => {\r\n                    able = false;\r\n                };\r\n            }\r\n        };\r\n    }, [account, network]);\r\n\r\n    useEffect(async () => {\r\n        let able = false;\r\n        if (!account) {\r\n                setIsAllowed(0);\r\n                alterLoaderText(\"Connect Wallet\");\r\n                able = false;\r\n                 return able;\r\n        } else if (account && !network && !tokenContract) {\r\n                able = false;\r\n                setIsAllowed(0);\r\n                alterLoaderText(\"Select Network\");\r\n                return able;\r\n        } else if (account && network && !tokenContract) {\r\n                able = false;\r\n                setIsAllowed(0);\r\n                alterLoaderText(\"Make a selection\");\r\n                return able;\r\n        } else {\r\n            try {\r\n                let provider = await connector.getProvider();\r\n                console.log(\"ETHtoChecksum: \", await getETHtoChecksum(provider, tokenContract));\r\n                const tokenBalance = await getTokenBalance(provider, await getETHtoChecksum(provider, tokenContract), account, network);\r\n                const tokenBalanceFormatted = await ethers.utils.formatUnits(tokenBalance.toString(), tokenDecimals);\r\n                console.log(\"tokenBalance: \", tokenBalance, tokenBalanceFormatted);\r\n                // eslint-disable-next-line\r\n                window.alert(\"Token Found! Balance: \" + tokenBalanceFormatted);\r\n                dispatch({ type: USERBALANCE, payload: tokenBalance });\r\n            } catch (e) {\r\n                console.log(e);\r\n                window.alert(\"Token not found, please try again...\");\r\n            } finally {\r\n                if (!lockAmount) {\r\n                    window.alert(\"Awesome! Let's continue to create your iLocker smart contract...\");\r\n                } else {\r\n                    try {\r\n                        let provider = await connector.getProvider();\r\n                        console.log(\"ETHtoChecksum: \", await getETHtoChecksum(provider, tokenContract));\r\n                        const allowanceAmount = await getERC20allowance(provider, await getETHtoChecksum(provider, tokenContract), account, lockerAddress[network], network);\r\n                        const allowanceAmountFormatted = await ethers.utils.formatUnits(allowanceAmount.toString(), tokenDecimals);\r\n                        const lockAmountFormatted = (lockAmount).toFixed(2).toString();\r\n                        console.log(\"allowanceAmount/lockAmount: \", lockAmountFormatted, allowanceAmountFormatted, parseFloat(allowanceAmount), lockAmount * 10 ** tokenDecimals);\r\n                        console.log(parseFloat(allowanceAmountFormatted) >= parseFloat(lockAmountFormatted), parseFloat(allowanceAmount) >= parseFloat(lockAmount * 10 ** tokenDecimals));\r\n                        setTokenAllowance(allowanceAmount);\r\n                        if (parseFloat(allowanceAmountFormatted) >= parseFloat(lockAmountFormatted)) {\r\n                            setIsAllowed(2);\r\n                            console.log(\"approved: \", allowanceAmount);\r\n                        } else {\r\n                            setIsAllowed(1);\r\n                            console.log(\"!approved: \", allowanceAmount);\r\n                        };\r\n                    } catch (e) {\r\n                        console.log(e);\r\n                    };\r\n                };\r\n            };\r\n        };\r\n    }, [account, tokenContract, connector, network]);\r\n\r\n    const handleAllowance = async (e) => {\r\n        if (!account || !tokenContract) return;\r\n        setIsAllowed(0);\r\n        try {\r\n            let provider = await connector.getProvider();\r\n            const tokenBalance = await getERC20balance(provider, tokenContract, account, network);\r\n            console.log(\"tokenBalance: \", tokenBalance);\r\n            dispatch({ type: USERBALANCE, payload: tokenBalance });\r\n        } catch (e) {\r\n            console.log(e);\r\n        } finally {\r\n            if (!lockAmount) {\r\n                //\r\n            } else {\r\n                try {\r\n                    let provider = await connector.getProvider();\r\n                    const allowanceAmount = await getERC20allowance(provider, tokenContract, account, lockerAddress[network], network);\r\n                    console.log(\"allowanceAmount/lockAmount: \", parseFloat(allowanceAmount), lockAmount * 10 ** tokenDecimals, parseFloat(allowanceAmount) >= parseFloat(lockAmount * 10 ** tokenDecimals));\r\n                    setTokenAllowance(allowanceAmount);\r\n                    let allowanceAmountFormatted = await _getBN(allowanceAmount, tokenDecimals);\r\n                    let allowanceAmountFormatted_UI = await _getUIfmt(allowanceAmount, tokenDecimals);\r\n                    console.log(\"allowanceAmountFormatted: \", allowanceAmount, parseFloat(allowanceAmountFormatted).toFixed(0), parseFloat(allowanceAmountFormatted_UI).toFixed(0));\r\n                    if (parseFloat(allowanceAmount) < parseFloat(lockAmount * 10 ** tokenDecimals)) {\r\n                        setIsAllowed(1);\r\n                    } else {\r\n                        setIsAllowed(2);\r\n                    };\r\n                } catch (e) {\r\n                    console.log(e);\r\n                };\r\n            };\r\n        };\r\n    };\r\n    const handleChange = async (event) => {\r\n        setValues({ tokenAddress: event.target.value });\r\n        if (event.target.value.length == 42) {\r\n            const contract_address = event.target.value;\r\n            try {\r\n                let provider = await connector.getProvider();\r\n                console.log(\"ETHtoChecksum: \", await getETHtoChecksum(provider, contract_address));\r\n                const contractData = await getERC20Metadata(provider, CHAINDATA.find((item) => item.name == network).chain, await getETHtoChecksum(provider, contract_address), await getETHtoChecksum(provider, account));\r\n                let tokenData = contractData;\r\n                dispatch({\r\n                    type: TOKENDATA,\r\n                    payload: tokenData[0]\r\n                });\r\n                setTokenDecimals(parseFloat(JSON.parse(contractData[0][\"decimals\"])).toFixed(0));\r\n                setTokenBalance(parseFloat(JSON.parse(contractData[0][\"balanceOf\"])).toFixed(2));\r\n                setTokenSymbol(contractData[0][\"symbol\"].toString());\r\n                setTokenName(contractData[0][\"name\"].toString());\r\n            } catch (e) {\r\n                //\r\n                console.log(\"e: \", e);\r\n            };\r\n        } else {\r\n            window.alert(\"Token not found, please try again...\");\r\n        };\r\n    };\r\n\r\n    const handleClickSearch = () => {\r\n        setValues({\r\n            ...values,\r\n            showPassword: !values.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleStepChange = (step) => {\r\n        setActiveStep(step);\r\n    };\r\n\r\n    const fetchEtherBalance = (eb) => {\r\n        setEtherBalance(eb);\r\n    };\r\n\r\n    const selectLockAmountMax = () => {\r\n        const _amount = addressDemand ? (test_data.userBalance / Math.pow(10, tokenDecimals)).toFixed(2) : etherBalance;\r\n        setLockAmount(_amount);\r\n        console.log(\"_amount: \", lockAmount);\r\n        setLockAmountMax(true);\r\n    }\r\n\r\n    function handleLocker(e) {\r\n        setLockAmount(parseFloat(e.target.value));\r\n        setLockAmountMax(false);\r\n        handleAllowance(e);\r\n        console.log(\"_amount: \", lockAmount);\r\n    }\r\n    const handleLockAmount = (e) => {\r\n        console.log(\"e.target.value: \", e.target.value);\r\n        handleLocker(e);\r\n    };\r\n    const handleTokenDecimals = (e) => {\r\n        console.log(\"balance: \", test_data.userBalance / Math.pow(10, e.target.value));\r\n        setTokenDecimals(parseFloat(e.target.value).toFixed(0));\r\n    };\r\n    const handleLockToken = async (e) => {\r\n        async function nextMsg(ctr, lb, la) {\r\n            // eslint-disable-next-line\r\n            let string_to_add = lb == true ? \"there is no balance \" : \"there is a balance \";\r\n            // eslint-disable-next-line\r\n            string_to_add = la == true ? string_to_add + \"this wallet has a low iLocker allowance... \" : string_to_add + \"\";\r\n            let final_string = lb == true ? \"Transfer that Token to this wallet, \" : \"\";\r\n            final_string = la == true ? \"increase allowance on the next page, \" : \"\";\r\n            let provider = await connector.getProvider();\r\n            switch (ctr) {\r\n                case 0:\r\n                    break;\r\n                case 1:\r\n                    window.alert(\"Good new, bad news friends...\");\r\n                    nextCount(ctr, lb, la);\r\n                    break;\r\n                case 2:\r\n                    // eslint-disable-next-line\r\n                    window.alert(\"Token Found! \")\r\n                    nextCount(ctr, lb, la);\r\n                    break;\r\n                case 3:\r\n                    // eslint-disable-next-line\r\n                    if (la == true && lb == false) {\r\n                        window.alert(\"Savings Token Selected\");\r\n                        setTokenContract(await getETHtoChecksum(provider, document.getElementById(\"digital-asset-erc20-compatible-interchained-ilock\").value));\r\n                    } else if (la == false && lb == false) {\r\n                        window.alert(\"Savings Token Selected\");\r\n                        setTokenContract(await getETHtoChecksum(provider, document.getElementById(\"digital-asset-erc20-compatible-interchained-ilock\").value));\r\n                    } else if (la == true && lb == true) {\r\n                        window.alert(string_to_add);\r\n                    } else {\r\n                        window.alert(string_to_add);\r\n                    };\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        };\r\n        nextMsg(0);\r\n        async function nextCount(ctr, tb, ta) {\r\n            let count_lt = ctr > 0 ? ctr : 0;\r\n            let limit_lt = 3;\r\n            count_lt = count_lt > limit_lt ? 0 : count_lt += 1;\r\n            setTimeout(await nextMsg, 1024, count_lt, parseFloat(tb) > 0, parseFloat(ta) > 0);\r\n        };\r\n        try {\r\n            if (!network) {\r\n                window.alert(\"Hey there friends, Network was not detected... Are your connected to a Blockchain via Web3?\");\r\n                return false;\r\n            };\r\n            if (!account) {\r\n                window.alert(\"Hi friends, Web3 was not detected... Are you connected to a network?\");\r\n                return false;\r\n            };\r\n            let provider = await connector.getProvider();\r\n            console.log(\"ETHtoChecksum: \", await getETHtoChecksum(provider, document.getElementById(\"digital-asset-erc20-compatible-interchained-ilock\").value));\r\n            let tokenBalance = await getTokenBalance(provider, await getETHtoChecksum(provider, document.getElementById(\"digital-asset-erc20-compatible-interchained-ilock\").value), account, network);\r\n            const allowanceAmount = await getERC20allowance(provider, await getETHtoChecksum(provider, document.getElementById(\"digital-asset-erc20-compatible-interchained-ilock\").value), account, lockerAddress[network], network);\r\n            const allowanceAmountFormatted = await ethers.utils.formatUnits(allowanceAmount.toString(), tokenDecimals);\r\n            const tokenBalanceFormatted = await ethers.utils.formatUnits(tokenBalance.toString(), tokenDecimals);\r\n            const lockAmountFormatted = (lockAmount).toFixed(2).toString();\r\n            console.log(\"tokenBalance: \", tokenBalance, tokenBalanceFormatted, parseFloat(tokenBalance) > 0);\r\n            console.log(\"allowanceAmount/lockAmount: \", lockAmountFormatted, allowanceAmountFormatted, parseFloat(allowanceAmount), lockAmount * 10 ** tokenDecimals);\r\n            if (parseFloat(allowanceAmount) > 0) {\r\n                window.alert(\"Savings Token Selected\");\r\n                setTokenContract(await getETHtoChecksum(provider, document.getElementById(\"digital-asset-erc20-compatible-interchained-ilock\").value));\r\n            } else {\r\n                await nextCount(0, parseFloat(tokenBalanceFormatted), parseFloat(allowanceAmountFormatted));\r\n            };\r\n        } catch (e) {\r\n            console.log(\"e: \", e);\r\n            window.alert(\"Valued member, Web3 could not detect this token... Please try another token.\");\r\n            //\r\n        };\r\n    };\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const handleSnackbarClose = () => setSnackbar(false);\r\n    const handleSnackbarOpen = () => setSnackbar(true);\r\n    const handleHolder = async (e) => {\r\n        setHolder(e.target.value);\r\n        console.log(\"holder: \", holder);\r\n    };\r\n\r\n    const handleDate = (value) => {\r\n        const currentDate = new Date();\r\n        console.log(\"DATETIME: \", value, value > currentDate)\r\n        if (value > currentDate) {\r\n            setDateUseful(true);\r\n            setWithdrawDate(value);\r\n        } else {\r\n            setDateUseful(false);\r\n        };\r\n    };\r\n\r\n    const showLockup = async (network, lockId) => {\r\n        props.history.push(`/lockers/${network.toLowerCase()}/${lockId}`);\r\n    };\r\n\r\n    const depositToken = async (e) => {\r\n        try {\r\n            let tokenAmount;\r\n            tokenAmount = lockAmount;\r\n            let isEth = false;\r\n            let unlockDate = withdrawDate;\r\n            if (addressDemand == true) {\r\n                isEth = false;\r\n            } else {\r\n                isEth = true;\r\n            };\r\n            if (holder == undefined) {\r\n                console.log(\"holder unset! Defaulting \", holder);\r\n                setHolder(account);\r\n            };\r\n            let amountFormatted = await _getBN(tokenAmount, tokenDecimals);\r\n            let amountFormatted_UI = await _getUIfmt(amountFormatted, tokenDecimals);\r\n            console.log(\"amountFormatted_UI: \", parseFloat(amountFormatted_UI).toFixed(0));\r\n            console.log(\"tokenBalance_UI: \", tokenBalance / 10 ** tokenDecimals);\r\n            console.log(\"etherBalance_UI: \", etherBalance, etherBalance / 10 ** tokenDecimals);\r\n            console.log(\"amountFormatted: \", amountFormatted);\r\n            const balanceChecker = isEth && etherBalance >= parseFloat(amountFormatted_UI).toFixed(0) ? true : tokenBalance / 10 ** tokenDecimals >= parseFloat(amountFormatted_UI).toFixed(0) ? true : false;\r\n            console.log(\"balance:\", balanceChecker);\r\n            if (balanceChecker == true) {\r\n                console.log(\"depositToken: \", amountFormatted, e.target.value, addressDemand, tokenAmount, unlockDate, account, holder, network);\r\n                let unset = true;\r\n                let allSet = false;\r\n                let gasLimit;\r\n                let depositAmount;\r\n                let depositNetwork;\r\n                let depositHolder;\r\n                let depositCreator;\r\n                if (unset) {\r\n                    depositAmount = tokenAmount;\r\n                    depositNetwork = network;\r\n                    depositHolder = holder;\r\n                    depositCreator = account;\r\n                    unset = false;\r\n                    allSet = true;\r\n                };\r\n                if (allSet) {\r\n                    let provider = await connector.getProvider();\r\n                    w3(provider, network).then(async (W3) => {\r\n                        let block = await W3.eth.getBlock(\"latest\");\r\n                        console.log(\"(w3) block: \", block);\r\n                        console.log(\"(w3) gasLimit: \", block.gasLimit);\r\n                        console.log(\"(ERC-20) tokenSymbol: \", tokenSymbol);\r\n                        gasLimit = block.gasLimit;\r\n                        deposit(provider, tokenSymbol, isEth, tokenContract, amountFormatted.toString(), unlockDate, depositCreator, depositHolder, depositNetwork, gasLimit).then(async (results) => {\r\n                            setWithdrawDate(undefined);\r\n                            setDateUseful(false);\r\n                            try {\r\n                                console.log(\"events: (Transfer)\", parseFloat(results[\"events\"][\"Transfer\"][\"returnValues\"].tokenId));\r\n                                console.log(\"events (LockCreated): \", parseFloat(results[\"events\"][\"LockCreated\"][\"returnValues\"].lockId));\r\n                                showLockup(network, parseFloat(results[\"events\"][\"Transfer\"][\"returnValues\"].tokenId));\r\n                            } catch (e) {\r\n                                dispatch({\r\n                                    type: TOKENDATA,\r\n                                    payload: {}\r\n                                })\r\n                                setActiveStep(0);\r\n                                window.alert(\"Transaction error, check block explorer for more intel.\");\r\n                                console.log(\"err: \", e);\r\n                            } finally {\r\n                                const newData = await getData(provider, account, network);\r\n                                dispatch({ type: TOKENLISTS, payload: newData });\r\n                            };\r\n                        });\r\n                    });\r\n                };\r\n            } else {\r\n                try {\r\n                    window.alert(\"ERC20 insufficient balance. Reduce amount or fund balance to process specified token amount.\");\r\n                    document.getElementById(\"iLockerDeploy\").blur();\r\n                    document.getElementById(\"standard-number-amount\").focus({ focusVisible: true });\r\n                    const restore = async () => {\r\n                        document.getElementById(\"iLockerDeploy\").focus();\r\n                    };\r\n                    setTimeout(restore, 7777);\r\n                } catch (e) {\r\n                    console.log(\"err: \", e);\r\n                };\r\n            };\r\n        } catch (e) {\r\n            console.log(e);\r\n        };\r\n    };\r\n\r\n    const handleNativeTokenMismatch = async (e) => {\r\n        if (e !== \"Project Tokens\") {\r\n            console.log(\"NATIVE: \", e);\r\n            setAddressDemand(false);\r\n        } else {\r\n            console.log(\"ERC-20: \", e);\r\n            setAddressDemand(true);\r\n        };\r\n    };\r\n\r\n    const approveToken = async () => {\r\n        let ap = lockAmount * 10 ** tokenDecimals;\r\n        let amountFormatted = await _getBN(lockAmount, tokenDecimals);\r\n        console.log(\"approving: \", lockAmount, tokenDecimals, ap, \"\\n \", amountFormatted, amountFormatted.toString());\r\n        let provider = await connector.getProvider();\r\n        approve(provider, tokenContract, account, amountFormatted, network).then((status) => {\r\n            if (status) setIsAllowed(2);\r\n        });\r\n    };\r\n\r\n    const networkData = networks_data;\r\n\r\n    const changeNetwork = (name) => {\r\n        setNetwork(name);\r\n    };\r\n\r\n    const Row = (props) => {\r\n        const { index, row } = props;\r\n        let nextUnlock, lockedTokenAmount = 0,\r\n            lockedLiquidity = false;\r\n        const currentTime = Date.now();\r\n        row.data.map(each => {\r\n            if (each.timestamp > currentTime / 1000) {\r\n                if (!nextUnlock) nextUnlock = each.timestamp;\r\n                else if (nextUnlock > each.timestamp) nextUnlock = each.timestamp;\r\n            }\r\n            if (!each.isWithdrawn && !each.isLiquidity) lockedTokenAmount += each.amount / Math.pow(10, each.decimals);\r\n            if (!each.isWithdrawn && each.isLiquidity) lockedLiquidity = true;\r\n        })\r\n\r\n        return ( <\r\n            >\r\n            <TableRow\r\n                sx={{ '& > *': { borderBottom: 'unset' } }}\r\n                > \r\n                    <TableCell>\r\n                        {index + 1}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        <span style={{cursor: \"pointer\"}} onClick={()=>showLockup(row.token.address,index + 1)}>{row.token.symbol}</span>\r\n                        <CopyToClipboard text={row.token.address} onCopy={()=>handleSnackbarOpen(true)}>\r\n                            <Tooltip title=\"copy\">\r\n                                <IconButton>\r\n                                    <ContentCopyIcon/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </CopyToClipboard>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{lockedTokenAmount.toFixed(2)}</TableCell>\r\n                    <TableCell align=\"right\">{lockedLiquidity && <CheckIcon />}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                        {nextUnlock ? new Date(nextUnlock).toDateString() : ''}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                        <Button variant=\"contained\" color=\"secondary\" style={{width: '100%'}}  onClick={() => showLockup(row.token.address,index + 1)}>View</Button>\r\n                    </TableCell>\r\n                </TableRow> {\r\n                /* <TableRow>\r\n                                    <TableCell colSpan={2}></TableCell>\r\n                                    <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\r\n                                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                                        <Box sx={{ margin: 1 }}>\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                                History\r\n                                            </Typography>\r\n                                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell>Withdrawable Date</TableCell>\r\n                                                        <TableCell align=\"right\">Amount</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                {row.vesting.map((vestingRow) => (\r\n                                                    <TableRow key={vestingRow[0]}>\r\n                                                        <TableCell component=\"th\" scope=\"row\">\r\n                                                            {new Date(vestingRow[0] * 1000).toDateString()}\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"right\">{(vestingRow[1] / Math.pow(10, row.decimals)).toFixed(2)}</TableCell>\r\n                                                    </TableRow>\r\n                                                ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </Box>\r\n                                    </Collapse>\r\n                                    </TableCell>\r\n                                </TableRow> */\r\n            } <\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <Container className={classes.root} maxWidth=\"lg\" style={{paddingLeft:20, paddingRight:20}}>\r\n            <Box className={classes.info}>\r\n                <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\" >\r\n                    <Grid className={isMobile ? `${mobileClasses.root} grid text-center`  : \"grid text-center\"} style={{marginTop:40}} item xs={12} sm={12} md={6} >\r\n                        <div style={{maxWidth:400, display:'inline-block', textAlign:'left'}}>\r\n                            <h1>Create your own custom TimeLock instantly.</h1>\r\n                            <p>All digital assets are locked into your very own TimeLock enabled smart contract which has been specially engineered by the top devs and tested to serve this purpose. TimeLock certified digital assets can only be withdrawn after the preset time lock expires.</p>\r\n                            <Link\r\n                                href={`${websiteURI}`}\r\n                                target=\"_blank\"\r\n                                color=\"blue\"\r\n                                underline=\"none\"\r\n                                className={classes.button}\r\n                            ><Button variant=\"contained\">Powered by {`${PROJECTNAME}`}</Button></Link>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid className={isMobile ? `${mobileClasses.root} grid`  : \"grid\"} style={{marginTop:40}} item xs={12} sm={12} md={6} >\r\n                        <Card className=\"card\">\r\n                            <CardHeader\r\n                                className={dashboardClasses.cardHeader}\r\n                                title=\"Create New iLock\"\r\n                            />\r\n                            <CardContent >\r\n                                <img src=\"/lock.png\" />\r\n                                <RadioGroup\r\n                                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                    defaultValue=\"female\"\r\n                                    name=\"radio-buttons-group\"\r\n                                >\r\n                                    <SwipeableViews\r\n                                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                                        index={activeStep}\r\n                                        onChangeIndex={handleStepChange}\r\n                                    >\r\n                                       \r\n                                        <div key={1} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <p style={{textAlign:'center'}} color=\"textSecondary\">\r\n                                                Choose the blockchain network.\r\n                                            </p>\r\n                                            {\r\n                                                networkData ? networkData.map((item)=>\r\n                                                <Grid\r\n                                                    className={classes.networkSelector}\r\n                                                    container\r\n                                                    direction=\"row\"\r\n                                                    justifyContent=\"space-evenly\"\r\n                                                    alignItems=\"center\"\r\n                                                    style={{padding:\"10px 0px\", border:item.name==network?\"1px solid #fff\":\"1px solid transparent\", borderRadius:'5px'}}\r\n                                                    key={item.name}\r\n                                                    onClick = {()=>changeNetwork(item.name)}\r\n                                                >\r\n                                                    <Grid item  xs={10} sm={11} md={11}>\r\n                                                        <Grid \r\n                                                            container\r\n                                                            direction=\"row\"\r\n                                                            alignItems=\"center\"\r\n                                                        >\r\n                                                            <Grid item className=\"text-center\" xs={3} sm={2} md={2}>\r\n                                                                <img className={dashboardClasses.networkImage} src={item.url} alt=\"network\" />\r\n                                                            </Grid>\r\n                                                            <Grid item   xs={9} sm={10} md={10}>\r\n                                                                <p  color=\"textSecondary\" className={dashboardClasses.networkTitle}>\r\n                                                                    {ui_friendly_networks[item.name]}\r\n                                                                </p>\r\n                                                                <p color=\"textSecondary\" className={dashboardClasses.networkDes}>\r\n                                                                    {item.subtitle}\r\n                                                                </p>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                    <Grid item  className=\"text-center\" xs={2} sm={1} md={1}>\r\n                                                        {item.name==network ? <div style={{width:\"20px\", height:'20px', borderRadius:\"10px\", backgroundColor:'#fff', display:'inline-block'}} />: <div style={{width:\"20px\", height:'20px', borderRadius:\"10px\", border:'1px solid #fff', display:'inline-block'}} />}\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                )\r\n                                            : <></> }\r\n                                        </div>\r\n                                        <div key={2} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <p style={{textAlign:'center'}} color=\"textSecondary\">\r\n                                                Select the type of token you would like to create a lock for.\r\n                                                You can create multiple locks with different settings for each one.\r\n                                            </p>\r\n                                            {\r\n                                                network !=\"\" && networkData.find((item)=>item.name==network).subData.map((each)=><Grid\r\n                                                className={classes.networkSelector}\r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-evenly\"\r\n                                                alignItems=\"center\"\r\n                                                style={{padding:\"10px 0px\", border:each.name==subMethod?\"1px solid #fff\":\"1px solid transparent\", borderRadius:'5px'}}\r\n                                                key={each.name}\r\n                                                onClick = {\r\n                                                    ()=>{\r\n                                                        setSubMethod(each.name)\r\n                                                        handleNativeTokenMismatch(each.name)\r\n                                                    }\r\n                                                }\r\n                                            >\r\n                                                <Grid item  xs={10} sm={11} md={11}>\r\n                                                    <Grid \r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        alignItems=\"center\"\r\n                                                    >\r\n                                                        <Grid item className=\"text-center\" xs={3} sm={2} md={2}>\r\n                                                            <img className={dashboardClasses.networkImage} src={each.url} alt=\"network\" />\r\n                                                        </Grid>\r\n                                                        <Grid item   xs={9} sm={10} md={10}>\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.networkTitle}>\r\n                                                                {each.name}\r\n                                                            </p>\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.networkDes}>\r\n                                                                {each.subTitle}\r\n                                                            </p>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <Grid item  className=\"text-center\" xs={2} sm={1} md={1}>\r\n                                                    {each.name==subMethod ? <div className={dashboardClasses.fillCircle} />: <div className={dashboardClasses.emptyCircle} />}\r\n                                                </Grid>\r\n                                            </Grid>)\r\n                                            }\r\n                                        </div>\r\n                                        { addressDemand ? <div key={3} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <p className=\"text-center\" color=\"textSecondary\">\r\n                                                Enter the token address you would like to lock for\r\n                                            </p>\r\n                                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\" style={{width:'-webkit-fill-available'}}>\r\n                                                <InputLabel htmlFor=\"digital-asset-erc20-compatible-interchained-ilock\">Address</InputLabel>\r\n                                                <OutlinedInput\r\n                                                    id=\"digital-asset-erc20-compatible-interchained-ilock\"\r\n                                                    type=\"text\"\r\n                                                    value={values.tokenAddress}\r\n                                                    onChange={handleChange}\r\n                                                    endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                        aria-label=\"toggle search\"\r\n                                                        onClick={handleLockToken}\r\n                                                        onKeyDown={handleMouseDownPassword}\r\n                                                        onMouseDown={handleMouseDownPassword}\r\n                                                        edge=\"end\"\r\n                                                        >\r\n                                                        <Search />\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                    }\r\n                                                    label=\"Password\"\r\n                                                />\r\n                                            </FormControl>\r\n                                            \r\n                                            {\r\n                                                tokenContract && token.symbol ? \r\n                                                <div style={{paddingLeft:20, paddingRight:20}}>\r\n                                                    <p style={{margin:\"0px\"}}>Token Found</p>\r\n                                                    <Grid \r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        justifyContent=\"space-between\"\r\n                                                        alignItems=\"center\"\r\n                                                    >\r\n                                                        <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                            <img className={dashboardClasses.tokenImage} src=\"/lock.png\" alt=\"network\" />\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.tokenTitle}>\r\n                                                                {token.symbol}\r\n                                                            </p>\r\n                                                        </Grid>\r\n                                                        <Grid item className={dashboardClasses.textRight}  xs={6} sm={6} md={6}>\r\n                                                            <Button variant=\"contained\" color=\"error\" sm={12} onClick={selectToken}>Select</Button>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </div> : <></>\r\n                                            }\r\n                                            \r\n                                        </div> : handleNext && <></> }\r\n                                        <div id=\"iLockerDeploy\" key={4} style={{paddingLeft:1, paddingRight:1}}>\r\n                                            <br />\r\n                                            { addressDemand ? <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        id=\"standard-number-decimals\"\r\n                                                        label=\"Token Decimals\"\r\n                                                        type=\"number\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 0, max: 18 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 0, max: 18 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleTokenDecimals}\r\n                                                        value={tokenDecimals}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid> : <span></span> }\r\n                                            <br />\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        id=\"standard-number-amount\"\r\n                                                        label=\"Lock Amount\"\r\n                                                        type=\"number\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 1 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 1 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleLockAmount}\r\n                                                        value={lockAmount}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item className={dashboardClasses.textRight}  xs={6} sm={6} md={6}>\r\n                                                    <p style={{marginBottom:2, marginTop:0, fontSize: \"10px\"}}>Balance: {addressDemand ? (test_data.userBalance / Math.pow(10, tokenDecimals)).toFixed(2) : etherBalance}</p>\r\n                                                    <Grid \r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        justifyContent=\"space-between\"\r\n                                                        alignItems=\"center\"\r\n                                                    >\r\n                                                        <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                            <Button variant=\"contained\" color=\"error\" sm={12} onClick={selectLockAmountMax}>Max</Button>\r\n                                                        </Grid>\r\n                                                        <Grid item className={dashboardClasses.textRight} xs={6} sm={6} md={6}>\r\n                                                            <img style={{height:30}} src=\"/lock.png\" alt=\"network\" />\r\n                                                            <p  color=\"textSecondary\" className={dashboardClasses.tokenTitle}>\r\n                                                                {token.symbol}\r\n                                                            </p>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <br />\r\n                                             <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={dashboardClasses.balanceContainer}\r\n                                            >\r\n                                                <Grid item className={dashboardClasses.textLeft} xs={6} sm={6} md={6}>\r\n                                                    <TextField\r\n                                                        id=\"standard-holder\"\r\n                                                        label=\"Holder\"\r\n                                                        type=\"text\"\r\n                                                        InputLabelProps={{\r\n                                                            shrink: true,\r\n                                                            inputprops: { min: 1 }\r\n                                                        }}\r\n                                                        InputProps={{ inputprops: { min: 1 } }}\r\n                                                        variant=\"standard\"\r\n                                                        onChange={handleHolder}\r\n                                                        value={holder}\r\n                                                    />\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <br />\r\n                                            <Grid \r\n                                                container\r\n                                                direction=\"row\"\r\n                                                justifyContent=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                                className={!isMobile ? `${dashboardClasses.balanceContainer}` : `${mobileClasses.balanceContainer}`}\r\n                                            >\r\n                                                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                                        <DateTimePicker\r\n                                                            id=\"standard-number-date\"\r\n                                                            label=\"Unlock Date\"\r\n                                                            renderInput={(props) => <TextField {...props} className={isMobile ? `${mobileClasses.datetimepicker}` : ``} />}\r\n                                                            value={withdrawDate}\r\n                                                            onChange={(value) => handleDate(value)}\r\n                                                        />\r\n                                                    </LocalizationProvider>\r\n                                                    <div>\r\n                                                    {\r\n                                                        !addressDemand || isAllowed == 2 ? <Button variant=\"contained\" color=\"secondary\" sm={12} disabled={!dateUseful} value={addressDemand} onClick={depositToken} className={isMobile ? `${mobileClasses.button}` : ``}>Deposit</Button>\r\n                                                        : (isAllowed == 1 ? <Button variant=\"contained\" color=\"secondary\" sm={12} onClick={approveToken} className={isMobile ? `${mobileClasses.button}` : ``}>Approve</Button> : <Button variant=\"contained\" color=\"secondary\" sm={12} onClick={approveToken} className={isMobile ? `${mobileClasses.button}` : ``}>Approve</Button>)\r\n                                                    }\r\n                                                    </div>\r\n                                            </Grid>\r\n                                        </div>\r\n                                    </SwipeableViews>\r\n                                    <MobileStepper\r\n                                        className={dashboardClasses.mobileStepper}\r\n                                        steps={maxSteps}\r\n                                        position=\"static\"\r\n                                        activeStep={activeStep}\r\n                                        nextButton={\r\n                                        <Button\r\n                                            size=\"small\"\r\n                                            onClick={handleNext}\r\n                                            disabled={activeStep === maxSteps - 1}\r\n                                        >\r\n                                            Next\r\n                                            {theme.direction === 'rtl' ? (\r\n                                            <KeyboardArrowLeft />\r\n                                            ) : (\r\n                                            <KeyboardArrowRight />\r\n                                            )}\r\n                                        </Button>\r\n                                        }\r\n                                        backButton={\r\n                                        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                                            {theme.direction === 'rtl' ? (\r\n                                            <KeyboardArrowRight />\r\n                                            ) : (\r\n                                            <KeyboardArrowLeft />\r\n                                            )}\r\n                                            Back\r\n                                        </Button>\r\n                                        }\r\n                                    />\r\n                                </RadioGroup>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    {\r\n                        lockerListEnabled ? <Grid className={isMobile ? `${mobileClasses.root} grid `  : \"grid\"} style={{marginTop:40}} item xs={12} sm={12} md={12} >\r\n                        <Card className=\"card\">\r\n                            <CardHeader\r\n                                className={dashboardClasses.cardHeader}\r\n                                title=\"Locked Token List\"\r\n                            />\r\n                            <CardContent >\r\n                            {/* <TextField\r\n                                id=\"outlined-search\"\r\n                                label=\"Search other wallet\"\r\n                                type=\"search\"\r\n                                variant=\"standard\"\r\n                                fullWidth={true}\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onKeyPress={searchOtherWallet}\r\n                                value={searchWallet}\r\n                                onChange={onChangeSearchWallet}\r\n                                error={searchOtherWalletError}\r\n                                helperText={searchHelperText}\r\n                            /> */}\r\n                                {data.length == 0 && \r\n                                <div className=\"text-center\" style={{width:'100%', padding:\"20px 0px\"}}>\r\n                                    <img src=\"/mylock.png\" alt=\"My Lock\" style={{height:200}}/>\r\n                                    <h2 style={{marginBottom:0}}>No Locked Coin</h2>\r\n                                    <p style={{color:'grey',margin:0}}>You have not locked up any coins yet.</p>\r\n                                </div>}\r\n                                {data.length != 0 && <TableContainer component={Paper}>\r\n                                    <Table aria-label=\"collapsible table\">\r\n                                        <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>No</TableCell>\r\n                                            <TableCell>Token</TableCell>\r\n                                            <TableCell align=\"right\">Tokens Locked</TableCell>\r\n                                            <TableCell align=\"right\">Liquidity Locked</TableCell>\r\n                                            <TableCell align=\"right\">Next Unlock</TableCell>\r\n                                            <TableCell align=\"right\"></TableCell>\r\n                                        </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                        {data.map((row, index) => (\r\n                                            <Row key={`lockToken-${index}`} row={row} index={index} />\r\n                                        ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>}\r\n                            </CardContent>\r\n                        </Card>\r\n                        \r\n                    </Grid> : <Loader value={loaderText} />\r\n                    }\r\n                </Grid>\r\n            </Box>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    \r\n                    {networkData.find((item)=>item.name==network) && <div style={{textAlign:'center'}}><img style={{width:\"50px\"}} src={networkData.find((item)=>item.name==network).url} alt=\"network\" /></div>}\r\n                    <h3 id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" style={{textAlign:'center', marginTop:0}}>\r\n                        {modalTitle}\r\n                    </h3>\r\n                    <p id=\"modal-modal-description\" sx={{ mt: 2 }} style={{textAlign:'center', fontSize:12, color:'grey'}}>\r\n                        {modalDes}\r\n                    </p>\r\n                    <Button variant=\"contained\" color=\"error\" style={{width:'100%'}} onClick={handleClose}>Close</Button>\r\n                </Box>\r\n            </Modal>\r\n            <Snackbar\r\n                open={snackbar}\r\n                autoHideDuration={600}\r\n                style={{width:100}}\r\n                onClose={handleSnackbarClose}\r\n                message=\"Successfully Copied to Clipboard\"\r\n                // action={action}\r\n            />\r\n        </Container >\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    statistics: state.statistics,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Dashboard);"],"sourceRoot":""}