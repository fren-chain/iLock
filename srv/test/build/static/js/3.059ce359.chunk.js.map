{"version":3,"sources":["../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/icons-material/KeyboardArrowLeft.js","../node_modules/@mui/icons-material/KeyboardArrowRight.js","../node_modules/@mui/lab/LocalizationProvider/LocalizationProvider.js","../node_modules/@mui/lab/AdapterDateFns/AdapterDateFns.js","../node_modules/@mui/lab/DateTimePicker/DateTimePicker.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../node_modules/@mui/material/RadioGroup/RadioGroup.js","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/Stack/Stack.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@mui/material/MobileStepper/mobileStepperClasses.js","../node_modules/@mui/material/MobileStepper/MobileStepper.js","../node_modules/bignumber.js/bignumber.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","warnedOnce","LocalizationProvider","React","console","warn","join","AdapterDateFns","_createClass","_classCallCheck","DateTimePicker","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","styled","name","overridesResolver","props","styles","ownerState","root","row","_ref","_extends","display","flexDirection","flexWrap","FormGroup","inProps","ref","useThemeProps","className","_props$row","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","error","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","RadioGroupContext","undefined","RadioGroup","actions","children","defaultValue","nameProp","onChange","valueProp","rootRef","_useControlled","useControlled","controlled","_useControlled2","_slicedToArray","setValueState","focus","input","current","querySelector","handleRef","useForkRef","useId","contextValue","event","target","Provider","role","getUnit","String","match","toUnitless","length","parseFloat","getSkeletonUtilityClass","_t","_t2","_t3","_t4","pulseKeyframe","keyframes","_templateObject","_taggedTemplateLiteral","waveKeyframe","_templateObject2","SkeletonRoot","variant","animation","hasChildren","withChildren","width","fitContent","height","heightAuto","theme","radiusUnit","shape","borderRadius","radiusValue","backgroundColor","vars","palette","Skeleton","bg","alpha","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","concat","Math","round","content","visibility","maxWidth","_ref2","css","_templateObject3","_ref3","_templateObject4","action","hover","_props$animation","_props$component","component","style","_props$variant","Boolean","as","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","useThemePropsDefault","useThemePropsSystem","joinChildren","separator","childrenArray","toArray","filter","reduce","output","child","index","push","key","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","deepmerge","useFlexGap","gap","getValue","_defineProperty","margin","column","mergeBreakpointsInOrder","Stack","options","arguments","_options$createStyled","createStyledComponent","_options$useThemeProp","_options$componentNam","componentName","StackRoot","themeProps","extendSxProp","_props$direction","_props$spacing","divider","_props$useFlexGap","createStack","getInputAdornmentUtilityClass","_span","inputAdornmentClasses","InputAdornmentRoot","capitalize","position","disablePointerEvents","maxHeight","alignItems","whiteSpace","color","active","positionStart","hiddenLabel","marginRight","marginLeft","pointerEvents","InputAdornment","_props$disablePointer","_props$disableTypogra","disableTypography","variantProp","size","FormControlContext","_jsxs","Typography","getMobileStepperUtilityClass","MobileStepperRoot","Paper","justifyContent","background","padding","bottom","left","right","zIndex","mobileStepper","top","MobileStepperDots","dots","MobileStepperDot","shouldForwardProp","prop","slotShouldForwardProp","dotActive","dot","transition","transitions","create","duration","shortest","disabled","main","MobileStepperProgress","LinearProgress","progress","_ref4","MobileStepper","_props$activeStep","activeStep","backButton","LinearProgressProps","nextButton","_props$position","steps","square","elevation","_toConsumableArray","Array","map","_","ceil","globalObject","BigNumber","isNumeric","mathceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","n","i","coeffToString","a","s","z","j","r","charCodeAt","slice","compare","x","y","b","xc","c","yc","k","e","l","intCheck","min","max","Error","isOdd","toExponential","str","charAt","toFixedPoint","len","zs","clone","configObject","div","convertBase","parseNumeric","P","prototype","constructor","toString","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","v","alphabet","caseChanged","isNum","this","_isBigNumber","test","indexOf","replace","search","substring","DEBUG","toUpperCase","toLowerCase","format","rm","id","c0","ne","maxOrMin","args","method","m","call","normalise","pop","sd","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","set","obj","p","hasOwnProperty","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","lt","minimum","gt","random","pow2_53","random53bitInt","dp","rand","Uint32Array","copy","splice","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","arr","reverse","sign","callerIsToString","pow","multiply","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","t","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","toJSON","define"],"mappings":"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","file":"static/js/3.059ce359.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n}), 'KeyboardArrowLeft');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexports.default = _default;","import * as React from 'react';\nlet warnedOnce = false;\nconst warn = () => {\n  if (!warnedOnce) {\n    console.warn(['MUI: The LocalizationProvider component was moved from `@mui/lab` to `@mui/x-date-pickers`.', '', \"You should use `import { LocalizationProvider } from '@mui/x-date-pickers'`\", \"or `import { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'`\", '', 'More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/.'].join('\\n'));\n    warnedOnce = true;\n  }\n};\n/**\n * @ignore - do not document.\n */\nconst LocalizationProvider = /*#__PURE__*/React.forwardRef(function DeprecatedLocalizationProvider() {\n  warn();\n  return null;\n});\nexport default LocalizationProvider;","let warnedOnce = false;\nconst warn = () => {\n  if (!warnedOnce) {\n    console.warn(['MUI: The AdapterDateFns class was moved from `@mui/lab` to `@mui/x-date-pickers`', '', \"You should use `import { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns'`\", '', 'More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/.'].join('\\n'));\n    warnedOnce = true;\n  }\n};\n\n// tslint:disable-next-line:no-unnecessary-class\nexport default class AdapterDateFns {\n  constructor() {\n    warn();\n  }\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from 'react';\nlet warnedOnce = false;\nconst warn = () => {\n  if (!warnedOnce) {\n    console.warn(['MUI: The DateTimePicker component was moved from `@mui/lab` to `@mui/x-date-pickers`.', '', \"You should use `import { DateTimePicker } from '@mui/x-date-pickers'`\", \"or `import { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker'`\", '', 'More information about this migration on our blog: https://mui.com/blog/lab-date-pickers-to-mui-x/.'].join('\\n'));\n    warnedOnce = true;\n  }\n};\n/**\n * @ignore - do not document.\n */\nconst DateTimePicker = /*#__PURE__*/React.forwardRef(function DeprecatedDateTimePicker() {\n  warn();\n  return null;\n});\nexport default DateTimePicker;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\", \"className\", \"useFlexGap\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport systemStyled from '../styled';\nimport useThemePropsSystem from '../useThemeProps';\nimport { extendSxProp } from '../styleFunctionSx';\nimport createTheme from '../createTheme';\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from '../breakpoints';\nimport { createUnarySpacing, getValue } from '../spacing';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n        component = 'div',\n        direction = 'column',\n        spacing = 0,\n        divider,\n        children,\n        className,\n        useFlexGap = false\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: divider ? joinChildren(children, divider) : children\n    }));\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","import PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getMobileStepperUtilityClass(slot) {\n  return generateUtilityClass('MuiMobileStepper', slot);\n}\nconst mobileStepperClasses = generateUtilityClasses('MuiMobileStepper', ['root', 'positionBottom', 'positionTop', 'positionStatic', 'dots', 'dot', 'dotActive', 'progress']);\nexport default mobileStepperClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"activeStep\", \"backButton\", \"className\", \"LinearProgressProps\", \"nextButton\", \"position\", \"steps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Paper from '../Paper';\nimport capitalize from '../utils/capitalize';\nimport LinearProgress from '../LinearProgress';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { slotShouldForwardProp } from '../styles/styled';\nimport { getMobileStepperUtilityClass } from './mobileStepperClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    position\n  } = ownerState;\n  const slots = {\n    root: ['root', `position${capitalize(position)}`],\n    dots: ['dots'],\n    dot: ['dot'],\n    dotActive: ['dotActive'],\n    progress: ['progress']\n  };\n  return composeClasses(slots, getMobileStepperUtilityClass, classes);\n};\nconst MobileStepperRoot = styled(Paper, {\n  name: 'MuiMobileStepper',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`position${capitalize(ownerState.position)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  background: (theme.vars || theme).palette.background.default,\n  padding: 8\n}, ownerState.position === 'bottom' && {\n  position: 'fixed',\n  bottom: 0,\n  left: 0,\n  right: 0,\n  zIndex: (theme.vars || theme).zIndex.mobileStepper\n}, ownerState.position === 'top' && {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  right: 0,\n  zIndex: (theme.vars || theme).zIndex.mobileStepper\n}));\nconst MobileStepperDots = styled('div', {\n  name: 'MuiMobileStepper',\n  slot: 'Dots',\n  overridesResolver: (props, styles) => styles.dots\n})(({\n  ownerState\n}) => _extends({}, ownerState.variant === 'dots' && {\n  display: 'flex',\n  flexDirection: 'row'\n}));\nconst MobileStepperDot = styled('div', {\n  name: 'MuiMobileStepper',\n  slot: 'Dot',\n  shouldForwardProp: prop => slotShouldForwardProp(prop) && prop !== 'dotActive',\n  overridesResolver: (props, styles) => {\n    const {\n      dotActive\n    } = props;\n    return [styles.dot, dotActive && styles.dotActive];\n  }\n})(({\n  theme,\n  ownerState,\n  dotActive\n}) => _extends({}, ownerState.variant === 'dots' && _extends({\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: (theme.vars || theme).palette.action.disabled,\n  borderRadius: '50%',\n  width: 8,\n  height: 8,\n  margin: '0 2px'\n}, dotActive && {\n  backgroundColor: (theme.vars || theme).palette.primary.main\n})));\nconst MobileStepperProgress = styled(LinearProgress, {\n  name: 'MuiMobileStepper',\n  slot: 'Progress',\n  overridesResolver: (props, styles) => styles.progress\n})(({\n  ownerState\n}) => _extends({}, ownerState.variant === 'progress' && {\n  width: '50%'\n}));\nconst MobileStepper = /*#__PURE__*/React.forwardRef(function MobileStepper(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMobileStepper'\n  });\n  const {\n      activeStep = 0,\n      backButton,\n      className,\n      LinearProgressProps,\n      nextButton,\n      position = 'bottom',\n      steps,\n      variant = 'dots'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    activeStep,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(MobileStepperRoot, _extends({\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [backButton, variant === 'text' && /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [activeStep + 1, \" / \", steps]\n    }), variant === 'dots' && /*#__PURE__*/_jsx(MobileStepperDots, {\n      ownerState: ownerState,\n      className: classes.dots,\n      children: [...new Array(steps)].map((_, index) => /*#__PURE__*/_jsx(MobileStepperDot, {\n        className: clsx(classes.dot, index === activeStep && classes.dotActive),\n        ownerState: ownerState,\n        dotActive: index === activeStep\n      }, index))\n    }), variant === 'progress' && /*#__PURE__*/_jsx(MobileStepperProgress, _extends({\n      ownerState: ownerState,\n      className: classes.progress,\n      variant: \"determinate\",\n      value: Math.ceil(activeStep / (steps - 1) * 100)\n    }, LinearProgressProps)), nextButton]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MobileStepper.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the active step (zero based index).\n   * Defines which dot is highlighted when the variant is 'dots'.\n   * @default 0\n   */\n  activeStep: integerPropType,\n  /**\n   * A back button element. For instance, it can be a `Button` or an `IconButton`.\n   */\n  backButton: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Props applied to the `LinearProgress` element.\n   */\n  LinearProgressProps: PropTypes.object,\n  /**\n   * A next button element. For instance, it can be a `Button` or an `IconButton`.\n   */\n  nextButton: PropTypes.node,\n  /**\n   * Set the positioning type.\n   * @default 'bottom'\n   */\n  position: PropTypes.oneOf(['bottom', 'static', 'top']),\n  /**\n   * The total steps.\n   */\n  steps: integerPropType.isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'dots'\n   */\n  variant: PropTypes.oneOf(['dots', 'progress', 'text'])\n} : void 0;\nexport default MobileStepper;",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n"],"sourceRoot":""}